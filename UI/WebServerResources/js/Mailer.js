!function(){"use strict";function a(a,l){if(a.state("mail",{url:"/Mail",views:{mailboxes:{templateUrl:"UIxMailMainFrame",controller:"MailboxesController",controllerAs:"app"}},resolve:{stateAccounts:b}}).state("mail.account",{url:"/:accountId",abstract:!0,views:{mailbox:{template:"<ui-view/>"}},resolve:{stateAccount:c}}).state("mail.account.virtualMailbox",{url:"/virtual",views:{"mailbox@mail":{templateUrl:"UIxMailFolderTemplate",controller:"MailboxController",controllerAs:"mailbox"}},resolve:{stateMailbox:g}}).state("mail.account.virtualMailbox.message",{url:"/:mailboxId/:messageId",views:{message:{templateUrl:"UIxMailViewTemplate",controller:"MessageController",controllerAs:"viewer"}},resolve:{stateMailbox:h,stateMessages:f,stateMessage:i},onEnter:j,onExit:k}).state("mail.account.inbox",{url:"/inbox",onEnter:e}).state("mail.account.mailbox",{url:"/:mailboxId",views:{"mailbox@mail":{templateUrl:"UIxMailFolderTemplate",controller:"MailboxController",controllerAs:"mailbox"}},resolve:{stateMailbox:d,stateMessages:f}}).state("mail.account.mailbox.message",{url:"/:messageId",views:{message:{templateUrl:"UIxMailViewTemplate",controller:"MessageController",controllerAs:"viewer"}},onEnter:j,onExit:k,resolve:{stateMessage:i}}),l.otherwise("/Mail/0/inbox"),navigator&&navigator.registerProtocolHandler){var m=window.location.origin+window.ApplicationBaseURL+"UIxMailPopupView#!/Mail/0/INBOX/new?%s";navigator.registerProtocolHandler("mailto",m,"SOGo")}}function b(a,b,c){var d=c.$findAll(a.mailAccounts),e=[];return angular.forEach(d,function(a,b){var c=a.$getMailboxes();0===b?e.push(c.then(function(b){return a})):e.push(a)}),b.all(e)}function c(a,b){return _.find(b,function(b){return b.id==a.accountId})}function d(a,b,c,d,e){var f,g,h=d(b.mailboxId);return g=function(a){var b=_.find(a,function(a){return a.path==h});return b||angular.forEach(a,function(a){!b&&a.children&&a.children.length>0&&(b=g(a.children))}),b},e.selectedFolder&&!e.$virtualMode&&(e.selectedFolder.$isLoading=!0),f=g(c.$mailboxes),f?(f.$topIndex=0,f.selectFolder(),f):a.reject("Mailbox doesn't exist")}function e(a,b,c){var d=a.injector().getAsync("stateAccount");return d.then(function(d){return d.$mailboxes.length>0?a.router.stateService.target("mail.account.mailbox",{accountId:d.id,mailboxId:b(d.$mailboxes[0].path)}):(c.selectedFolder=!1,a.router.stateService.target("mail"))})}function f(a,b,c,d){var e;return c.$virtualMode?[]:e=d?d.$filter().catch(function(){return a.reject("Mailbox not found")}):a.reject("Mailbox doesn't exist")}function g(a,b){return b.$virtualMode?b.selectedFolder:a.reject("No virtual mailbox defined")}function h(a,b,c,d){var e=c(d.mailboxId);return b.$virtualMode?(b.selectedFolder.resetSelectedMessage(),_.find(b.selectedFolder.$mailboxes,function(a){return a.path==e})):a.reject("No virtual mailbox defined for message")}function i(a,b,c,d,e,f){var g;return(g=_.find(e.$messages,function(a){return a.uid==parseInt(c.messageId)}))?g.$reload({useCache:!0}):void d.go("mail.account.mailbox",{accountId:e.$account.id,mailboxId:b(e.path)})}function j(a,b){b.selectedMessage=parseInt(a.messageId)}function k(a){delete a.selectedMessage}function l(a,b,c,d,e){a.DebugEnabled||d.defaultErrorHandler(function(){}),b.onError({to:"mail.**"},function(a){"mail"!=a.to().name&&!a.ignored()&&a.error().message.indexOf("superseded")<0&&(c.error("transition error to "+a.to().name),e.selectedFolder=!1,d.go("mail"))})}angular.module("SOGo.MailerUI",["ngCookies","ui.router","ck","angularFileUpload","SOGo.Common","SOGo.ContactsUI","SOGo.SchedulerUI","ngAnimate","SOGo.PreferencesUI"]).config(a).run(l),a.$inject=["$stateProvider","$urlRouterProvider"],b.$inject=["$window","$q","Account"],c.$inject=["$stateParams","stateAccounts"],d.$inject=["$q","$stateParams","stateAccount","decodeUriFilter","Mailbox"],e.$inject=["$transition$","encodeUriFilter","Mailbox"],f.$inject=["$q","$state","Mailbox","stateMailbox"],g.$inject=["$q","Mailbox"],h.$inject=["$q","Mailbox","decodeUriFilter","$stateParams"],i.$inject=["Mailbox","encodeUriFilter","$stateParams","$state","stateMailbox","stateMessages"],j.$inject=["$stateParams","stateMailbox"],k.$inject=["stateMailbox"],l.$inject=["$window","$transitions","$log","$state","Mailbox"]}();
//# sourceMappingURL=Mailer.js.map
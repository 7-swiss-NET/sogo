!function(){"use strict";function e(e,a){e.state("app",{url:"/addressbooks",abstract:!0,views:{addressbooks:{templateUrl:"UIxContactFoldersView",controller:"AddressBooksController",controllerAs:"app"}},resolve:{stateAddressbooks:t}}).state("app.addressbook",{url:"/:addressbookId",views:{addressbook:{templateUrl:"addressbook",controller:"AddressBookController",controllerAs:"addressbook"}},resolve:{stateAddressbook:o}}).state("app.addressbook.new",{url:"/{contactType:(?:card|list)}/new",views:{card:{templateUrl:"UIxContactEditorTemplate",controller:"CardController",controllerAs:"editor"}},resolve:{stateCard:r}}).state("app.addressbook.card",{url:"/:cardId",abstract:!0,views:{card:{template:"<ui-view/>"}},resolve:{stateCard:s},onEnter:d,onExit:n}).state("app.addressbook.card.view",{url:"/view",views:{"card@app.addressbook":{templateUrl:"UIxContactViewTemplate",controller:"CardController",controllerAs:"editor"}}}).state("app.addressbook.card.editor",{url:"/edit",views:{"card@app.addressbook":{templateUrl:"UIxContactEditorTemplate",controller:"CardController",controllerAs:"editor"}}}),a.otherwise("/addressbooks/personal")}function t(e){return e.$findAll(window.contactFolders)}function o(e,t,o,r){var s=_.find(r.$findAll(),function(e){return e.id==o.addressbookId});return s?(delete s.selectedCard,s.$reload(),s):e.reject("Addressbook "+o.addressbookId+" not found")}function r(e,t,o){var r="v"+e.contactType,s=new o({pid:e.addressbookId,c_component:r});return t.selectedCard=!0,s}function s(e,t,o){return o.$futureAddressBookData.then(function(){var r=_.find(o.$cards,function(e){return e.id==t.cardId});if(r)return r.$reload();e.go("app.addressbook")})}function d(e,t){t.selectedCard=e.cardId}function n(e){delete o.selectedCard}function a(e,t,o){e.$on("$stateChangeError",function(e,r,s,d,n,a){t.error(a),o.go("app.addressbook",{addressbookId:"personal"})}),e.$on("$routeChangeError",function(e,o,r,s){t.error(e,o,r,s)})}angular.module("SOGo.ContactsUI",["ngCookies","ui.router","angularFileUpload","ck","SOGo.Common","SOGo.PreferencesUI","SOGo.MailerUI"]).config(e).run(a),e.$inject=["$stateProvider","$urlRouterProvider"],t.$inject=["AddressBook"],o.$inject=["$q","$state","$stateParams","AddressBook"],r.$inject=["$stateParams","stateAddressbook","Card"],s.$inject=["$state","$stateParams","stateAddressbook"],d.$inject=["$stateParams","stateAddressbook"],n.$inject=["stateAddressbook"],a.$inject=["$rootScope","$log","$state"]}(),function(){"use strict";function e(e,t,o,r,s,d,n,a,c,i,u,p,f,h,m,$){function g(e){r.go("app.addressbook.card.view",{cardId:e.id})}function k(e,t){var o,r,s,d=O.selectedFolder;if(t||(t=d.$selectedCard()),t.selected=!t.selected,O.mode.multiple+=t.selected?1:-1,e.shiftKey&&d.$selectedCount()>1){for(r=(o=d.idsMap[t.id])-2;r>=0&&!d.$cards[r].selected;)r--;if(r<0)for(r=o+2;r<d.getLength()&&!d.$cards[r].selected;)r++;if(r>=0&&r<d.getLength())for(s=Math.min(o,r);s<=Math.max(o,r);s++)d.$cards[s].selected=!0}e.preventDefault(),e.stopPropagation()}function b(e){r.go("app.addressbook.new",{contactType:e})}function v(){_.forEach(O.selectedFolder.$cards,function(e){e.selected=!1}),O.mode.multiple=0}function C(e){var t=O.selectedFolder.$selectedCardIndex();return angular.isDefined(t)?(t--,O.selectedFolder.$topIndex>0&&O.selectedFolder.$topIndex--):(t=O.selectedFolder.$cards.length()-1,O.selectedFolder.$topIndex=O.selectedFolder.getLength()),t>-1&&g(O.selectedFolder.$cards[t]),e.preventDefault(),t}function w(e){var t=O.selectedFolder.$selectedCardIndex();return angular.isDefined(t)?(t++,O.selectedFolder.$topIndex<O.selectedFolder.$cards.length&&O.selectedFolder.$topIndex++):t=0,t<O.selectedFolder.$cards.length?g(O.selectedFolder.$cards[t]):t=-1,e.preventDefault(),t}function y(e){var t;O.selectedFolder.hasSelectedCard()&&(t=C(e))>=0&&k(e,O.selectedFolder.$cards[t])}function F(e){var t;O.selectedFolder.hasSelectedCard()&&(t=w(e))>=0&&k(e,O.selectedFolder.$cards[t])}function A(e){var t=O.selectedFolder.$selectedCards();_.size(t)>0&&p.confirm(l("Warning"),l("Are you sure you want to delete the selected contacts?"),{ok:l("Delete")}).then(function(){O.selectedFolder.$deleteCards(t).then(function(){O.mode.multiple=0,O.selectedFolder.selectedCard||r.go("app.addressbook")})}),e.preventDefault()}function S(e,t){var o,s,d,a,c,i,u;o=O.selectedFolder,c=!1,s=o.$selectedCards(),(d=_.filter(s,function(e){return e.$isCard()})).length!=s.length&&n.show(n.simple().content(l("Lists can't be moved or copied.")).position("top right").hideDelay(2e3)),d.length&&("copy"==e?(i=o.$copyCards(d,t),u=l("%{0} card(s) copied",d.length)):(i=o.$moveCards(d,t),u=l("%{0} card(s) moved",d.length),a=_.map(d,"id"),c=o.selectedCard&&a.indexOf(o.selectedCard)>=0),i.then(function(){c&&r.go("app.addressbook"),n.show(n.simple().content(u).position("top right").hideDelay(2e3))}))}function D(e){S("copy",e)}function I(e){S("move",e)}function U(){_.forEach(O.selectedFolder.$cards,function(e){e.selected=!0}),O.mode.multiple=O.selectedFolder.$cards.length}function E(e){O.selectedFolder.$filter("",{sort:e})}function T(e){return i.$query.sort==e}function x(){O.mode.search=!0,u("search")}function M(){O.mode.search=!1,O.selectedFolder.$filter("")}function j(e,t,o){a.$findAll().then(function(r){var s=_.find(r,function(e){if(0===e.id)return e});s.$getMailboxes().then(function(r){s.$newMessage().then(function(r){r.editable[o]=t,d.show({parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,escapeToClose:!1,templateUrl:"../Mail/UIxMailEditor",controller:"MessageEditorController",controllerAs:"editor",locals:{stateAccount:s,stateMessage:r}})})})})}function H(e,t,o){var r=[o+" <"+t+">"];O.newMessage(e,r,"to"),e.stopPropagation(),e.preventDefault()}function P(e,o){var r=_.filter(O.selectedFolder.$cards,function(e){return e.selected}),s=[],d=[];_.forEach(r,function(e){e.$isList({expandable:!0})?angular.isDefined(e.refs)&&e.refs.length?_.forEach(e.refs,function(e){e.email.length&&d.push(e.$shortFormat())}):s.push(e.$reload().then(function(e){_.forEach(e.refs,function(e){e.email.length&&d.push(e.$shortFormat())})})):e.c_mail.length&&d.push(e.$shortFormat())}),t.all(s).then(function(){(d=_.uniq(d)).length&&O.newMessage(e,d,o)})}var O=this,L=[];i.selectedFolder=$,O.service=i,O.selectedFolder=$,O.selectCard=g,O.toggleCardSelection=k,O.newComponent=b,O.unselectCards=v,O.confirmDeleteSelectedCards=A,O.copySelectedCards=D,O.moveSelectedCards=I,O.selectAll=U,O.sort=E,O.sortedBy=T,O.searchMode=x,O.cancelSearch=M,O.newMessage=j,O.newMessageWithSelectedCards=P,O.newMessageWithRecipient=H,O.mode={search:!1,multiple:0},function(e){e.push(h.createHotkey({key:l("hotkey_search"),description:l("Search"),callback:x})),e.push(h.createHotkey({key:l("key_create_card"),description:l("Create a new address book card"),callback:angular.bind(O,b,"card")})),e.push(h.createHotkey({key:l("key_create_list"),description:l("Create a new list"),callback:angular.bind(O,b,"list")})),e.push(h.createHotkey({key:"space",description:l("Toggle item"),callback:k})),e.push(h.createHotkey({key:"shift+space",description:l("Toggle range of items"),callback:k})),e.push(h.createHotkey({key:"up",description:l("View next item"),callback:C})),e.push(h.createHotkey({key:"down",description:l("View previous item"),callback:w})),e.push(h.createHotkey({key:"shift+up",description:l("Add next item to selection"),callback:y})),e.push(h.createHotkey({key:"shift+down",description:l("Add previous item to selection"),callback:F})),e.push(h.createHotkey({key:"backspace",description:l("Delete selected card or address book"),callback:A})),_.forEach(e,function(e){h.registerHotkey(e)})}(L),e.$on("$destroy",function(){_.forEach(L,function(e){h.deregisterHotkey(e)})})}e.$inject=["$scope","$q","$window","$state","$timeout","$mdDialog","$mdToast","Account","Card","AddressBook","sgFocus","Dialog","sgSettings","sgHotkeys","stateAddressbooks","stateAddressbook"],angular.module("SOGo.ContactsUI").controller("AddressBookController",e)}(),function(){"use strict";function e(e,t,o,r,s,d,n,a,c,i,u,p,f,h,m,$,g,k,b,v,C){function w(e,o){t.params.addressbookId!=o.id&&H.editMode!=o.id?(H.editMode=!1,g.$query.value="",i(f["gt-md"])||u("left").close(),t.go("app.addressbook",{addressbookId:o.id})):(e.preventDefault(),e.stopPropagation())}function y(){k.prompt(l("New Addressbook..."),l("Name of the Address Book")).then(function(e){var t=new g({name:e,isEditable:!0,isRemote:!1,owner:UserLogin});g.$add(t)})}function F(e){e.isRemote||(H.editMode=e.id,H.originalAddressbook=e.$omit(),m("addressBookName_"+e.id))}function A(e){e.name=H.originalAddressbook.name,H.editMode=!1}function S(e){var t=e.name;t&&t.length>0&&t!=H.originalAddressbook.name&&e.$rename(t).then(function(e){H.editMode=!1},function(e,t){k.alert(l("Warning"),e)})}function D(){H.service.selectedFolder.isSubscription?H.service.selectedFolder.$delete().then(function(){H.service.selectedFolder=null,t.go("app.addressbook",{addressbookId:"personal"})},function(e,t){k.alert(l('An error occured while deleting the addressbook "%{0}".',H.service.selectedFolder.name),l(e.error))}):k.confirm(l("Warning"),l('Are you sure you want to delete the addressbook "%{0}"?',H.service.selectedFolder.name),{ok:l("Delete")}).then(function(){return H.service.selectedFolder.$delete()}).then(function(){return H.service.selectedFolder=null,t.go("app.addressbook",{addressbookId:"personal"}),!0}).catch(function(e){if(e){var t=e.data.message||e.statusText;k.alert(l('An error occured while deleting the addressbook "%{0}".',H.service.selectedFolder.name),t)}})}function I(e,t){function o(e,t,o){function r(e){var t=0===e.type.indexOf("text")||/\.(ldif|vcf|vcard)$/.test(e.name);return t||c.show({template:["<md-toast>",'  <div class="md-toast-content">','    <md-icon class="md-warn md-hue-1">error_outline</md-icon>',"    <span>"+l("Select a vCard or LDIF file.")+"</span>","  </div>","</md-toast>"].join(""),position:"top right",hideDelay:3e3}),t}var s=this;s.uploader=new p({url:ApplicationBaseURL+[o.id,"import"].join("/"),autoUpload:!0,queueLimit:1,filters:[{name:r,fn:r}],onSuccessItem:function(e,o,r,s){var d;t.hide(),0===o.imported?d=l("No card was imported."):(d=l("A total of %{0} cards were imported in the addressbook.",o.imported),g.selectedFolder.$reload()),c.show(c.simple().content(d).position("top right").hideDelay(3e3))},onErrorItem:function(e,t,o,r){c.show({template:["<md-toast>",'  <div class="md-toast-content">','    <md-icon class="md-warn md-hue-1">error_outline</md-icon>',"    <span>"+l("An error occured while importing contacts.")+"</span>","  </div>","</md-toast>"].join(""),position:"top right",hideDelay:3e3})}}),s.close=function(){t.hide()}}a.show({parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!0,escapeToClose:!0,templateUrl:"UIxContactsImportDialog",controller:o,controllerAs:"$CardsImportDialogController",locals:{folder:t}}),o.$inject=["scope","$mdDialog","folder"]}function U(t){function o(e,t){function o(){e.hide()}this.addressbook=t,this.close=o}(t.urls?e.when():g.$reloadAll()).then(function(){a.show({parent:angular.element(document.body),clickOutsideToClose:!0,escapeToClose:!0,templateUrl:t.id+"/links",controller:o,controllerAs:"links",locals:{addressbook:t}})}),o.$inject=["$mdDialog","addressbook"]}function E(e){function t(e,t,o){function r(){d.addressbook.$save().then(function(){o.init(d.addressbook.$omit()),t.hide()})}function s(){t.cancel()}var d=this;d.addressbook=new g(o.$omit()),d.saveProperties=r,d.close=s}a.show({templateUrl:e.id+"/properties",controller:t,controllerAs:"properties",clickOutsideToClose:!0,escapeToClose:!0,locals:{srcAddressBook:e}}).catch(function(){}),t.$inject=["$scope","$mdDialog","srcAddressBook"]}function T(e){e.$acl.$users().then(function(){a.show({templateUrl:e.id+"/UIxAclEditor",controller:"AclController",controllerAs:"acl",clickOutsideToClose:!0,escapeToClose:!0,locals:{usersWithACL:e.$acl.users,User:v,folder:e}})})}function x(e){console.debug("subscribeToFolder "+e.owner+e.name),g.$subscribe(e.owner,e.name).then(function(e){c.show(c.simple().content(l("Successfully subscribed to address book")).position("top right").hideDelay(3e3))})}function M(e,t){return t.id!=e.id&&(t.isOwned||t.acls.objectCreator)}function j(e,o,r){var s,d,n,a,i,u,p;s=o.id,i=!1,0===(d=e.$selectedCards()).length&&(d=[e.$selectedCard()]),(n=_.filter(d,function(e){return e.$isCard()})).length!=d.length&&c.show(c.simple().content(l("Lists can't be moved or copied.")).position("top right").hideDelay(2e3)),n.length&&("copy"==r?(u=e.$copyCards(n,s),p=l("%{0} card(s) copied",n.length)):(u=e.$moveCards(n,s),p=l("%{0} card(s) moved",n.length),a=_.map(n,"id"),i=e.selectedCard&&a.indexOf(e.selectedCard)>=0),u.then(function(){i&&t.go("app.addressbook"),c.show(c.simple().content(p).position("top right").hideDelay(2e3))}))}var H=this,P=[];H.activeUser=b.activeUser,H.service=g,H.select=w,H.newAddressbook=y,H.edit=F,H.revertEditing=A,H.save=S,H.confirmDelete=D,H.importCards=I,H.showLinks=U,H.showProperties=E,H.share=T,H.subscribeToFolder=x,H.isDroppableFolder=M,H.dragSelectedCards=j,function(e){e.push(h.createHotkey({key:"backspace",description:l("Delete selected card or address book"),callback:function(){g.selectedFolder&&!g.selectedFolder.hasSelectedCard()&&D()}})),_.forEach(e,function(e){h.registerHotkey(e)})}(P),o.$on("$destroy",function(){_.forEach(P,function(e){h.deregisterHotkey(e)})})}e.$inject=["$q","$state","$scope","$rootScope","$stateParams","$timeout","$window","$mdDialog","$mdToast","$mdMedia","$mdSidenav","FileUploader","sgConstant","sgHotkeys","sgFocus","Card","AddressBook","Dialog","sgSettings","User","stateAddressbooks"],angular.module("SOGo.ContactsUI").controller("AddressBooksController",e)}(),function(){"use strict";function e(e,t,o,r,s,d,n,a,c,i,u,p,f){function h(e){return angular.isString(e)?{value:e}:e}function m(e,t,o){M.card.$delete(t,o),e.$setDirty()}function $(){var e=M.card.$addOrg({value:""});i("org_"+e)}function g(){M.card.birthday=new Date}function k(){M.card.$addScreenName("")}function b(){var e=M.card.$addEmail("");i("email_"+e)}function v(){var e=M.card.$addPhone("");i("phone_"+e)}function C(){var e=M.card.$addUrl("","");i("url_"+e)}function w(){return _.keys(f.customFields).length<4}function y(){angular.isDefined(M.card.customFields)||(M.card.customFields={});var e=_.pullAll(["1","2","3","4"],_.keys(f.customFields));M.card.customFields[e[0]]=""}function F(e){delete M.card.customFields[e]}function A(){var e=M.card.$addAddress("","","","","","","","");i("address_"+e)}function S(e,t){return e.length<s.minimumSearchLength()?[]:d.selectedFolder.$filter(e,{dry:!0,excludeLists:!0},t).then(function(e){return e})}function D(e){e.$valid&&M.card.$save().then(function(e){var t=_.indexOf(_.map(d.selectedFolder.$cards,"id"),M.card.id);t<0?d.selectedFolder.$reload():d.selectedFolder.$cards[t]=angular.copy(M.card),u.go("app.addressbook.card.view",{cardId:M.card.id})})}function I(){u.go("app.addressbook").then(function(){M.card=null,delete d.selectedFolder.selectedCard})}function U(e){M.card.$reset(),e.$setPristine()}function E(){M.card.$reset(),M.card.isNew?(M.card=null,delete d.selectedFolder.selectedCard,u.go("app.addressbook",{addressbookId:d.selectedFolder.id})):u.go("app.addressbook.card.view",{cardId:M.card.id})}function T(){var e=f;a.confirm(l("Warning"),l("Are you sure you want to delete the card of %{0}?","<b>"+e.$fullname()+"</b>"),{ok:l("Delete")}).then(function(){d.selectedFolder.$deleteCards([e]).then(function(){I()},function(t,o){a.alert(l("Warning"),l('An error occured while deleting the card "%{0}".',e.$fullname()))})})}function x(e){M.showRawSource||M.rawSource?M.showRawSource=!M.showRawSource:n.$$resource.post(M.currentFolder.id+"/"+M.card.id,"raw").then(function(e){M.rawSource=e,M.showRawSource=!0})}var M=this,j=[];M.card=f,M.currentFolder=d.selectedFolder,M.allEmailTypes=n.$EMAIL_TYPES,M.allTelTypes=n.$TEL_TYPES,M.allUrlTypes=n.$URL_TYPES,M.allAddressTypes=n.$ADDRESS_TYPES,M.categories={},M.userFilterResults=[],M.transformCategory=h,M.removeAttribute=m,M.addOrg=$,M.addBirthday=g,M.addScreenName=k,M.addEmail=b,M.addPhone=v,M.addUrl=C,M.addAddress=A,M.canAddCustomField=w,M.addCustomField=y,M.deleteCustomField=F,M.userFilter=S,M.save=D,M.close=I,M.reset=U,M.cancel=E,M.confirmDelete=T,M.toggleRawSource=x,M.showRawSource=!1,function(e){e.push(c.createHotkey({key:"backspace",description:l("Delete"),callback:function(e){0===M.currentFolder.$selectedCount()&&T(),e.preventDefault()}})),_.forEach(e,function(e){c.registerHotkey(e)})}(j),e.$on("$destroy",function(){_.forEach(j,function(e){c.deregisterHotkey(e)})})}e.$inject=["$scope","$timeout","$window","$mdDialog","sgSettings","AddressBook","Card","Dialog","sgHotkeys","sgFocus","$state","$stateParams","stateCard"],angular.module("SOGo.ContactsUI").controller("CardController",e)}(),function(){"use strict";function e(){return{restrict:"A",scope:{data:"=sgAddress"},controller:["$scope",function(e){e.addressLines=function(e){var t=[],o=[];return e.street&&t.push(e.street),e.street2&&t.push(e.street2),e.locality&&o.push(e.locality),e.region&&o.push(e.region),o.length>0&&t.push(o.join(", ")),e.country&&t.push(e.country),e.postalcode&&t.push(e.postalcode),t.join("<br>")}}],template:'<address ng-bind-html="addressLines(data)"></address>'}}angular.module("SOGo.Common").directive("sgAddress",e)}();
//# sourceMappingURL=Contacts.js.map
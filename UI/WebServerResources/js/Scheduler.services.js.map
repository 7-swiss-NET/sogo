{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","$get","$getIndex","$subscribe","uid","path","userResource","calendarData","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","promise","$deleteComponents","components","promises","component","isDefined","pid","uids","all","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","Card","Gravatar","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","type","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dates","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","block","nbr","$views","viewData","allDayBlocks","reduce","events","flatten","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","categories","repeat","alarm","action","quantity","unit","reference","relation","status","delta","classification","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","days","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","isGroup","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","constructor","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","l","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$rootScope","$state","$stateParams","stateEventsBlocks","toggleAllDays","expandedAllDays","vm","updateView","asDate","changeDate","$event","element","currentTarget","attr","go","changeView","deregisterCalendarsList","$on","$inject","controller","CalendarListController","$mdDialog","Dialog","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","$emit","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","response","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","focus","User","stateCalendars","sortable_setData","dataTransfer","dragEl","clearData","sortable_onEnd","toggleSortableMode","sortableCalendars","disabled","sortableSubscriptions","sortableWebCalendars","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","inputType","confirmDelete","folder","alert","importCalendar","CalendarImportDialogController","scope","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","exportCalendar","window","location","href","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","today","fragments","hash","state","service","animation","draggable","handle","ghostClass","chosenClass","setData","onEnd","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","cardFilter","$filterAll","$cards","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","removeAttendee","priorityLevel","priority","form","$valid","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","updateStartTime","adjustStartTime","valueOf","oldEndDate","updateEndTime","adjustEndTime","updateDueTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","clickBlock","replace","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","originalDay","wasOtherBlock","durationLeft","maxDuration","enableTransition","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","getQuarterHeight","scrollStep","maxX","getMaxColumns","scrollView","on","updateCoordinates","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","onDragStart","updateFromPointerHandler","onDragEnd","off","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","deregisterDragStop","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","editable","otherCoordinates","getDistance","sqrt","sumBy","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","setHours"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,\n      EventDragHorizontalOffset: 3\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$add(calendar);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n        });\n        d.resolve();\n      }, function() {\n        d.reject();\n      });\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Mailbox.prototype\n   * @desc Reset the original state the mailbox's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dates = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    Component.$log.debug('eventsblocks ' + JSON.stringify(params, undefined, 2));\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000);\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        objects.push(new Component(componentData));\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dates.length === 0)\n            for (i = 0; i < data.blocks.length; i++) {\n              dates.push(startDate.getDayString());\n              startDate.addDays(1);\n            }\n\n          // Convert array of blocks to object with days as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++)\n              data.blocks[i][j].dayNumber = i;\n            blocks[dates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++)\n              data.allDayBlocks[i][j].dayNumber = i;\n            allDayBlocks[dates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData);\n          components.push(new Component(data));\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    Component.$Preferences.ready().then(function() {\n      var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n      // Set default values from user's defaults\n      _this.classification = _this.classification ||\n        Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n    });\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default alarm\n      Component.$Preferences.ready().then(function() {\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList() && card.isGroup !== 1) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              status: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          status: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.constructor.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, Calendar, Component, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList;\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', deregisterCalendarsList);\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.views = data;\n        _.forEach(vm.views, function(view) {\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            view.calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        });\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView(view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, baseComponent) {\n      var type = 'appointment', component;\n\n      if (baseComponent) {\n        component = baseComponent;\n        type = baseComponent.type;\n      }\n      else {\n        if (vm.componentType == 'tasks')\n          type = 'task';\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == 403 &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      $rootScope.$emit('calendars:list');\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.exportCalendar = exportCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      disabled: true,\n      animation: 150,\n      draggable: 'md-list-item',\n      handle: '.md-menu',\n      ghostClass: 'sg-sortable-ghost',\n      chosenClass: 'sg-sortable-chosen',\n      setData: sortable_setData,\n      onEnd: sortable_onEnd\n    };\n    vm.sortableSubscriptions = angular.copy(vm.sortableCalendars);\n    vm.sortableWebCalendars = angular.copy(vm.sortableCalendars);\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    function sortable_setData(dataTransfer, dragEl) {\n      dataTransfer.clearData();\n    }\n\n    function sortable_onEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableCalendars.disabled = !vm.sortableCalendars.disabled;\n      vm.sortableSubscriptions.disabled = !vm.sortableSubscriptions.disabled;\n      vm.sortableWebCalendars.disabled = !vm.sortableWebCalendars.disabled;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url);\n        });\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function exportCalendar(calendar) {\n      window.location.href = ApplicationBaseURL + '/' + calendar.id + '.ics' + '/export';\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch('properties.calendar.color', function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    function today() {\n      var fragments = $window.location.hash.split('/'),\n          state = fragments[1],\n          view = fragments[2],\n          now = new Date(),\n          path = ['#', state, view, now.getDayString()];\n      $window.location = path.join('/');\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre>',\n            data,\n            '    </pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog'];\n        function ComponentRawSourceDialogController(scope, $mdDialog) {\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = angular.isDefined(vm.component.attendees);\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.updateStartTime = updateStartTime;\n    vm.adjustStartTime = adjustStartTime;\n    vm.updateEndTime = updateEndTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.updateDueTime = updateDueTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == 403 &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        //hours.push(Component.timeFormat.formatTime(i, 0));\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateStartTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.start.addMinutes(oldStartDate.getHours() * 60 + oldStartDate.getMinutes());\n      adjustStartTime();\n    }\n\n    function adjustStartTime() {\n      // Preserve the delta between the start and end dates\n      var delta;\n      delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n      if (delta !== 0) {\n        oldStartDate = new Date(vm.component.start.getTime());\n        if (vm.component.type === 'appointment') {\n          vm.component.end = new Date(vm.component.start.getTime());\n          vm.component.end.addMinutes(vm.component.delta);\n          oldEndDate = new Date(vm.component.end.getTime());\n        }\n        updateFreeBusy();\n      }\n    }\n\n    function updateEndTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.end.addMinutes(oldEndDate.getHours() * 60 + oldEndDate.getMinutes());\n      adjustEndTime();\n    }\n\n    function adjustEndTime() {\n      // The end date must be after the start date\n      var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n      if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n        if (delta < 0)\n          vm.component.end = new Date(oldEndDate.getTime());\n        else {\n          vm.component.delta = delta;\n          oldEndDate = new Date(vm.component.end.getTime());\n        }\n        updateFreeBusy();\n      }\n    }\n\n    function updateDueTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.due.addMinutes(oldDueDate.getHours() * 60 + oldDueDate.getMinutes());\n      adjustDueTime();\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"\\'bg-category\\' + category\"',\n        '         ng-style=\"{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, originalDay, currentDay, wasOtherBlock,\n            start, duration, durationLeft, maxDuration, enableTransition;\n\n        showGhost = false;\n        enableTransition = function() {\n          iElement.removeClass('sg-event--notransition');\n        };\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          originalDay  = scope.block.pointerHandler.originalEventCoordinates.dayNumber;\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative)  {\n              // Show start hour and set the vertical position\n              scope.block.startHour = getStartTime(start);\n              wasOtherBlock = parseInt(iElement.css('top')) === 0;\n              if (wasOtherBlock)\n                iElement.addClass('sg-event--notransition');\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n              if (wasOtherBlock)\n                $timeout(enableTransition);\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                wasOtherBlock = parseInt(iElement.css('top')) !== 0;\n                if (wasOtherBlock)\n                  iElement.addClass('sg-event--notransition');\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n                if (wasOtherBlock)\n                  $timeout(enableTransition);\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @ngInject\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span class=\"secondary\" ng-if=\"'+p+'!block.component.c_isallday\">{{ '+p+'block.starthour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, scrollView, type, lastScroll, deregisterDragStart, deregisterDragStop;\n\n        scrollView = element[0];\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        lastScroll = 0;\n\n        // Listen to dragstart and dragend events\n        deregisterDragStart = $rootScope.$on('calendar:dragstart', onDragStart);\n        deregisterDragStop = $rootScope.$on('calendar:dragend', onDragEnd);\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          deregisterDragStart();\n          deregisterDragStop();\n          element.off('mouseover', updateFromPointerHandler);\n          angular.element($window).off('resize', updateCoordinates);\n        });\n\n        function initView() {\n          var quarterHeight;\n\n          // Quarter height doesn't change if window is resize; compute it only once\n          quarterHeight = getQuarterHeight();\n\n          view = {\n            type: type,\n            quarterHeight: quarterHeight,\n            scrollStep: 6 * quarterHeight,\n            maxX: getMaxColumns(),\n\n            // Expose a reference of the view element\n            element: scrollView\n          };\n\n          // Compute coordinates of view element; recompute it on window resize\n          angular.element($window).on('resize', updateCoordinates);\n          updateCoordinates();\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * quarterHeight;\n                scrollView.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n        }\n\n        function getQuarterHeight() {\n          var hour0, hour23, height = null;\n\n          hour0 = document.getElementById('hour0');\n          hour23 = document.getElementById('hour23');\n          if (hour0 && hour23)\n            height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n          return height;\n        }\n\n        function getDayDimensions(viewLeft) {\n          var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n          height = width = leftOffset = topOffset = 0;\n          nodes = scrollView.getElementsByClassName('day0');\n\n          if (nodes.length > 0) {\n            domRect = nodes[0].getBoundingClientRect();\n            height = domRect.height;\n            width = domRect.width;\n            leftOffset = domRect.left - viewLeft;\n            tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n            if (tileHeader.length > 0)\n              topOffset = tileHeader[0].clientHeight;\n          }\n\n          return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n        }\n\n        function getMaxColumns() {\n          var max = 0;\n\n          //if (type == 'multiday') {\n            max = scrollView.getElementsByClassName('day').length - 1;\n          //}\n\n          return max;\n        }\n\n        // View has been resized;\n        // Compute the view's origins (x, y), a day's dimensions and left margin.\n        function updateCoordinates() {\n          var domRect, dayDimensions;\n\n          domRect = scrollView.getBoundingClientRect();\n          dayDimensions = getDayDimensions(domRect.left);\n\n          angular.extend(view, {\n            coordinates: {\n              x: domRect.left,\n              y: domRect.top\n            },\n            dayHeight: dayDimensions.height,\n            dayWidth: dayDimensions.width,\n            daysOffset: dayDimensions.offset.left,\n            topOffset: dayDimensions.offset.top\n          });\n        }\n\n        function onDragStart() {\n          element.on('mouseover', updateFromPointerHandler);\n          updateFromPointerHandler();\n        }\n\n        function onDragEnd() {\n          element.off('mouseover', updateFromPointerHandler);\n          Calendar.$view = null;\n        }\n\n        // From SOGoScrollController.updateFromPointerHandler\n        function updateFromPointerHandler() {\n          var scrollStep, pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n          scrollStep = view.scrollStep;\n          pointerHandler = Component.$ghost.pointerHandler;\n          if (pointerHandler) {\n            pointerCoordinates = pointerHandler.getContainerBasedCoordinates(view);\n\n            if (pointerCoordinates) {\n              // Pointer is inside view; Adjust scrollbar if necessary\n              Calendar.$view = view;\n              now = new Date().getTime();\n              if (!lastScroll || now > lastScroll + 100) {\n                lastScroll = now;\n                scrollY = pointerCoordinates.y - scrollStep;\n                if (scrollY < 0) {\n                  minY = -scrollView.scrollTop;\n                  if (scrollY < minY)\n                    scrollY = minY;\n                  scrollView.scrollTop += scrollY;\n                }\n                else {\n                  scrollY = pointerCoordinates.y + scrollStep;\n                  delta = scrollY - scrollView.clientHeight;\n                  if (delta > 0) {\n                    scrollView.scrollTop += delta;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarDayBlockGhost\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayNumber, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayNumber = scope.block.dayNumber;\n        blockIndex = _.findIndex(component.blocks, ['dayNumber', dayNumber]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var block, dragMode, eventType, startDate, newData, newComponent, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n        \n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * 96;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              return b.length;\n            });\n          }\n\n          // Get the dayNumber from the event's first block\n          this.dayNumber = block.component.blocks[0].dayNumber;\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.x * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            this.originalEventCoordinates.dayNumber = this.originalViewCoordinates.x;\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n\n            // This dayNumber needs to be updated with the calendar number.\n            // if (currentView == \"multicolumndayview\")\n            //   this._updateMulticolumnViewDayNumber_SEDGC();\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > 6)\n              coordinates.x = 6;\n            coordinates.x += 7 * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n"]}
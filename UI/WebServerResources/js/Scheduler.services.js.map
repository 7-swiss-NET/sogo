{"version":3,"file":"Scheduler.services.js","sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","angular","extend","$acl","$$Acl","$factory","$q","$timeout","$log","Settings","Resource","Component","Acl","activeUser","$Component","module","e","factory","$add","calendar","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","_","find","o","localeCompare","indexOf","pluck","splice","$findAll","data","_this","forEach","push","$get","$subscribe","uid","path","userResource","fetch","then","calendarData","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","promise","prototype","isOwned","isSuperUser","getClassName","base","isUndefined","$rename","$save","$delete","remove","status","save","$omit","$setActivation","active","$getComponent","componentId","recurrenceId","$find","value","key","futureComponentData","pid","newComponentData","newguid","$unwrap","isNew","Preferences","Gravatar","$Preferences","$gravatar","baseURL","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","ready","settings","CalendarDefaultFilter","show_completed","parseInt","ShowCompletedTasks","$categories","defaults","SOGoCalendarCategoriesColors","SOGoTimeFormat","$filter","type","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","each","keys","isDefined","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","filter","category","$eventsBlocksForView","view","date","viewAction","startDate","endDate","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","deferred","toLowerCase","sd","getDayString","ed","components","blocks","reduce","events","objects","eventData","componentData","object","eventsFields","start","c_startdate","hour","getHourString","flatten","block","component","nbr","length","$blocks","fields","invoke","categories","repeat","alarm","action","quantity","unit","reference","relation","classification","substring","end","dueDate","due","$isRecurrent","days","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","count","until","asDate","$hasCustomRepeat","hasCustomRepeat","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","destinationCalendar","organizer","email","$image","freebusy","updateFreeBusyCoverage","attendees","attendee","image","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","roundedStart","roundedEnd","startQuarter","getMinutes","endQuarter","setMinutes","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","sday","eday","map","c_folder","addAttendee","card","c_cn","$preferredEmail","role","c_uid","hasAttendee","emails","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$reset","$shadowData","$reply","reply","delegatedTo","$futureComponentData","isError","error","formatTime","dateString","hours","minutes","copy","startTime","endTime","stringWithSeparator"],"mappings":"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","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      angular.extend(this, newCalendarData);\n    }\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser()\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (o.id != 'personal' &&\n              o.name.localeCompare(calendar.name) === 1);\n    });\n    i = sibling ? _.indexOf(_.pluck(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    return this.$calendars;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(calendarData);\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$add(calendar);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n        });\n        d.resolve();\n      }, function() {\n        d.reject();\n      });\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    angular.extend(this, data);\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function(name) {\n    var i = _.indexOf(_.pluck(Calendar.$calendars, 'id'), this.id);\n    this.name = name;\n    Calendar.$calendars.splice(i, 1);\n    Calendar.$add(this);\n    return this.$save();\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        d = Calendar.$q.defer(),\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    promise.then(function() {\n      var i = _.indexOf(_.pluck(list, 'id'), _this.id);\n      list.splice(i, 1);\n      d.resolve();\n    }, function(data, status) {\n      d.reject(data);\n    });\n    return d.promise;\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      return data;\n    });\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Preferences', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Preferences, Gravatar, Resource) {\n    angular.extend(Component, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.baseURL(), Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_next7' } //'view_incomplete' }\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      Component.$queryEvents.filterpopup = Preferences.settings.CalendarDefaultFilter;\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $filter\n   * @memberof Component.prototype\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.each(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var viewAction, startDate, endDate, params;\n\n    if (view == 'day') {\n      viewAction = 'dayView';\n      startDate = endDate = date;\n    }\n    else if (view == 'week') {\n      viewAction = 'weekView';\n      startDate = date.beginOfWeek();\n      endDate = new Date();\n      endDate.setTime(startDate.getTime());\n      endDate.addDays(6);\n    }\n    else if (view == 'month') {\n      viewAction = 'monthView';\n      startDate = date;\n      startDate.setDate(1);\n      startDate = startDate.beginOfWeek();\n      endDate = new Date();\n      endDate.setTime(startDate.getTime());\n      endDate.setMonth(endDate.getMonth() + 1);\n      endDate.addDays(-1);\n      endDate = endDate.endOfWeek();\n    }\n    return this.$eventsBlocks(viewAction, startDate, endDate);\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i,\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    Component.$log.debug('eventsblocks ' + JSON.stringify(params, undefined, 2));\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(data) {\n      Component.$timeout(function() {\n        var components = [], blocks = {};\n\n        // Instantiate Component objects\n        _.reduce(data.events, function(objects, eventData, i) {\n          var componentData = _.object(data.eventsFields, eventData),\n              start = new Date(componentData.c_startdate * 1000);\n          componentData.hour = start.getHourString();\n          objects.push(new Component(componentData));\n          return objects;\n        }, components);\n\n        // Associate Component objects to blocks positions\n        _.each(_.flatten(data.blocks), function(block) {\n          block.component = components[block.nbr];\n        });\n\n        // Convert array of blocks to object with days as keys\n        for (i = 0; i < data.blocks.length; i++) {\n          blocks[startDate.getDayString()] = data.blocks[i];\n          startDate.addDays(1);\n        }\n\n        Component.$log.debug('blocks ready (' + _.keys(blocks).length + ')');\n\n        // Save the blocks to the object model\n        Component.$blocks = blocks;\n\n        deferred.resolve(blocks);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invoke(data.fields, 'toLowerCase');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.object(fields, componentData);\n          components.push(new Component(data));\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    angular.extend(this, data);\n\n    Component.$Preferences.ready().then(function() {\n      var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n      // Set default values from user's defaults\n      _this.classification = _this.classification ||\n        Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n    });\n\n    if (this.startDate)\n      this.start = new Date(this.startDate.substring(0,10) + ' ' + this.startDate.substring(11,16));\n    if (this.endDate)\n      this.end = new Date(this.endDate.substring(0,10) + ' ' + this.endDate.substring(11,16));\n    if (this.dueDate)\n      this.due = new Date(this.dueDate.substring(0,10) + ' ' + this.dueDate.substring(11,16));\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask)\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = this.repeat.until.substring(0,10).asDate();\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default alarm\n      Component.$Preferences.ready().then(function() {\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    if (this.organizer && this.organizer.email) {\n      this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    }\n\n    // Load freebusy of attendees\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.each(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusy(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.component = 'vtodo' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.each(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusy = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.each(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var attendee, url, params;\n    if (card) {\n      attendee = {\n        name: card.c_cn,\n        email: card.$preferredEmail(),\n        role: 'req-participant',\n        status: 'needs-action',\n        uid: card.c_uid\n      };\n      if (!_.find(this.attendees, function(o) {\n        return o.email == attendee.email;\n      })) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        if (this.attendees)\n          this.attendees.push(attendee);\n        else\n          this.attendees = [attendee];\n        this.updateFreeBusy(attendee);\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit(true);\n  };\n\n  /**\n   * @function reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit(true);\n        return data;\n      });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   */\n  Component.prototype.$save = function() {\n    var _this = this, options, path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.save(path.join('/'), this.$omit(), options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit(true);\n        return data;\n      });\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {}, date;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    // Format times\n    component.startTime = component.startDate ? formatTime(component.startDate) : '';\n    component.endTime   = component.endDate   ? formatTime(component.endDate)   : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if (this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency) {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        this.alarm.attendees = 0;\n        this.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    function formatTime(dateString) {\n      // YYYY-MM-DDTHH:MM-ZZ:00 => YYYY-MM-DD HH:MM\n      var date = new Date(dateString.substring(0,10) + ' ' + dateString.substring(11,16)),\n          hours = date.getHours(),\n          minutes = date.getMinutes();\n\n      if (hours < 10) hours = '0' + hours;\n      if (minutes < 10) minutes = '0' + minutes;\n\n      return hours + ':' + minutes;\n    }\n\n    return component;\n  };\n\n})();\n"]}
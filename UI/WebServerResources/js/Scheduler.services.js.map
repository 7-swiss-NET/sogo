{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgCategoryStylesheet.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js","Scheduler/sgNowLine.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","$reloadAll","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","calendarData","group","$get","$getIndex","$subscribe","uid","path","userResource","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","export","download","type","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","Component_STATUS","Card","Gravatar","STATUS","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","constant","NOT_LOADED","DELAYED_LOADING","LOADING","LOADED","DELAYED_MS","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","$isLoading","$loaded","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","categories","block","nbr","isFirst","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","repeat","alarm","action","quantity","unit","reference","relation","delta","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","classification","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","sendAppointmentNotifications","SOGoAppointmentSendEMailNotifications","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","expandable","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","partstat","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$rootScope","$state","$stateParams","sgHotkeys","stateEventsBlocks","_registerHotkeys","createHotkey","description","callback","changeDate","args","changeView","_goToPeriod","registerHotkey","$event","direction","vm","selectedDate","_formatDate","setHours","$dateFormat","replace","toggleAllDays","expandedAllDays","updateView","asDate","newDate","element","currentTarget","attr","go","deregisterCalendarsList","hotkeys","$on","deregisterHotkey","$inject","controller","CalendarListController","$mdDialog","focus","Dialog","searchMode","newComponent","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","$emit","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","finally","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","User","stateCalendars","_sortableAccept","sourceItemHandleScope","destSortableScope","destItemScope","sortableScope","_sortableEnd","toggleSortableMode","sortableMode","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","catch","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","service","sortableCalendars","scrollableContainer","containment","orderChanged","accept","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","Account","cardFilter","$filterAll","$cards","newMessageWithAllRecipients","recipients","_newMessage","newMessageWithRecipient","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","removeAttendee","priorityLevel","priority","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","adjustStartTime","valueOf","oldEndDate","adjustEndTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","c_status","clickBlock","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","durationLeft","maxDuration","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","sgScrollView","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","$element","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","onDragStart","deregisterDragStop","onDragEnd","bindedUpdateCoordinates","updateCoordinates","bindedUpdateFromPointerHandler","updateFromPointerHandler","on","isMultiColumn","$destroy","off","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","getElementsByTagName","el","attributes","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","sgCategoryStylesheet","ngModel","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","sgNowLine","iAttr","sgCalendarScrollViewCtrl","_getDays","_getView","_unwatchView","_unwatchDays","updateLine","sgNowLineController","_updateLine","force","nowDay","hourHeight","minuteHeight","lineElement","_addLine","updater","$lineElement","dayElement","eq"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,   // hour quarters\n      EventDragHorizontalOffset: 3  // pixels\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id')).then(function() {\n          // Refresh list of calendars to fetch links associated to new calendar\n          Calendar.$reloadAll();\n        });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Reload the list of known calendars.\n   */\n  Calendar.$reloadAll = function() {\n    var _this = this;\n\n    Calendar.$$resource.fetch('calendarslist').then(function(data) {\n      _.forEach(data.calendars, function(calendarData) {\n        var group, calendar;\n\n        if (calendarData.isWebCalendar)\n          group = _this.$webcalendars;\n        else if (calendarData.isSubscription)\n          group = _this.$subscriptions;\n        else\n          group = _this.$calendars;\n\n        calendar = _.find(group, function(o) { return o.id == calendarData.id; });\n        if (calendar)\n          calendar.init(calendarData);\n      });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, {type: 'application/octet-stream'});\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'sgComponent_STATUS', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Component_STATUS, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      STATUS: Component_STATUS,\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .constant('sgComponent_STATUS', {\n      NOT_LOADED:      0,\n      DELAYED_LOADING: 1,\n      LOADING:         2,\n      LOADED:          3,\n      DELAYED_MS:      300\n    })\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $isLoading\n   * @memberof Component\n   * @returns true if the components list is still being retrieved from server after a specific delay\n   * @see sgMessage_STATUS\n   */\n  Component.$isLoading = function() {\n    return Component.$loaded == Component.STATUS.LOADING;\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        // Filter out categories for which there's no associated color\n        component.categories = _.filter(component.categories, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        });\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n        block.isFirst = (this[block.nbr].blocks.length == 1);\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    // Components list is not loaded yet\n    Component.$loaded = Component.STATUS.DELAYED_LOADING;\n    Component.$timeout(function() {\n      if (Component.$loaded != Component.STATUS.LOADED)\n        Component.$loaded = Component.STATUS.LOADING;\n    }, Component.STATUS.DELAYED_MS);\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          // Filter out categories for which there's no associated color\n          component.categories = _.filter(component.categories, function(name) {\n            return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n          });\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        Component.$loaded = Component.STATUS.LOADED;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default values\n      Component.$Preferences.ready().then(function() {\n        var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n        // Set default classification\n        _this.classification = Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n\n        // Set default alarm\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n\n        // Set notitifications\n        _this.sendAppointmentNotifications = Component.$Preferences.defaults.SOGoAppointmentSendEMailNotifications;\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList({expandable: true})) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              partstat: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          partstat: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint loopfunc: true */\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'sgHotkeys', 'Calendar', 'Component', 'Preferences', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, sgHotkeys, Calendar, Component, Preferences, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList, hotkeys = [];\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.selectedDate = $stateParams.day.asDate();\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n\n    _registerHotkeys(hotkeys);\n\n    Preferences.ready().then(function() {\n      _formatDate(vm.selectedDate);\n    });\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', function() {\n      // Destroy event listener when the controller is being deactivated\n      deregisterCalendarsList();\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_today'),\n        description: l('Today'),\n        callback: changeDate,\n        args: new Date()\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_dayview'),\n        description: l('Day'),\n        callback: changeView,\n        args: 'day'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_weekview'),\n        description: l('Week'),\n        callback: changeView,\n        args: 'week'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_monthview'),\n        description: l('Month'),\n        callback: changeView,\n        args: 'month'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_multicolumndayview'),\n        description: l('Multicolumn Day View'),\n        callback: changeView,\n        args: 'multicolumnday'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'left',\n        description: l('Move backward'),\n        callback: _goToPeriod,\n        args: -1\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'right',\n        description: l('Move forward'),\n        callback: _goToPeriod,\n        args: +1\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n\n    function _goToPeriod($event, direction) {\n      var date;\n\n      if ($stateParams.view == 'week') {\n        date = vm.selectedDate.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).addDays(7 * direction);\n      }\n      else if ($stateParams.view == 'month') {\n        date = vm.selectedDate;\n        date.setDate(1);\n        date.setMonth(date.getMonth() + direction);\n      }\n      else {\n        date = vm.selectedDate.addDays(direction);\n      }\n\n      changeDate($event, date);\n    }\n\n    function _formatDate(date) {\n      if ($stateParams.view == 'month') {\n        date.setDate(1);\n        date.setHours(12);\n        date.$dateFormat = '%B %Y';\n      }\n      else if ($stateParams.view == 'week') {\n        date.setTime(date.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).getTime());\n        date.$dateFormat = l('Week %d').replace('%d', '%U');\n      }\n      else {\n        date.$dateFormat = '%A';\n      }\n    }\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // The list of calendars has changed; update the views\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        var i, j, view;\n        for (i = 0; i < data.length; i++) {\n          view = data[i];\n          if (vm.views[i]) {\n            _.forEach(view.allDayBlocks, function(blocks, day) {\n              vm.views[i].allDayBlocks[day] = blocks;\n            });\n            _.forEach(view.blocks, function(blocks, day) {\n              vm.views[i].blocks[day] = blocks;\n            });\n          }\n          else {\n            vm.views[i] = view;\n          }\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            vm.views[i].calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        }\n        // Remove previous views\n        for (j = vm.views.length; j >= i; j--)\n          vm.views.splice(j, 1);\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event, newDate) {\n      var date = newDate? newDate.getDayString() : angular.element($event.currentTarget).attr('date');\n      if (newDate)\n        _formatDate(newDate);\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView($event, view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$scope', '$timeout', '$state', '$mdDialog', 'sgHotkeys', 'sgFocus', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $scope, $timeout, $state, $mdDialog, sgHotkeys, focus, Dialog, Preferences, Calendar, Component) {\n    var vm = this, hotkeys = [];\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.searchMode = searchMode;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n\n    _registerHotkeys(hotkeys);\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    $scope.$on('$destroy', function() {\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_search'),\n        description: l('Search'),\n        callback: searchMode\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_event'),\n        description: l('Create a new event'),\n        callback: newComponent,\n        args: 'appointment'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_task'),\n        description: l('Create a new task'),\n        callback: newComponent,\n        args: 'task'\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function searchMode() {\n      vm.mode.search = true;\n      focus('search');\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            vm.mode.multiple = 0;\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, type, baseComponent) {\n      var component;\n\n      if (baseComponent) {\n        component = baseComponent;\n      }\n      else {\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, 'appointment', component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == 403 &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    // vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.sortableMode = false;\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      scrollableContainer: '#sidenav-content',\n      containment: 'md-list',\n      orderChanged: _sortableEnd,\n      accept: _sortableAccept\n    };\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    /**\n     * Only allow to sort items within the same list.\n     */\n    function _sortableAccept(sourceItemHandleScope, destSortableScope, destItemScope) {\n      return sourceItemHandleScope.sortableScope.element[0] == destSortableScope.element[0];\n    }\n\n    function _sortableEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableMode = !vm.sortableMode;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch(function() { return vm.calendar.color; }, function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    // function today() {\n    //   var fragments = $window.location.hash.split('/'),\n    //       state = fragments[1],\n    //       view = fragments[2],\n    //       now = new Date(),\n    //       path = ['#', state, view, now.getDayString()];\n    //   $window.location = path.join('/');\n    // }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre ng-bind-html=\"data\"></pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController,\n          locals: { data: data }\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog', 'data'];\n        function ComponentRawSourceDialogController(scope, $mdDialog, data) {\n          scope.data = data;\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = false;\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.adjustStartTime = adjustStartTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == 403 &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '         ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, isAllDay, currentDay,\n            start, duration, durationLeft, maxDuration;\n\n        showGhost = false;\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          isAllDay     = scope.block.component.c_isallday;\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              if (!isAllDay)\n                // Show start hour and set the vertical position\n                scope.block.startHour = getStartTime(start);\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n            scope.block.isFirst = true;\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else if (!isAllDay) {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '  <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '       ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '       ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '  <span class=\"secondary\" ng-if=\"'+p+'(!block.component.c_isallday && block.isFirst)\">{{ '+p+'block.component.startHour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, type, isMultiColumn = false;\n\n        view = null;\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        isMultiColumn = (element.attr('sg-view') == 'multicolumndayview');\n\n        // Expose isMultiColumn in the controller\n        // See sgNowLine directive\n        controller.isMultiColumn = isMultiColumn;\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          if (view) {\n            view.$destroy();\n          }\n        });\n\n        function initView() {\n          view = new sgScrollView(element, type);\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * view.quarterHeight;\n                view.element.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n\n          // Expose quarter height to the controller\n          // See sgNowLine directive\n          controller.quarterHeight = view.quarterHeight;\n        }\n\n        /**\n         * sgScrollView\n         */\n        function sgScrollView($element, type) {\n          this.$element = $element;\n          this.element = $element[0];\n          this.type = type;\n          this.quarterHeight = this.getQuarterHeight();\n          this.scrollStep = 6 * this.quarterHeight;\n          this.dayNumbers = this.getDayNumbers();\n          this.maxX = this.getMaxColumns();\n\n          // Listen to dragstart and dragend events\n          this.deregisterDragStart = $rootScope.$on('calendar:dragstart', angular.bind(this, this.onDragStart));\n          this.deregisterDragStop = $rootScope.$on('calendar:dragend', angular.bind(this, this.onDragEnd));\n\n          this.bindedUpdateCoordinates = angular.bind(this, this.updateCoordinates);\n          this.bindedUpdateFromPointerHandler = angular.bind(this, this.updateFromPointerHandler);\n\n          // Compute coordinates of view element; recompute it on window resize\n          this.updateCoordinates();\n          angular.element($window).on('resize', this.bindedUpdateCoordinates);\n        }\n\n        sgScrollView.prototype = {\n\n          $destroy: function() {\n            this.deregisterDragStart();\n            this.deregisterDragStop();\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            angular.element($window).off('resize', this.bindedUpdateCoordinates);\n          },\n\n          onDragStart: function() {\n            this.$element.on('mousemove', this.bindedUpdateFromPointerHandler);\n            this.updateCoordinates();\n            this.updateFromPointerHandler();\n          },\n\n          onDragEnd: function() {\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            Calendar.$view = null;\n          },\n\n          getQuarterHeight: function() {\n            var hour0, hour23, height = null;\n\n            hour0 = document.getElementById('hour0');\n            hour23 = document.getElementById('hour23');\n            if (hour0 && hour23)\n              height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n            return height;\n          },\n\n\n          getDayDimensions: function(viewLeft) {\n            var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n            height = width = leftOffset = topOffset = 0;\n            nodes = this.element.getElementsByClassName('day');\n\n            if (nodes.length > 0) {\n              domRect = nodes[0].getBoundingClientRect();\n              height = domRect.height;\n              width = domRect.width;\n              leftOffset = domRect.left - viewLeft;\n              tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n              if (tileHeader.length > 0)\n                topOffset = tileHeader[0].clientHeight;\n            }\n\n            return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n          },\n\n\n          getDayNumbers: function() {\n            var viewType = null, days, total, sum;\n\n            days = this.element.getElementsByTagName('sg-calendar-day');\n\n            return _.map(days, function(el, index) {\n              if (isMultiColumn)\n                return index;\n              else\n                return parseInt(el.attributes['sg-day-number'].value);\n            });\n          },\n\n\n          getMaxColumns: function() {\n            var mdGridList, max = 0;\n\n            if (this.type == 'monthly') {\n              mdGridList = this.element.getElementsByTagName('md-grid-list')[0];\n              max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n            }\n            else {\n              max = this.element.getElementsByClassName('day').length - 1;\n            }\n\n            return max;\n          },\n\n          // View has been resized;\n          // Compute the view's origins (x, y), a day's dimensions and left margin.\n          updateCoordinates: function() {\n            var domRect, dayDimensions;\n\n            domRect = this.element.getBoundingClientRect();\n            dayDimensions = this.getDayDimensions(domRect.left);\n\n            angular.extend(this, {\n              coordinates: {\n                x: domRect.left,\n                y: domRect.top\n              },\n              dayHeight: dayDimensions.height,\n              dayWidth: dayDimensions.width,\n              daysOffset: dayDimensions.offset.left,\n              topOffset: dayDimensions.offset.top\n            });\n          },\n\n\n          // From SOGoScrollController.updateFromPointerHandler\n          updateFromPointerHandler: function() {\n            var pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n            pointerHandler = Component.$ghost.pointerHandler;\n            if (this.coordinates && pointerHandler) {\n              pointerCoordinates = pointerHandler.getContainerBasedCoordinates(this);\n\n              if (pointerCoordinates) {\n                // Pointer is inside view; Adjust scrollbar if necessary\n                Calendar.$view = this;\n                now = new Date().getTime();\n                if (!this.lastScroll || now > this.lastScroll + 100) {\n                  this.lastScroll = now;\n                  scrollY = pointerCoordinates.y - this.scrollStep;\n                  if (scrollY < 0) {\n                    minY = -this.element.scrollTop;\n                    if (scrollY < minY)\n                      scrollY = minY;\n                    this.element.scrollTop += scrollY;\n                  }\n                  else {\n                    scrollY = pointerCoordinates.y + this.scrollStep;\n                    delta = scrollY - this.element.clientHeight;\n                    if (delta > 0) {\n                      this.element.scrollTop += delta;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n\n        };\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarGhost directive\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCategoryStylesheet - Add CSS stylesheet for a category's color\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {object} ngModel - the object literal describing the category\n   * @example:\n\n    <sg-category-stylesheet\n         ng-repeat=\"category in categories\"\n         ng-model=\"category\" />\n  */\n  function sgCategoryStylesheet() {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      scope: {\n        ngModel: '='\n      },\n      replace: true,\n      template: [\n        '<style type=\"text/css\">',\n        /* Background color */\n        '  .bg-category{{ ngModel.id }} {',\n        '    background-color: {{ ngModel.color }} !important;',\n        '  }',\n        /* Border color */\n        '  .bdr-category{{ ngModel.id }} {',\n        '    border-color: {{ ngModel.color }} !important;',\n        '  }',\n        '</style>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCategoryStylesheet', sgCategoryStylesheet);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable && !scope.block.userState) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n","/* -*- Mode: js; indent-tabs-mode: nil; js-indent-level: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgNowLine - Now line to be displayed on top of current day\n   * @restrict class\n  */\n  function sgNowLine() {\n    return {\n      restrict: 'C',\n      require: '^^sgCalendarScrollView',\n      link: link,\n      controller: sgNowLineController\n    };\n\n    function link(scope, iElement, iAttr, sgCalendarScrollViewCtrl) {\n      function _getDays() {\n        return iElement.find('sg-calendar-day');\n      }\n      function _getView() {\n        return sgCalendarScrollViewCtrl.quarterHeight;\n      }\n\n      // We need to wait for the view to be compiled\n      var _unwatchView = scope.$watch(_getView, function(quarterHeight) {\n        if (quarterHeight) {\n          _unwatchView(); // self release\n          scope.quarterHeight = quarterHeight;\n          // We need to wait for the days to be compiled\n          var _unwatchDays = scope.$watch(_getDays, function(days) {\n            if (days.length) {\n              _unwatchDays(); // self release\n              scope.days = days;\n              // Draw the line\n              scope.updateLine();\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  sgNowLineController.$inject = ['$scope', '$element', '$timeout'];\n  function sgNowLineController($scope, $element, $timeout) {\n    var _this = this, updater,\n        scrollViewCtrl = $element.controller('sgCalendarScrollView');\n\n    $scope.nowDay = null;\n    $scope.lineElement = null;\n    $scope.updateLine = _updateLine;\n\n    $scope.$on('$destroy', function() {\n      if (updater)\n        $timeout.cancel(updater);\n    });\n\n\n    function _updateLine(force) {\n      var now = new Date(), // TODO: adjust to user's timezone\n          nowDay = now.getDayString(),\n          hours = now.getHours(),\n          hourHeight = $scope.quarterHeight * 4,\n          minutes = now.getMinutes(),\n          minuteHeight = $scope.quarterHeight/15,\n          position = parseInt(hours   * hourHeight   +\n                              minutes * minuteHeight -\n                              1);\n\n      if (force || nowDay != $scope.nowDay) {\n        if ($scope.lineElement)\n          $scope.lineElement.remove();\n        $scope.lineElement = _addLine(nowDay, $scope.days);\n        $scope.nowDay = nowDay;\n      }\n\n      if ($scope.lineElement) {\n        // Current day is displayed\n        $scope.lineElement.css('top', position + \"px\");\n        // Update line every minute\n        updater = $timeout(angular.bind(_this, $scope.updateLine), 60000);\n      }\n    }\n\n    function _addLine(nowDay, days) {\n      var $lineElement = angular.element('<sg-now-line>');\n\n      if (scrollViewCtrl.isMultiColumn) {\n        // In multicolumn day view, the line must go over all columns\n        if (days && days[0].attributes['sg-day'].value == nowDay)\n          $element.append($lineElement);\n      }\n      else\n        _.forEach(days, function(dayElement) {\n          if (dayElement.attributes['sg-day'].value == nowDay) {\n            angular.element(dayElement).find('div').eq(0).append($lineElement);\n          }\n        });\n\n      return $lineElement;\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgNowLine', sgNowLine);\n})();\n"]}
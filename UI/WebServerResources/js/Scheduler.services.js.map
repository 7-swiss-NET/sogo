{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","$get","$getIndex","$subscribe","uid","path","userResource","calendarData","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","promise","$deleteComponents","components","promises","component","isDefined","pid","uids","all","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","download","type","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","Card","Gravatar","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dates","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","block","nbr","$views","viewData","allDayBlocks","reduce","events","flatten","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","categories","repeat","alarm","action","quantity","unit","reference","relation","status","delta","classification","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","days","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","isGroup","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","constructor","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","l","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$rootScope","$state","$stateParams","stateEventsBlocks","toggleAllDays","expandedAllDays","vm","updateView","asDate","changeDate","$event","element","currentTarget","attr","go","changeView","deregisterCalendarsList","$on","$inject","controller","CalendarListController","$mdDialog","Dialog","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","$emit","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","response","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","focus","User","stateCalendars","sortable_setData","dataTransfer","dragEl","clearData","sortable_onEnd","toggleSortableMode","sortableCalendars","disabled","sortableSubscriptions","sortableWebCalendars","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","inputType","confirmDelete","folder","alert","importCalendar","CalendarImportDialogController","scope","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","today","fragments","location","hash","state","service","animation","draggable","handle","ghostClass","chosenClass","setData","onEnd","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","cardFilter","$filterAll","$cards","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","removeAttendee","priorityLevel","priority","form","$valid","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","updateStartTime","adjustStartTime","valueOf","oldEndDate","updateEndTime","adjustEndTime","updateDueTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","clickBlock","replace","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","originalDay","wasOtherBlock","durationLeft","maxDuration","enableTransition","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","getQuarterHeight","scrollStep","maxX","getMaxColumns","scrollView","on","updateCoordinates","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","onDragStart","updateFromPointerHandler","onDragEnd","off","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","deregisterDragStop","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","editable","otherCoordinates","getDistance","sqrt","sumBy","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","setHours"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,\n      EventDragHorizontalOffset: 3\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$add(calendar);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n        });\n        d.resolve();\n      }, function() {\n        d.reject();\n      });\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Mailbox.prototype\n   * @desc Reset the original state the mailbox's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, {type: 'application/octet-stream'});\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dates = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    Component.$log.debug('eventsblocks ' + JSON.stringify(params, undefined, 2));\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000);\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        objects.push(new Component(componentData));\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dates.length === 0)\n            for (i = 0; i < data.blocks.length; i++) {\n              dates.push(startDate.getDayString());\n              startDate.addDays(1);\n            }\n\n          // Convert array of blocks to object with days as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++)\n              data.blocks[i][j].dayNumber = i;\n            blocks[dates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++)\n              data.allDayBlocks[i][j].dayNumber = i;\n            allDayBlocks[dates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData);\n          components.push(new Component(data));\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    Component.$Preferences.ready().then(function() {\n      var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n      // Set default values from user's defaults\n      _this.classification = _this.classification ||\n        Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n    });\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default alarm\n      Component.$Preferences.ready().then(function() {\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList() && card.isGroup !== 1) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              status: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          status: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.constructor.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, Calendar, Component, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList;\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', deregisterCalendarsList);\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.views = data;\n        _.forEach(vm.views, function(view) {\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            view.calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        });\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView(view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, baseComponent) {\n      var type = 'appointment', component;\n\n      if (baseComponent) {\n        component = baseComponent;\n        type = baseComponent.type;\n      }\n      else {\n        if (vm.componentType == 'tasks')\n          type = 'task';\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == 403 &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      $rootScope.$emit('calendars:list');\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      disabled: true,\n      animation: 150,\n      draggable: 'md-list-item',\n      handle: '.md-menu',\n      ghostClass: 'sg-sortable-ghost',\n      chosenClass: 'sg-sortable-chosen',\n      setData: sortable_setData,\n      onEnd: sortable_onEnd\n    };\n    vm.sortableSubscriptions = angular.copy(vm.sortableCalendars);\n    vm.sortableWebCalendars = angular.copy(vm.sortableCalendars);\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    function sortable_setData(dataTransfer, dragEl) {\n      dataTransfer.clearData();\n    }\n\n    function sortable_onEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableCalendars.disabled = !vm.sortableCalendars.disabled;\n      vm.sortableSubscriptions.disabled = !vm.sortableSubscriptions.disabled;\n      vm.sortableWebCalendars.disabled = !vm.sortableWebCalendars.disabled;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url);\n        });\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch('properties.calendar.color', function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    function today() {\n      var fragments = $window.location.hash.split('/'),\n          state = fragments[1],\n          view = fragments[2],\n          now = new Date(),\n          path = ['#', state, view, now.getDayString()];\n      $window.location = path.join('/');\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre>',\n            data,\n            '    </pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog'];\n        function ComponentRawSourceDialogController(scope, $mdDialog) {\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = angular.isDefined(vm.component.attendees);\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.updateStartTime = updateStartTime;\n    vm.adjustStartTime = adjustStartTime;\n    vm.updateEndTime = updateEndTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.updateDueTime = updateDueTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == 403 &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        //hours.push(Component.timeFormat.formatTime(i, 0));\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateStartTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.start.addMinutes(oldStartDate.getHours() * 60 + oldStartDate.getMinutes());\n      adjustStartTime();\n    }\n\n    function adjustStartTime() {\n      // Preserve the delta between the start and end dates\n      var delta;\n      delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n      if (delta !== 0) {\n        oldStartDate = new Date(vm.component.start.getTime());\n        if (vm.component.type === 'appointment') {\n          vm.component.end = new Date(vm.component.start.getTime());\n          vm.component.end.addMinutes(vm.component.delta);\n          oldEndDate = new Date(vm.component.end.getTime());\n        }\n        updateFreeBusy();\n      }\n    }\n\n    function updateEndTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.end.addMinutes(oldEndDate.getHours() * 60 + oldEndDate.getMinutes());\n      adjustEndTime();\n    }\n\n    function adjustEndTime() {\n      // The end date must be after the start date\n      var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n      if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n        if (delta < 0)\n          vm.component.end = new Date(oldEndDate.getTime());\n        else {\n          vm.component.delta = delta;\n          oldEndDate = new Date(vm.component.end.getTime());\n        }\n        updateFreeBusy();\n      }\n    }\n\n    function updateDueTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.due.addMinutes(oldDueDate.getHours() * 60 + oldDueDate.getMinutes());\n      adjustDueTime();\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"\\'bg-category\\' + category\"',\n        '         ng-style=\"{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, originalDay, currentDay, wasOtherBlock,\n            start, duration, durationLeft, maxDuration, enableTransition;\n\n        showGhost = false;\n        enableTransition = function() {\n          iElement.removeClass('sg-event--notransition');\n        };\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          originalDay  = scope.block.pointerHandler.originalEventCoordinates.dayNumber;\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative)  {\n              // Show start hour and set the vertical position\n              scope.block.startHour = getStartTime(start);\n              wasOtherBlock = parseInt(iElement.css('top')) === 0;\n              if (wasOtherBlock)\n                iElement.addClass('sg-event--notransition');\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n              if (wasOtherBlock)\n                $timeout(enableTransition);\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                wasOtherBlock = parseInt(iElement.css('top')) !== 0;\n                if (wasOtherBlock)\n                  iElement.addClass('sg-event--notransition');\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n                if (wasOtherBlock)\n                  $timeout(enableTransition);\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @ngInject\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span class=\"secondary\" ng-if=\"'+p+'!block.component.c_isallday\">{{ '+p+'block.starthour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, scrollView, type, lastScroll, deregisterDragStart, deregisterDragStop;\n\n        scrollView = element[0];\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        lastScroll = 0;\n\n        // Listen to dragstart and dragend events\n        deregisterDragStart = $rootScope.$on('calendar:dragstart', onDragStart);\n        deregisterDragStop = $rootScope.$on('calendar:dragend', onDragEnd);\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          deregisterDragStart();\n          deregisterDragStop();\n          element.off('mouseover', updateFromPointerHandler);\n          angular.element($window).off('resize', updateCoordinates);\n        });\n\n        function initView() {\n          var quarterHeight;\n\n          // Quarter height doesn't change if window is resize; compute it only once\n          quarterHeight = getQuarterHeight();\n\n          view = {\n            type: type,\n            quarterHeight: quarterHeight,\n            scrollStep: 6 * quarterHeight,\n            maxX: getMaxColumns(),\n\n            // Expose a reference of the view element\n            element: scrollView\n          };\n\n          // Compute coordinates of view element; recompute it on window resize\n          angular.element($window).on('resize', updateCoordinates);\n          updateCoordinates();\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * quarterHeight;\n                scrollView.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n        }\n\n        function getQuarterHeight() {\n          var hour0, hour23, height = null;\n\n          hour0 = document.getElementById('hour0');\n          hour23 = document.getElementById('hour23');\n          if (hour0 && hour23)\n            height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n          return height;\n        }\n\n        function getDayDimensions(viewLeft) {\n          var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n          height = width = leftOffset = topOffset = 0;\n          nodes = scrollView.getElementsByClassName('day0');\n\n          if (nodes.length > 0) {\n            domRect = nodes[0].getBoundingClientRect();\n            height = domRect.height;\n            width = domRect.width;\n            leftOffset = domRect.left - viewLeft;\n            tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n            if (tileHeader.length > 0)\n              topOffset = tileHeader[0].clientHeight;\n          }\n\n          return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n        }\n\n        function getMaxColumns() {\n          var max = 0;\n\n          //if (type == 'multiday') {\n            max = scrollView.getElementsByClassName('day').length - 1;\n          //}\n\n          return max;\n        }\n\n        // View has been resized;\n        // Compute the view's origins (x, y), a day's dimensions and left margin.\n        function updateCoordinates() {\n          var domRect, dayDimensions;\n\n          domRect = scrollView.getBoundingClientRect();\n          dayDimensions = getDayDimensions(domRect.left);\n\n          angular.extend(view, {\n            coordinates: {\n              x: domRect.left,\n              y: domRect.top\n            },\n            dayHeight: dayDimensions.height,\n            dayWidth: dayDimensions.width,\n            daysOffset: dayDimensions.offset.left,\n            topOffset: dayDimensions.offset.top\n          });\n        }\n\n        function onDragStart() {\n          element.on('mouseover', updateFromPointerHandler);\n          updateFromPointerHandler();\n        }\n\n        function onDragEnd() {\n          element.off('mouseover', updateFromPointerHandler);\n          Calendar.$view = null;\n        }\n\n        // From SOGoScrollController.updateFromPointerHandler\n        function updateFromPointerHandler() {\n          var scrollStep, pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n          scrollStep = view.scrollStep;\n          pointerHandler = Component.$ghost.pointerHandler;\n          if (pointerHandler) {\n            pointerCoordinates = pointerHandler.getContainerBasedCoordinates(view);\n\n            if (pointerCoordinates) {\n              // Pointer is inside view; Adjust scrollbar if necessary\n              Calendar.$view = view;\n              now = new Date().getTime();\n              if (!lastScroll || now > lastScroll + 100) {\n                lastScroll = now;\n                scrollY = pointerCoordinates.y - scrollStep;\n                if (scrollY < 0) {\n                  minY = -scrollView.scrollTop;\n                  if (scrollY < minY)\n                    scrollY = minY;\n                  scrollView.scrollTop += scrollY;\n                }\n                else {\n                  scrollY = pointerCoordinates.y + scrollStep;\n                  delta = scrollY - scrollView.clientHeight;\n                  if (delta > 0) {\n                    scrollView.scrollTop += delta;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarDayBlockGhost\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayNumber, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayNumber = scope.block.dayNumber;\n        blockIndex = _.findIndex(component.blocks, ['dayNumber', dayNumber]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var block, dragMode, eventType, startDate, newData, newComponent, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n        \n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * 96;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              return b.length;\n            });\n          }\n\n          // Get the dayNumber from the event's first block\n          this.dayNumber = block.component.blocks[0].dayNumber;\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.x * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            this.originalEventCoordinates.dayNumber = this.originalViewCoordinates.x;\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n\n            // This dayNumber needs to be updated with the calendar number.\n            // if (currentView == \"multicolumndayview\")\n            //   this._updateMulticolumnViewDayNumber_SEDGC();\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > 6)\n              coordinates.x = 6;\n            coordinates.x += 7 * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n"]}
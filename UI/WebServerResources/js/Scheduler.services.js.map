{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","pluck","splice","data","writable","_this","forEach","push","isUndefined","fetch","then","calendars","union","filter","acls","objectCreator","$get","$getIndex","$subscribe","uid","path","userResource","calendarData","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","promise","$deleteComponents","components","component","isDefined","c_folder","c_name","uids","$events","difference","$tasks","prototype","color","$acl","isOwned","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","pid","newComponentData","newguid","isNew","Card","Gravatar","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","ready","settings","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","$selectedCount","count","event","selected","length","task","$startRefreshTimeout","type","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","each","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dates","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","object","eventsFields","start","c_startdate","hour","getHourString","blocks","block","nbr","$views","viewData","allDayBlocks","reduce","events","flatten","dayNumber","calendarName","fields","invoke","$parseDate","dateString","time","substring","split","no_time","categories","repeat","alarm","action","quantity","unit","reference","relation","status","delta","classification","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","c_category","$isRecurrent","days","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","map","addAttendee","card","$isList","isGroup","container","listId","refs","ref","c_cn","$preferredEmail","role","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","dlp","constructor","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","l","toUpperCase","alarmDescription","CalendarController","$scope","$rootScope","$state","$stateParams","stateEventsBlocks","updateView","asDate","vm","changeDate","$event","element","currentTarget","attr","go","changeView","deregisterCalendarsList","$on","$inject","controller","CalendarListController","$mdDialog","Dialog","selectComponentType","reload","unselectComponents","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","updateAllOccurrences","pointerHandler","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","getDelta","originalEventCoordinates","originalCalendar","destination","isException","$emit","template","filteredBy","field","sortedBy","cancelSearch","mode","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","focus","User","stateCalendars","newCalendar","ev","prompt","UserLogin","addWebCalendar","inputType","confirmDelete","folder","alert","importCalendar","CalendarImportDialogController","scope","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","response","headers","msg","imported","simple","content","onErrorItem","close","exportCalendar","window","location","href","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","today","fragments","hash","state","service","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","ids","isEqual","ComponentController","AddressBook","Alarm","cardFilter","$filterAll","$cards","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","form","$valid","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","updateStartTime","adjustStartTime","valueOf","oldEndDate","updateEndTime","adjustEndTime","updateDueTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","clickBlock","replace","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","originalDay","wasOtherBlock","durationLeft","maxDuration","enableTransition","scrollViewCtrl","startHour","getStartTime","quarterHeight","topOffset","endHour","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","getQuarterHeight","scrollStep","maxX","getMaxColumns","scrollView","on","updateCoordinates","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","onDragStart","updateFromPointerHandler","onDragEnd","off","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","deregisterDragStop","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","matchesProperty","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","starthour","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","editable","otherCoordinates","getDistance","sqrt","sum","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","setHours"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,\n      EventDragHorizontalOffset: 3\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (o.id != 'personal' &&\n              o.name.localeCompare(calendar.name) === 1);\n    });\n    i = sibling ? _.indexOf(_.pluck(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) { return calendar.acls.objectCreator; }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.pluck(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.pluck(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.pluck(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(calendarData);\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$add(calendar);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n        });\n        d.resolve();\n      }, function() {\n        d.reject();\n      });\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n\n    // We create a c_folder -> event hash\n    var calendars = {}, _this = this;\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.c_folder]))\n        calendars[component.c_folder] = [];\n\n      calendars[component.c_folder].push(component.c_name);\n    });\n\n    _.forEach(calendars, function(uids, c_folder) {\n      Calendar.$$resource.post(c_folder, 'batchDelete', {uids: uids});\n    });\n\n    // We slice both arrays - might be useful if in the future, we can delete\n    // events and tasks at the same time.\n    _this.$Component.$events = _.difference(_this.$Component.$events, components);\n    _this.$Component.$tasks = _.difference(_this.$Component.$tasks, components);\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.pluck(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.pluck(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Mailbox.prototype\n   * @desc Reset the original state the mailbox's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.each(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dates = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    Component.$log.debug('eventsblocks ' + JSON.stringify(params, undefined, 2));\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.object(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000);\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        objects.push(new Component(componentData));\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, reduceComponent, components, data);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), associateComponent, components);\n\n          // Associate Component objects to all-day blocks positions\n          _.each(_.flatten(data.allDayBlocks), associateComponent, components);\n\n          // Build array of dates\n          if (dates.length === 0)\n            for (i = 0; i < data.blocks.length; i++) {\n              dates.push(startDate.getDayString());\n              startDate.addDays(1);\n            }\n\n          // Convert array of blocks to object with days as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++)\n              data.blocks[i][j].dayNumber = i;\n            blocks[dates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++)\n              data.allDayBlocks[i][j].dayNumber = i;\n            allDayBlocks[dates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invoke(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.object(fields, componentData);\n          components.push(new Component(data));\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    Component.$Preferences.ready().then(function() {\n      var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n      // Set default values from user's defaults\n      _this.classification = _this.classification ||\n        Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n    });\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtoto')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.c_category)\n      this.categories = _.invoke(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default alarm\n      Component.$Preferences.ready().then(function() {\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.each(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.each(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.each(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList() && card.isGroup !== 1) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              status: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          status: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   */\n  Component.prototype.$save = function() {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.constructor.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if (this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, Calendar, Component, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList;\n\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', deregisterCalendarsList);\n\n    function updateView() {\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.views = data;\n        _.forEach(vm.views, function(view) {\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            view.calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        });\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView(view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.each(Component['$' + vm.componentType], function(component) { component.selected = false; });\n    }\n\n    function selectAll() {\n      _.each(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) { return component.selected; });\n          Calendar.$deleteComponents(components);\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, baseComponent) {\n      var type = 'appointment', component;\n\n      if (baseComponent) {\n        component = baseComponent;\n        type = baseComponent.type;\n      }\n      else {\n        if (vm.componentType == 'tasks')\n          type = 'task';\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, component).finally(function() {\n          $timeout(function() {\n            Component.$ghost.pointerHandler = null;\n            Component.$ghost.component = null;\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n            $timeout(function() {\n              Component.$ghost = {};\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" md-flex=\"80\" sm-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$ghost = {};\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, $mdDialog.cancel);\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, $mdDialog.cancel);\n        };\n      }\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      $rootScope.$emit('calendars:list');\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.exportCalendar = exportCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    vm.today = today;\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        // Identify which calendar has changed\n        var ids = _.pluck(_.filter(newList, function(o, i) { return !_.isEqual(o, oldList[i]); }), 'id');\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.each(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            calendar.$setActivation().then(function() {\n              $rootScope.$emit('calendars:list');\n            });\n          });\n        }\n      },\n      true // compare for object equality\n    );\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url);\n        });\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar <em>%{0}</em>?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .then(function() {\n                $rootScope.$emit('calendars:list');\n              }, function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function exportCalendar(calendar) {\n      window.location.href = ApplicationBaseURL + '/' + calendar.id + '.ics' + '/export';\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch('properties.calendar.color', function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        }, function(data, status) {\n          Dialog.alert(l('Warning'), data);\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    function today() {\n      var fragments = $window.location.hash.split('/'),\n          state = fragments[1],\n          view = fragments[2],\n          now = new Date(),\n          path = ['#', state, view, now.getDayString()];\n      $window.location = path.join('/');\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'AddressBook', 'Alarm', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, AddressBook, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre>',\n            data,\n            '    </pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog'];\n        function ComponentRawSourceDialogController(scope, $mdDialog) {\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = angular.isDefined(vm.component.attendees);\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.updateStartTime = updateStartTime;\n    vm.adjustStartTime = adjustStartTime;\n    vm.updateEndTime = updateEndTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.updateDueTime = updateDueTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function save(form) {\n      if (form.$valid) {\n        vm.component.$save()\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(data, status) {\n            $log.debug('failed');\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        //hours.push(Component.timeFormat.formatTime(i, 0));\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateStartTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.start.addMinutes(oldStartDate.getHours() * 60 + oldStartDate.getMinutes());\n      adjustStartTime();\n    }\n\n    function adjustStartTime() {\n      // Preserve the delta between the start and end dates\n      var delta;\n      delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n      if (delta !== 0) {\n        oldStartDate = new Date(vm.component.start.getTime());\n        if (vm.component.type === 'appointment') {\n          vm.component.end = new Date(vm.component.start.getTime());\n          vm.component.end.addMinutes(vm.component.delta);\n          oldEndDate = new Date(vm.component.end.getTime());\n        }\n        updateFreeBusy();\n      }\n    }\n\n    function updateEndTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.end.addMinutes(oldEndDate.getHours() * 60 + oldEndDate.getMinutes());\n      adjustEndTime();\n    }\n\n    function adjustEndTime() {\n      // The end date must be after the start date\n      var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n      if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n        if (delta < 0)\n          vm.component.end = new Date(oldEndDate.getTime());\n        else {\n          vm.component.delta = delta;\n          oldEndDate = new Date(vm.component.end.getTime());\n        }\n        updateFreeBusy();\n      }\n    }\n\n    function updateDueTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.due.addMinutes(oldDueDate.getHours() * 60 + oldDueDate.getMinutes());\n      adjustDueTime();\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in block.component.categories\"',\n        '         ng-class=\"\\'bg-category\\' + category\"',\n        '         ng-style=\"{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">{{ block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      // Compute overlapping (2%)\n      pc = 100 / scope.block.siblings;\n      left = scope.block.position * pc;\n      right = 100 - (scope.block.position + 1) * pc;\n      if (pc < 100) {\n        if (left > 0)\n          left -= 2;\n        if (right > 0)\n          right -= 2;\n      }\n\n      // Add some padding (2%)\n      if (left === 0)\n        left = 2;\n      if (right === 0)\n        right = 2;\n\n      // Set position\n      iElement.css('left', left + '%');\n      iElement.css('right', right + '%');\n      if (!scope.block.component || !scope.block.component.c_isallday) {\n        iElement.addClass('starts' + scope.block.start);\n        iElement.addClass('lasts' + scope.block.length);\n      }\n\n      // Set background color\n      if (scope.block.component)\n        iElement.addClass('bg-folder' + scope.block.component.pid);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, originalDay, currentDay, wasOtherBlock,\n            start, duration, durationLeft, maxDuration, enableTransition;\n\n        showGhost = false;\n        enableTransition = function() {\n          iElement.removeClass('sg-event--notransition');\n        };\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          originalDay  = scope.block.pointerHandler.originalEventCoordinates.dayNumber;\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative)  {\n              // Show start hour and set the vertical position\n              scope.block.startHour = getStartTime(start);\n              wasOtherBlock = parseInt(iElement.css('top')) === 0;\n              if (wasOtherBlock)\n                iElement.addClass('sg-event--notransition');\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n              if (wasOtherBlock)\n                $timeout(enableTransition);\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                wasOtherBlock = parseInt(iElement.css('top')) !== 0;\n                if (wasOtherBlock)\n                  iElement.addClass('sg-event--notransition');\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n                if (wasOtherBlock)\n                  $timeout(enableTransition);\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @ngInject\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span class=\"secondary\" ng-if=\"!block.component.c_isallday\">{{ block.starthour }}</span>',\n        '  {{ block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      if (scope.block.component)\n        iElement.addClass('bg-folder' + scope.block.component.pid);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, scrollView, type, lastScroll, deregisterDragStart, deregisterDragStop;\n\n        scrollView = element[0];\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        lastScroll = 0;\n\n        // Listen to dragstart and dragend events\n        deregisterDragStart = $rootScope.$on('calendar:dragstart', onDragStart);\n        deregisterDragStop = $rootScope.$on('calendar:dragend', onDragEnd);\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          deregisterDragStart();\n          deregisterDragStop();\n          element.off('mouseover', updateFromPointerHandler);\n          angular.element($window).off('resize', updateCoordinates);\n        });\n\n        function initView() {\n          var quarterHeight;\n\n          // Quarter height doesn't change if window is resize; compute it only once\n          quarterHeight = getQuarterHeight();\n\n          view = {\n            type: type,\n            quarterHeight: quarterHeight,\n            scrollStep: 6 * quarterHeight,\n            maxX: getMaxColumns(),\n\n            // Expose a reference of the view element\n            element: scrollView\n          };\n\n          // Compute coordinates of view element; recompute it on window resize\n          angular.element($window).on('resize', updateCoordinates);\n          updateCoordinates();\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * quarterHeight;\n                scrollView.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n        }\n\n        function getQuarterHeight() {\n          var hour0, hour23, height = null;\n\n          hour0 = document.getElementById('hour0');\n          hour23 = document.getElementById('hour23');\n          if (hour0 && hour23)\n            height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n          return height;\n        }\n\n        function getDayDimensions(viewLeft) {\n          var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n          height = width = leftOffset = topOffset = 0;\n          nodes = scrollView.getElementsByClassName('day0');\n\n          if (nodes.length > 0) {\n            domRect = nodes[0].getBoundingClientRect();\n            height = domRect.height;\n            width = domRect.width;\n            leftOffset = domRect.left - viewLeft;\n            tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n            if (tileHeader.length > 0)\n              topOffset = tileHeader[0].clientHeight;\n          }\n\n          return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n        }\n\n        function getMaxColumns() {\n          var max = 0;\n\n          //if (type == 'multiday') {\n            max = scrollView.getElementsByClassName('day').length - 1;\n          //}\n\n          return max;\n        }\n\n        // View has been resized;\n        // Compute the view's origins (x, y), a day's dimensions and left margin.\n        function updateCoordinates() {\n          var domRect, dayDimensions;\n\n          domRect = scrollView.getBoundingClientRect();\n          dayDimensions = getDayDimensions(domRect.left);\n\n          angular.extend(view, {\n            coordinates: {\n              x: domRect.left,\n              y: domRect.top\n            },\n            dayHeight: dayDimensions.height,\n            dayWidth: dayDimensions.width,\n            daysOffset: dayDimensions.offset.left,\n            topOffset: dayDimensions.offset.top\n          });\n        }\n\n        function onDragStart() {\n          element.on('mouseover', updateFromPointerHandler);\n          updateFromPointerHandler();\n        }\n\n        function onDragEnd() {\n          element.off('mouseover', updateFromPointerHandler);\n          Calendar.$view = null;\n        }\n\n        // From SOGoScrollController.updateFromPointerHandler\n        function updateFromPointerHandler() {\n          var scrollStep, pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n          scrollStep = view.scrollStep;\n          pointerHandler = Component.$ghost.pointerHandler;\n          if (pointerHandler) {\n            pointerCoordinates = pointerHandler.getContainerBasedCoordinates(view);\n\n            if (pointerCoordinates) {\n              // Pointer is inside view; Adjust scrollbar if necessary\n              Calendar.$view = view;\n              now = new Date().getTime();\n              if (!lastScroll || now > lastScroll + 100) {\n                lastScroll = now;\n                scrollY = pointerCoordinates.y - scrollStep;\n                if (scrollY < 0) {\n                  minY = -scrollView.scrollTop;\n                  if (scrollY < minY)\n                    scrollY = minY;\n                  scrollView.scrollTop += scrollY;\n                }\n                else {\n                  scrollY = pointerCoordinates.y + scrollStep;\n                  delta = scrollY - scrollView.clientHeight;\n                  if (delta > 0) {\n                    scrollView.scrollTop += delta;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarDayBlockGhost\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayNumber, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayNumber = scope.block.dayNumber;\n        blockIndex = _.findIndex(component.blocks, _.matchesProperty('dayNumber', dayNumber));\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var block, dragMode, eventType, startDate, newData, newComponent, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n        \n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, dragMode, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.starthour = block.starthour;\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType + ' ' + dragMode);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * 96;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sum(block.component.blocks, function(b) {\n              return b.length;\n            });\n          }\n\n          // Get the dayNumber from the event's first block\n          this.dayNumber = block.component.blocks[0].dayNumber;\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.x * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            this.originalEventCoordinates.dayNumber = this.originalViewCoordinates.x;\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n\n            // This dayNumber needs to be updated with the calendar number.\n            // if (currentView == \"multicolumndayview\")\n            //   this._updateMulticolumnViewDayNumber_SEDGC();\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > 6)\n              coordinates.x = 6;\n            coordinates.x += 7 * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n"]}
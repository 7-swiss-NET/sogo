{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgCategoryStylesheet.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js","Scheduler/sgNowLine.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","ConflictHTTPErrorCode","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","$reloadAll","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","calendarData","group","$get","$getIndex","$subscribe","uid","path","userResource","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","export","download","type","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","$rootScope","Component_STATUS","Card","Gravatar","STATUS","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","constant","NOT_LOADED","DELAYED_LOADING","LOADING","LOADED","DELAYED_MS","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$emit","timeInterval","$isLoading","$loaded","$filter","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","categories","block","nbr","isFirst","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","repeat","alarm","action","quantity","unit","reference","relation","delta","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","classification","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","sendAppointmentNotifications","SOGoAppointmentSendEMailNotifications","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","expandable","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","partstat","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$state","$stateParams","sgHotkeys","stateEventsBlocks","_registerHotkeys","createHotkey","description","callback","changeDate","args","changeView","_goToPeriod","registerHotkey","$event","direction","vm","selectedDate","_formatDate","setHours","$dateFormat","replace","toggleAllDays","expandedAllDays","updateView","asDate","newDate","element","currentTarget","attr","go","deregisterCalendarsList","hotkeys","$on","deregisterHotkey","$inject","controller","CalendarListController","$mdDialog","focus","Dialog","CalendarSettings","searchMode","newComponent","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","finally","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","User","stateCalendars","_sortableAccept","sourceItemHandleScope","destSortableScope","destItemScope","sortableScope","_sortableEnd","toggleSortableMode","sortableMode","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","catch","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","service","sortableCalendars","scrollableContainer","containment","orderChanged","accept","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","Account","cardFilter","$filterAll","newMessageWithAllRecipients","recipients","_newMessage","newMessageWithRecipient","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","$cards","isValidEmail","searchText","removeAttendee","priorityLevel","priority","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","adjustStartTime","valueOf","oldEndDate","adjustEndTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","c_status","clickBlock","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","durationLeft","maxDuration","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","sgScrollView","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","$element","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","onDragStart","deregisterDragStop","onDragEnd","bindedUpdateCoordinates","updateCoordinates","bindedUpdateFromPointerHandler","updateFromPointerHandler","on","isMultiColumn","$destroy","off","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","getElementsByTagName","el","attributes","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","sgCategoryStylesheet","ngModel","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","sgNowLine","iAttr","sgCalendarScrollViewCtrl","_getDays","_getView","_unwatchView","_unwatchDays","updateLine","sgNowLineController","_updateLine","force","nowDay","hourHeight","minuteHeight","lineElement","_addLine","updater","$lineElement","dayElement","eq"],"mappings":"CAEA,WACE,YAOA,SAASA,GAASC,GAGhB,GADAC,KAAKC,KAAKF,GACNC,KAAKE,OAASF,KAAKG,GAAI,CAEzB,GAAIC,GAAkBN,EAASO,WAAWC,OAAO,eAAgBN,KAAKE,KACtEF,MAAKO,QAAQH,IASjBN,EAASU,UAAY,KAAM,WAAY,OAAQ,aAAc,WAAY,cAAe,YAAa,MAAO,SAASC,EAAIC,EAAUC,EAAMC,EAAUC,EAAUC,EAAaC,EAAWC,GAanL,MAZAC,SAAQC,OAAOpB,GACbW,GAAIA,EACJC,SAAUA,EACVC,KAAMA,EACNN,WAAY,GAAIQ,GAASD,EAASO,WAAW,aAAe,WAAYP,EAASO,cACjFC,aAAcN,EACdO,WAAYN,EACZO,MAAON,EACPG,WAAYP,EAASO,aACrBI,MAAO,OAGFzB,GAOT,KACEmB,QAAQO,OAAO,oBAEjB,MAAMC,GACJR,QAAQO,OAAO,oBAAqB,gBAEtCP,QAAQO,OAAO,oBACZE,MAAM,oBACLC,mBAA6B,GAC7BC,0BAA6B,EAC7BC,sBAA6B,MAE9BC,QAAQ,WAAYhC,EAASU,UAOhCV,EAASiC,iBAAmB,WAC1B,GACIC,GADAC,EAAkBnC,EAASsB,aAAac,SAASC,mBAGrD,OAAuB,SAAnBF,IACFD,EAAWI,EAAEC,KAAKvC,EAASwC,SAAS,MAAM,GAAO,SAASN,GACxD,MAAOA,GAASO,UAGTP,EAAS7B,GAGb,YAQTL,EAAS0C,KAAO,SAASR,GAEvB,GAAIS,GAAMC,EAASC,CAGjBF,GADET,EAASY,cACJ5C,KAAK6C,cACLb,EAASc,eACT9C,KAAK+C,eAEL/C,KAAKgD,WAEdN,EAAUN,EAAEC,KAAKI,EAAM,SAASQ,GAC9B,MAAuB,YAAfjB,EAAS7B,IACA,YAAR8C,EAAE9C,IACsC,IAAxC8C,EAAE/C,KAAKgD,cAAclB,EAAS9B,QAEzCyC,EAAID,EAAUN,EAAEe,QAAQf,EAAEgB,IAAIX,EAAM,MAAOC,EAAQvC,IAAM,EACzDsC,EAAKY,OAAOV,EAAG,EAAGX,GAElBhC,KAAKoB,aAAakC,QAAQC,KAAK,WACzBzD,EAASsB,aAAaoC,SAAS1D,SAAS2D,cAE1C3D,EAAS4D,iBAAiBtB,EAAEuB,QAAQ7D,EAASwC,WAAY,OAAOiB,KAAK,WAEnEzD,EAAS8D,kBAYjB9D,EAASwC,SAAW,SAASuB,EAAMC,GACjC,GAAIC,GAAQ/D,IACZ,IAAI6D,EACF7D,KAAKgD,cACLhD,KAAK+C,kBACL/C,KAAK6C,iBAEL5B,QAAQ+C,QAAQH,EAAM,SAASZ,EAAGN,GAChC,GAAIX,GAAW,GAAIlC,GAASmD,EACxBjB,GAASY,cACXmB,EAAMlB,cAAcoB,KAAKjC,GAClBA,EAASc,eAChBiB,EAAMhB,eAAekB,KAAKjC,GAE1B+B,EAAMf,WAAWiB,KAAKjC,SAGvB,IAAIf,QAAQiD,YAAYlE,KAAKgD,YAIhC,MAHAhD,MAAKgD,cACLhD,KAAK+C,kBACL/C,KAAK6C,iBACE/C,EAASO,WAAW8D,MAAM,iBAAiBZ,KAAK,SAASM,GAC9D,MAAO/D,GAASwC,SAASuB,EAAKO,UAAWN,IAI7C,OAAIA,GACK1B,EAAEiC,MAAMrE,KAAKgD,WAAYZ,EAAEkC,OAAOtE,KAAK+C,eAAgB,SAASf,GACrE,MAAOA,GAASuC,SAAWvC,EAASwC,KAAKC,iBAItCrC,EAAEiC,MAAMrE,KAAKgD,WAAYhD,KAAK+C,eAAgB/C,KAAK6C,gBAO5D/C,EAAS8D,WAAa,WACpB,GAAIG,GAAQ/D,IAEZF,GAASO,WAAW8D,MAAM,iBAAiBZ,KAAK,SAASM,GACvDzB,EAAE4B,QAAQH,EAAKO,UAAW,SAASM,GACjC,GAAIC,GAAO3C,CAGT2C,GADED,EAAa9B,cACPmB,EAAMlB,cACP6B,EAAa5B,eACZiB,EAAMhB,eAENgB,EAAMf,WAEhBhB,EAAWI,EAAEC,KAAKsC,EAAO,SAAS1B,GAAK,MAAOA,GAAE9C,IAAMuE,EAAavE,KAC/D6B,GACFA,EAAS/B,KAAKyE,QAWtB5E,EAAS8E,KAAO,SAASzE,GACvB,GAAI6B,EAQJ,OANAA,GAAWI,EAAEC,KAAKvC,EAASkD,WAAY,SAASC,GAAK,MAAOA,GAAE9C,IAAMA,IAC/D6B,IACHA,EAAWI,EAAEC,KAAKvC,EAASiD,eAAgB,SAASE,GAAK,MAAOA,GAAE9C,IAAMA,KACrE6B,IACHA,EAAWI,EAAEC,KAAKvC,EAAS+C,cAAe,SAASI,GAAK,MAAOA,GAAE9C,IAAMA,KAElE6B,GASTlC,EAAS+E,UAAY,SAAS1E,GAC5B,GAAIwC,EAQJ,OANAA,GAAIP,EAAEe,QAAQf,EAAEgB,IAAItD,EAASkD,WAAY,MAAO7C,GAC5CwC,EAAI,IACNA,EAAIP,EAAEe,QAAQf,EAAEgB,IAAItD,EAASiD,eAAgB,MAAO5C,IAClDwC,EAAI,IACNA,EAAIP,EAAEe,QAAQf,EAAEgB,IAAItD,EAAS+C,cAAe,MAAO1C,IAE9CwC,GAUT7C,EAASgF,WAAa,SAASC,EAAKC,GAClC,GAAIjB,GAAQ/D,IACZ,OAAOF,GAASO,WAAW4E,aAAaF,GAAKZ,MAAMa,EAAM,aAAazB,KAAK,SAASmB,GAClF,GAAI1C,GAAW,GAAIlC,GAASmB,QAAQC,QAASqB,OAAQ,GAAKmC,GAM1D,OALKtC,GAAEC,KAAK0B,EAAMhB,eAAgB,SAASE,GACzC,MAAOA,GAAE9C,IAAMuE,EAAavE,MAE5BL,EAAS0C,KAAKR,GAETA,KAUXlC,EAASoF,gBAAkB,SAASC,GAClC,GAAIpB,GAAQ/D,KACRoF,EAAItF,EAASW,GAAG4E,OAmCpB,OAjCIjD,GAAEC,KAAK0B,EAAMlB,cAAe,SAASI,GACrC,MAAOA,GAAEqC,KAAKC,gBAAkBJ,IAGlCC,EAAEI,SAGF1F,EAASO,WAAWoF,KAAK,KAAM,kBAAoBN,IAAKA,IAAO5B,KAAK,SAASmB,GAC3EzD,QAAQC,OAAOwD,GACb9B,eAAe,EACf8C,YAAY,EACZC,UAAU,EACVC,MAAO9F,EAASqB,WAAW0E,MAC3BP,MAAQC,eAAgBJ,IAE1B,IAAInD,GAAW,GAAIlC,GAAS4E,EAC5B5E,GAASO,WAAW8D,MAAMnC,EAAS7B,GAAI,UAAUoD,KAAK,SAASM,GAE7D/D,EAASa,KAAKmF,MAAMC,KAAKC,UAAUnC,EAAMoC,OAAW,IACpDnG,EAAS0C,KAAKR,GACdoD,EAAEc,WACD,SAASC,GACa,KAAnBA,EAASC,OAEXhB,EAAEc,QAAQlE,GAGVoD,EAAEI,YAGLJ,EAAEI,QAGAJ,EAAEiB,SASXvG,EAASwG,mBAAqB,WAC5B,GAAIC,KAYJ,OAVAnE,GAAE4B,QAAQhE,KAAK6C,cAAe,SAASb,GACrC,GAAIqE,GAAUvG,EAASO,WAAW8D,MAAMnC,EAAS7B,GAAI,SACrDkG,GAAQ9C,KAAK,SAASM,GACpB7B,EAASwE,QAAS,GACjB,SAASL,GACVnE,EAASwE,OAASC,EAAEN,EAASO,cAE/BH,EAAStC,KAAKoC,KAGTvG,EAASW,GAAGkG,IAAIJ,IASzBzG,EAAS8G,kBAAoB,SAASC,GACpC,GAAkBzC,MAAgBmC,IAYlC,OAVAnE,GAAE4B,QAAQ6C,EAAY,SAASC,GACxB7F,QAAQ8F,UAAU3C,EAAU0C,EAAUE,QACzC5C,EAAU0C,EAAUE,SACtB5C,EAAU0C,EAAUE,KAAK/C,KAAK6C,EAAU3G,MAG1CiC,EAAE4B,QAAQI,EAAW,SAAS6C,EAAMD,GAClCT,EAAStC,KAAKnE,EAASO,WAAWoF,KAAKuB,EAAK,eAAgBC,KAAMA,OAG7DnH,EAASW,GAAGkG,IAAIJ,IASzBzG,EAAS4D,iBAAmB,SAASwD,GACnC,MAAOlH,MAAKK,WAAWoF,KAAK,KAAM,oBAAsByB,QAASA,IAAW3D,KAAK,WAE/E,GADAzD,EAASsB,aAAaoC,SAAS1D,SAAS2D,aAAeyD,GAClDA,EAEH,MAAOpH,GAASO,WAAW8D,MAAM,iBAAiBZ,KAAK,SAASM,GAC9D,MAAO/D,GAASwC,SAASuB,EAAKO,gBAWtCtE,EAASqH,UAAUlH,KAAO,SAAS4D,GACjC7D,KAAKoH,MAAQpH,KAAKoH,OAAS,UAC3BpH,KAAKuC,OAAS,EACdtB,QAAQC,OAAOlB,KAAM6D,GACjB7D,KAAKG,KACPH,KAAKqH,KAAO,GAAIvH,GAASwB,MAAM,YAActB,KAAKG,KAGpDH,KAAKuE,QAAUzE,EAASqB,WAAWmG,aAAetH,KAAK4F,OAAS9F,EAASqB,WAAW0E,MACpF7F,KAAK8C,gBAAkB9C,KAAK2F,UAAY3F,KAAK4F,OAAS9F,EAASqB,WAAW0E,MACtE5E,QAAQiD,YAAYlE,KAAKuH,eAE3BvH,KAAKuH,YAAcvH,KAAKwH,UAU5B1H,EAASqH,UAAUM,IAAM,WACvB,MAAIzH,MAAKG,GAEAL,EAASW,GAAGiH,KAAK1H,KAAKG,IAItBH,KAAK2H,oBAAoBpE,KAAK,SAASvB,GAC5C,MAAOA,GAAS7B,MAWtBL,EAASqH,UAAUS,aAAe,SAASC,GAGzC,MAFI5G,SAAQiD,YAAY2D,KACtBA,EAAO,MACFA,EAAO,UAAY7H,KAAKG,IAUjCL,EAASqH,UAAUW,QAAU,WAC3B,GACInF,GACAyB,EAFAL,EAAQ/D,IAIZ,OAAIA,MAAKE,MAAQF,KAAKuH,YAAYrH,KAEzBJ,EAASW,GAAGiH,QAInBtD,EADEpE,KAAK4C,cACK9C,EAAS+C,cACd7C,KAAK8C,eACAhD,EAASiD,eAETjD,EAASkD,WAEvBL,EAAIP,EAAEe,QAAQf,EAAEgB,IAAIgB,EAAW,MAAOpE,KAAKG,IACvCwC,GAAI,EACC3C,KAAK+H,QAAQxE,KAAK,WACvBa,EAAUf,OAAOV,EAAG,GACpB7C,EAAS0C,KAAKuB,KAITjE,EAASW,GAAG+E,WAUvB1F,EAASqH,UAAUa,QAAU,WAC3B,GACIvF,GACA4D,EAFAtC,EAAQ/D,IAgBZ,OAZIA,MAAK8C,gBACPuD,EAAUvG,EAASO,WAAW8D,MAAMnE,KAAKG,GAAI,eAC7CsC,EAAO3C,EAASiD,iBAGhBsD,EAAUvG,EAASO,WAAW4H,OAAOjI,KAAKG,IAExCsC,EADEzC,KAAK4C,cACA9C,EAAS+C,cAET/C,EAASkD,YAGbqD,EAAQ9C,KAAK,WAClB,GAAIZ,GAAIP,EAAEe,QAAQf,EAAEgB,IAAIX,EAAM,MAAOsB,EAAM5D,GAC3CsC,GAAKY,OAAOV,EAAG,MASnB7C,EAASqH,UAAUe,OAAS,WAC1B,GAAInE,GAAQ/D,IACZiB,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAOyG,GACzB,eAAPA,GAAkC,KAAVA,EAAI,UACvBpE,GAAMoE,KAGjBlH,QAAQC,OAAOlB,KAAMA,KAAKuH,aAC1BvH,KAAKuH,YAAcvH,KAAKwH,SAS1B1H,EAASqH,UAAUY,MAAQ,WACzB,GAAIhE,GAAQ/D,IAEZ,OAAOF,GAASO,WAAW+H,KAAKpI,KAAKG,GAAIH,KAAKwH,SAASjE,KAAK,SAASM,GAGnE,MADAE,GAAMwD,YAAcxD,EAAMyD,QACnB3D,GACN,SAASA,GAIV,MAHA/D,GAASa,KAAK0H,MAAMtC,KAAKC,UAAUnC,EAAMoC,OAAW,IAEpDlC,EAAMmE,SACCrE,KAUX/D,EAASqH,UAAUmB,eAAiB,SAASC,EAAUC,GACrD,GAAIzE,GAAQ/D,KACRoF,EAAItF,EAASW,GAAG4E,OAiBpB,OAfAvF,GAASO,WAAWoF,KAAKzF,KAAKG,GAAI,mBAAqBoI,SAAUA,EAAUC,SAAUA,IAAYjF,KAAK,WACpGzD,EAASO,WAAW8D,MAAMJ,EAAM5D,GAAI,UAAUoD,KAAK,SAASM,GAC1D/D,EAAS0C,KAAKuB,GACdqB,EAAEc,WACD,SAASC,GACa,KAAnBA,EAASC,OAEXhB,EAAEI,OAAOiB,EAAE,+BAGXrB,EAAEI,OAAOW,EAASO,eAGrBtB,EAAEI,QAEEJ,EAAEiB,SASXvG,EAASqH,UAAUsB,OAAS,WAC1B,MAAO3I,GAASO,WAAWqI,SAAS1I,KAAKG,GAAK,OAAQ,SAAU,MAAOwI,KAAM,8BAS/E7I,EAASqH,UAAUyB,eAAiB,WAClC,MAAO9I,GAASO,WAAW8D,MAAMnE,KAAKG,IAAKH,KAAKuC,OAAO,GAAG,MAAQ,mBASpEzC,EAASqH,UAAU0B,cAAgB,SAASC,EAAaC,GACvD,MAAOjJ,GAASuB,WAAW2H,MAAMhJ,KAAKG,GAAI2I,EAAaC,IASzDjJ,EAASqH,UAAU5G,QAAU,SAASR,GACpC,GAAIgE,GAAQ/D,IAGZA,MAAK2H,oBAAsB5H,EAAmBwD,KAAK,SAASM,GAC1D,MAAO/D,GAASY,SAAS,WAGvB,MADAqD,GAAM9D,KAAK4D,GACJE,KAER,SAASF,GACVE,EAAMkF,SAAU,EACZhI,QAAQiI,SAASrF,IACnB/D,EAASY,SAAS,WAChBO,QAAQC,OAAO6C,EAAOF,QAY9B/D,EAASqH,UAAUK,MAAQ,WACzB,GAAIxF,KAOJ,OANAf,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAOyG,GACzB,eAAPA,GACU,KAAVA,EAAI,KACNnG,EAASmG,GAAOzG,KAGbM,MCllBX,WACE,YAOA,SAASjB,GAAUoI,GAEjB,GAAwC,kBAA7BA,GAAoB5F,MAE7B,GADAvD,KAAKC,KAAKkJ,GACNnJ,KAAKgH,MAAQhH,KAAKG,GAAI,CAGxB,GAAIiJ,GAAmBrI,EAAUV,WAAWgJ,QAAQrJ,KAAKgH,IACzDhH,MAAKO,QAAQ6I,GACbpJ,KAAKsJ,OAAQ,OAKftJ,MAAKO,QAAQ4I,GASjBpI,EAAUP,UAAY,KAAM,WAAY,OAAQ,aAAc,aAAc,qBAAsB,cAAe,OAAQ,WAAY,WAAY,SAASC,EAAIC,EAAUC,EAAM4I,EAAY3I,EAAU4I,EAAkB1I,EAAa2I,EAAMC,EAAU7I,GA4CjP,MA3CAI,SAAQC,OAAOH,GACb4I,OAAQH,EACR/I,GAAIA,EACJC,SAAUA,EACVC,KAAMA,EACN4I,WAAYA,EACZnI,aAAcN,EACd8I,MAAOH,EACPI,UAAWH,EACXrJ,WAAY,GAAIQ,GAASD,EAASO,WAAW,aAAe,WAAYP,EAASO,cACjF2I,WAAY,QAEZC,QAAUrI,MAAO,GAAIsI,OAAQ,2BAE7BC,cAAgBC,KAAM,QAASC,IAAK,EAAGC,YAAa,cAEpDC,aAAeH,KAAM,SAAUC,IAAK,EAAGC,YAAa,mBACpDE,gBAAiB,KACjBC,YAEFzJ,EAAYwC,QAAQC,KAAK,WAEnBzC,EAAY0C,SAAS1D,SAAS0K,oBAChCzJ,EAAUkJ,aAAaG,YAActJ,EAAY0C,SAAS1D,SAAS0K,mBACjE1J,EAAY0C,SAAS1D,SAAS2K,mBAChC1J,EAAUsJ,YAAYD,YAActJ,EAAY0C,SAAS1D,SAAS2K,kBAChE3J,EAAY0C,SAAS1D,SAAS4K,qBAChC3J,EAAUkJ,aAAaC,KAAOpJ,EAAY0C,SAAS1D,SAAS4K,mBAAmB,GAC/E3J,EAAUkJ,aAAaE,IAAMQ,SAAS7J,EAAY0C,SAAS1D,SAAS4K,mBAAmB,KAErF5J,EAAY0C,SAAS1D,SAAS8K,oBAChC7J,EAAUsJ,YAAYH,KAAOpJ,EAAY0C,SAAS1D,SAAS8K,kBAAkB,GAC7E7J,EAAUsJ,YAAYF,IAAMQ,SAAS7J,EAAY0C,SAAS1D,SAAS8K,kBAAkB,KAEvF7J,EAAUsJ,YAAYQ,eAAiBF,SAAS7J,EAAY0C,SAASsH,oBAErE/J,EAAUgK,YAAcjK,EAAYoB,SAAS8I,6BAEzClK,EAAYoB,SAAS+I,iBACvBlK,EAAU+I,WAAahJ,EAAYoB,SAAS+I,kBAIzClK,GAOT,KACEE,QAAQO,OAAO,oBAEjB,MAAMC,GACJR,QAAQO,OAAO,oBAAqB,gBAEtCP,QAAQO,OAAO,oBACZ0J,SAAS,sBACRC,WAAiB,EACjBC,gBAAiB,EACjBC,QAAiB,EACjBC,OAAiB,EACjBC,WAAiB,MAElBzJ,QAAQ,YAAaf,EAAUP,UAQlCO,EAAUyK,eAAiB,WACzB,GAAIC,EASJ,OAPAA,GAAQ,EACJ1K,EAAU2K,UACZD,GAAUrJ,EAAEkC,OAAOvD,EAAU2K,QAAS,SAASC,GAAS,MAAOA,GAAMC,WAAcC,QAEjF9K,EAAU+K,SACZL,GAAUrJ,EAAEkC,OAAOvD,EAAU+K,OAAQ,SAASC,GAAQ,MAAOA,GAAKH,WAAcC,QAE3EJ,GAST1K,EAAUiL,qBAAuB,SAASrD,GAGpC5H,EAAUuJ,iBACZvJ,EAAUL,SAASuL,OAAOlL,EAAUuJ,iBAEtCvJ,EAAUK,aAAakC,QAAQC,KAAK,WAElC,GAAI2I,GAAmBnL,EAAUK,aAAac,SAASiK,oBACvD,IAAID,GAAwC,YAApBA,EAAgC,CACtD,GAAIE,GAAInL,QAAQoL,KAAKtL,EAAUwI,WAAYxI,EAAUwI,WAAW+C,MAAO,iBACvEvL,GAAUuJ,gBAAkBvJ,EAAUL,SAAS0L,EAAmC,IAAhCF,EAAiBK,oBAWzExL,EAAUyL,WAAa,WACrB,MAAOzL,GAAU0L,SAAW1L,EAAU4I,OAAO0B,SAW/CtK,EAAU2L,QAAU,SAAS/D,EAAMgE,GACjC,GAAI5I,GAAQ/D,KACR4M,EAAM,GAAIC,MACVC,EAAMF,EAAIG,UACVC,EAAQJ,EAAIK,WAAa,EACzBC,EAAON,EAAIO,cACXC,EAAW,SAAWzE,EAAK0E,aAC3BC,GACER,IAAK,GAAKI,GAAQF,EAAQ,GAAG,IAAI,IAAMA,GAASF,EAAM,GAAG,IAAI,IAAMA,EAKzE,OAFA/L,GAAUiL,qBAAqBrD,GAExB3I,KAAKoB,aAAakC,QAAQC,KAAK,WACpC,GAAI4F,GAEAoE,EADAC,GAAQ,CA8BZ,OA3BAvM,SAAQC,OAAO6C,EAAMgG,OAAQuD,GAEzBX,GACFvK,EAAE4B,QAAQ5B,EAAEqL,KAAKd,GAAU,SAASxE,GAElCqF,GAAUzJ,EAAMgG,OAAO5B,IAAQwE,EAAQxE,IAAQpH,EAAUgJ,OAAO5B,GACrD,UAAPA,GAAmBwE,EAAQxE,GAC7BqF,GAAQ,EAEDvM,QAAQ8F,UAAUhD,EAAMgG,OAAO5B,IACtCpE,EAAMgG,OAAO5B,GAAOwE,EAAQxE,GAE5BpE,EAAMqJ,GAAUjF,GAAOwE,EAAQxE,KAKrCgB,EAAsBpF,EAAM1D,WAAW8D,MAAM,KAAMwE,EAAO,OACb1H,QAAQC,OAAO6C,EAAMqJ,GAAWrJ,EAAMgG,SAG/EyD,IACFD,EAAqB,SAAR5E,EAAkB,UAAY,eACpC5H,GAAUwM,GACjBxM,EAAUJ,KAAKmF,MAAM,mBAAqByH,IAGrCxJ,EAAM2J,kBAAkB/E,EAAMQ,MAYzCpI,EAAUiI,MAAQ,SAAS2E,EAAY7E,EAAa8E,GAClD,GAAIzE,GAAqBnE,GAAQ2I,EAAY7E,EAO7C,OALI8E,IACF5I,EAAKf,KAAK2J,GAEZzE,EAAsBnJ,KAAKK,WAAW8D,MAAMa,EAAK6I,KAAK,KAAM,QAErD,GAAI9M,GAAUoI,IASvBpI,EAAU+M,iBAAmB,SAASC,GACpC,GAAIC,GAAK,GAAIC,QAAOF,EAAO,IAC3B,OAAO3L,GAAEkC,OAAOlC,EAAEqL,KAAK1M,EAAUgK,aAAc,SAASmD,GACtD,MAAOA,GAASlE,OAAOgE,KAAO,KAUlCjN,EAAUoN,iBAAmB,SAASC,GACpC,MAAOpO,MAAKK,WAAWoF,KAAK,KAAM,oBAAsBhD,KAAM2L,EAAgB,cAUhFrN,EAAUsN,qBAAuB,SAASC,EAAMC,GAC9C,GAAIxK,GAAQ/D,IAEZ,OAAOe,GAAUK,aAAakC,QAAQC,KAAK,SAASM,GAClD,GAAI2K,GAAgBC,EAAYC,EAAWC,CA6B3C,OA5BAH,GAAiBzN,EAAUK,aAAac,SAAS0M,mBAErC,OAARN,GACFG,EAAa,UACbC,EAAYC,EAAUJ,GAEP,kBAARD,GACPG,EAAa,qBACbC,EAAYC,EAAUJ,GAEP,QAARD,GACPG,EAAa,WACbC,EAAYH,EAAKM,YAAYL,GAC7BG,EAAU,GAAI9B,MACd8B,EAAQG,QAAQJ,EAAUK,WAC1BJ,EAAQK,QAAQ,IAED,SAARV,IACPG,EAAa,YACbC,EAAYH,EACZG,EAAUO,QAAQ,GAClBP,EAAYA,EAAUG,YAAYL,GAClCG,EAAU,GAAI9B,MACd8B,EAAQG,QAAQP,EAAKQ,WACrBJ,EAAQO,SAASP,EAAQ1B,WAAa,GACtC0B,EAAQK,SAAQ,GAChBL,EAAUA,EAAQQ,UAAUX,IAEvBzK,EAAMqL,cAAcX,EAAYC,EAAWC,MAYtD5N,EAAUqO,cAAgB,SAASd,EAAMI,EAAWC,GAClD,GAAIrB,GAAQnE,EAAqBxG,EAAG0M,EAAGC,KAAeC,KAClDC,EAAWzO,EAAUN,GAAG4E,OAuG5B,OArGAiI,IAAWgB,KAAMA,EAAKmB,cAAeC,GAAIhB,EAAUiB,eAAgBC,GAAIjB,EAAQgB,gBAC/ExG,EAAsBnJ,KAAKK,WAAW8D,MAAM,KAAM,eAAgBmJ,GAClEnE,EAAoB5F,KAAK,SAASsM,GAChC,GAAIC,GAAiBC,CAErBD,GAAkB,SAASE,EAASC,EAAWtN,GAC7C,GAEImE,GAFAoJ,EAAgB9N,EAAE+N,UAAUnQ,KAAKoQ,aAAcH,GAC/CI,EAAQ,GAAIxD,MAAiC,IAA5BqD,EAAcI,YAUnC,OARAJ,GAAcK,KAAOF,EAAMG,gBAC3BN,EAAcO,UACd3J,EAAY,GAAI/F,GAAUmP,GAE1BpJ,EAAU4J,WAAatO,EAAEkC,OAAOwC,EAAU4J,WAAY,SAASxQ,GAC7D,MAAOa,GAAUK,aAAac,SAAS8I,6BAA6B9K,KAEtE8P,EAAQ/L,KAAK6C,GACNkJ,GAGTD,EAAqB,SAASY,GAC5B3Q,KAAK2Q,EAAMC,KAAKH,OAAOxM,KAAK0M,GAC5BA,EAAM7J,UAAY9G,KAAK2Q,EAAMC,KAC7BD,EAAME,QAA4C,GAAjC7Q,KAAK2Q,EAAMC,KAAKH,OAAO5E,QAG1C9K,EAAU+P,UACV/P,EAAUL,SAAS,WACjB0B,EAAE4B,QAAQ6L,EAAO,SAAShM,EAAMkN,GAC9B,GAAqDC,GAAjDnK,KAAiB4J,KAAaQ,IAwBlC,KArBApN,EAAKuM,aAAa/M,OAAOjB,EAAEe,QAAQU,EAAKuM,aAAc,YAAoB,EAAG,OAC7EvM,EAAKuM,aAAa/M,OAAOjB,EAAEe,QAAQU,EAAKuM,aAAc,UAAoB,EAAG,MAC7EvM,EAAKuM,aAAa/M,OAAOjB,EAAEe,QAAQU,EAAKuM,aAAc,mBAAoB,EAAG,gBAC7EvM,EAAKuM,aAAa/M,OAAOjB,EAAEe,QAAQU,EAAKuM,aAAc,WAAoB,EAAG,WAG7EhO,EAAE8O,OAAOrN,EAAKsN,OAAQ/O,EAAEiK,KAAKyD,EAAiBjM,GAAOgD,GAGrDzE,EAAE4B,QAAQ5B,EAAEgP,QAAQvN,EAAK4M,QAASrO,EAAEiK,KAAK0D,EAAoBlJ,IAG7DzE,EAAE4B,QAAQ5B,EAAEgP,QAAQvN,EAAKoN,cAAe7O,EAAEiK,KAAK0D,EAAoBlJ,IAG3C,IAApByI,EAASzD,SACXyD,EAAWlN,EAAEuB,QAAQE,EAAKwN,KAAM,QAChC9B,EAAanN,EAAEuB,QAAQE,EAAKwN,KAAM,WAI/B1O,EAAI,EAAGA,EAAIkB,EAAK4M,OAAO5E,OAAQlJ,IAAK,CACvC,IAAK0M,EAAI,EAAGA,EAAIxL,EAAK4M,OAAO9N,GAAGkJ,OAAQwD,IACrCxL,EAAK4M,OAAO9N,GAAG0M,GAAGiC,SAAW3O,EAAKoO,EAAYlN,EAAK4M,OAAO5E,OAC1DhI,EAAK4M,OAAO9N,GAAG0M,GAAGkC,UAAYhC,EAAW5M,EAE3C8N,GAAOnB,EAAS3M,IAAMkB,EAAK4M,OAAO9N,GAIpC,IAAKA,EAAI,EAAGA,EAAIkB,EAAKoN,aAAapF,OAAQlJ,IAAK,CAC7C,IAAK0M,EAAI,EAAGA,EAAIxL,EAAKoN,aAAatO,GAAGkJ,OAAQwD,IAC3CxL,EAAKoN,aAAatO,GAAG0M,GAAGiC,SAAW3O,EAAKoO,EAAYlN,EAAKoN,aAAapF,OACtEhI,EAAKoN,aAAatO,GAAG0M,GAAGkC,UAAYhC,EAAW5M,EAEjDsO,GAAa3B,EAAS3M,IAAMkB,EAAKoN,aAAatO,GAiBhD5B,EAAUJ,KAAKmF,MAAM,iBAAmB1D,EAAEgP,QAAQvN,EAAK4M,QAAQ5E,OAAS,KACxE9K,EAAUJ,KAAKmF,MAAM,yBAA2B1D,EAAEgP,QAAQvN,EAAKoN,cAAcpF,OAAS,KAGtFmF,GAAaP,OAAQA,EAAQQ,aAAcA,GACvCpN,EAAK1D,IAAM0D,EAAK2N,eAElBR,EAAS7Q,GAAK0D,EAAK1D,GACnB6Q,EAASQ,aAAe3N,EAAK2N,cAE/BzQ,EAAU+P,OAAO7M,KAAK+M,KAGxBxB,EAAStJ,QAAQnF,EAAU+P,WAE5BtB,EAAShK,QAELgK,EAASnJ,SAUlBtF,EAAU2M,kBAAoB,SAAS/E,EAAMQ,GAC3C,GACItC,KASJ,OANA9F,GAAU0L,QAAU1L,EAAU4I,OAAOyB,gBACrCrK,EAAUL,SAAS,WACbK,EAAU0L,SAAW1L,EAAU4I,OAAO2B,SACxCvK,EAAU0L,QAAU1L,EAAU4I,OAAO0B,UACtCtK,EAAU4I,OAAO4B,YAEbpC,EAAoB5F,KAAK,SAASM,GACvC,MAAO9C,GAAUL,SAAS,WACxB,GAAI+Q,GAASrP,EAAEsP,UAAU7N,EAAK4N,OAAQ,cAwBtC,OAvBEA,GAAOpO,OAAOjB,EAAEe,QAAQsO,EAAQ,YAAa,EAAG,OAChDA,EAAOpO,OAAOjB,EAAEe,QAAQsO,EAAQ,UAAW,EAAG,MAC9CA,EAAOpO,OAAOjB,EAAEe,QAAQsO,EAAQ,mBAAoB,EAAG,gBAGzDrP,EAAE8O,OAAOrN,EAAK8E,GAAO,SAAS9B,EAAYqJ,EAAevN,GACvD,GAA+CmE,GAA3CjD,EAAOzB,EAAE+N,UAAUsB,EAAQvB,EAO/B,OANApJ,GAAY,GAAI/F,GAAU8C,GAE1BiD,EAAU4J,WAAatO,EAAEkC,OAAOwC,EAAU4J,WAAY,SAASxQ,GAC7D,MAAOa,GAAUK,aAAac,SAAS8I,6BAA6B9K,KAEtE2G,EAAW5C,KAAK6C,GACTD,GACNA,GAEH9F,EAAUJ,KAAKmF,MAAM,WAAa6C,EAAO,WAAa9B,EAAWgF,OAAS,KAG1E9K,EAAU,IAAM4H,GAAQ9B,EAExB9F,EAAU0L,QAAU1L,EAAU4I,OAAO2B,OAE9BzE,OASb9F,EAAU4Q,YAAc,WACtB3R,KAAKuK,OAAOqH,eAAiB,KAC7B5R,KAAKuK,OAAOzD,UAAY,KACxB9G,KAAKuK,OAAOsH,UAAY,KACxB7R,KAAKuK,OAAOuH,QAAU,MAUxB/Q,EAAUgR,WAAa,SAASC,EAAYrF,GAC1C,GAAI4B,GAAM0D,CAIV,OAFA1D,GAAOyD,EAAWE,UAAU,EAAE,IAAIC,MAAM,KAEpCxF,GAAWA,EAAQyF,QACd,GAAIvF,MAAKlC,SAAS4D,EAAK,IAAK5D,SAAS4D,EAAK,IAAM,EAAG5D,SAAS4D,EAAK,MAE1E0D,EAAOD,EAAWE,UAAU,GAAG,IAAIC,MAAM,KAElC,GAAItF,MAAKlC,SAAS4D,EAAK,IAAK5D,SAAS4D,EAAK,IAAM,EAAG5D,SAAS4D,EAAK,IACxD5D,SAASsH,EAAK,IAAKtH,SAASsH,EAAK,IAAK,EAAG,KAS3DlR,EAAUoG,UAAUlH,KAAO,SAAS4D,GAClC,GAAIE,GAAQ/D,IAgDZ,IA9CAA,KAAK0Q,cACL1Q,KAAKqS,UACLrS,KAAKsS,OAAUC,OAAQ,UAAWC,SAAU,EAAGC,KAAM,UAAWC,UAAW,SAAUC,SAAU,SAC/F3S,KAAKoG,OAAS,gBACdpG,KAAK4S,MAAQ,GACb3R,QAAQC,OAAOlB,KAAM6D,GAEC,UAAlB7D,KAAK8G,UACP9G,KAAK2I,KAAO,cACa,SAAlB3I,KAAK8G,YACZ9G,KAAK2I,KAAO,QAEV3I,KAAK0O,UACHzN,QAAQ4R,SAAS7S,KAAK0O,WAExB1O,KAAKqQ,MAAQtP,EAAUgR,WAAW/R,KAAK0O,WAGvC1O,KAAKqQ,MAAQrQ,KAAK0O,UAEA,eAAb1O,KAAK2I,OACZ3I,KAAKqQ,MAAQ,GAAIxD,MACjB7M,KAAKqQ,MAAMyC,WAAkD,GAAvCC,KAAKC,MAAMhT,KAAKqQ,MAAM4C,aAAa,MAGvDjT,KAAK2O,SACP3O,KAAKkT,IAAMnS,EAAUgR,WAAW/R,KAAK2O,SACrC3O,KAAK4S,MAAQ5S,KAAKqQ,MAAM8C,UAAUnT,KAAKkT,MAEnB,eAAblT,KAAK2I,MACZ3I,KAAKoT,SAASpT,KAAK4S,OAGjB5S,KAAKqT,UACPrT,KAAKsT,IAAMvS,EAAUgR,WAAW/R,KAAKqT,UAEnCrT,KAAKuT,cACPvT,KAAKwT,UAAYzS,EAAUgR,WAAW/R,KAAKuT,eACvB,QAAbvT,KAAK2I,OACZ3I,KAAKwT,UAAY,GAAI3G,OAEnB7M,KAAKyT,aACPzT,KAAK0Q,WAAatO,EAAEsP,UAAU1R,KAAKyT,WAAY,oBAGjDzT,KAAK0T,aAAezS,QAAQ8F,UAAUlD,EAAKwO,QACvCrS,KAAKqS,OAAOhB,KAAM,CACpB,GAAIsC,GAAYvR,EAAEC,KAAKrC,KAAKqS,OAAOhB,KAAM,SAASpO,GAChD,MAAOhC,SAAQ8F,UAAU9D,EAAE2Q,aAEzBD,KAC2B,UAAzB3T,KAAKqS,OAAOwB,YACd7T,KAAKqS,OAAOnF,MAAS4G,OAAO,IAC9B9T,KAAKqS,OAAOrF,OACVrE,KAAM,QACNiL,WAAYD,EAAUC,WAAWG,WACjCjH,IAAK6G,EAAU7G,UAKnB9M,MAAKqS,OAAOhB,OAEVpQ,SAAQiD,YAAYlE,KAAKqS,OAAOwB,aAClC7T,KAAKqS,OAAOwB,UAAY,SACtB5S,QAAQiD,YAAYlE,KAAKqS,OAAO2B,YAClChU,KAAKqS,OAAO2B,SAAW,GACrB/S,QAAQiD,YAAYlE,KAAKqS,OAAOrF,SAClChN,KAAKqS,OAAOrF,OAAU4G,WAAY,IAAK9G,IAAK,KAAMnE,KAAM,eACtD1H,QAAQiD,YAAYlE,KAAKqS,OAAO4B,aAElCjU,KAAKqS,OAAO4B,cACVhT,QAAQiD,YAAYlE,KAAKqS,OAAO6B,UAElClU,KAAKqS,OAAO6B,WACVjT,QAAQiD,YAAYlE,KAAKqS,OAAOnF,QAClClN,KAAKqS,OAAOnF,SACVlN,KAAKqS,OAAO5G,MACdzL,KAAKqS,OAAOa,IAAM,QACXlT,KAAKqS,OAAO8B,OACnBnU,KAAKqS,OAAOa,IAAM,QACdjS,QAAQ4R,SAAS7S,KAAKqS,OAAO8B,SAC/BnU,KAAKqS,OAAO8B,MAAQpT,EAAUgR,WAAW/R,KAAKqS,OAAO8B,OAAS/B,SAAS,MAGzEpS,KAAKqS,OAAOa,IAAM,QACpBlT,KAAKoU,iBAAmBpU,KAAKqU,kBAEzBrU,KAAKsJ,MAEPvI,EAAUK,aAAakC,QAAQC,KAAK,WAClC,GAAIoF,GAAsB,eAAd5E,EAAM4E,KAAwB,SAAW,OAGrD5E,GAAMuQ,eAAiBvT,EAAUK,aAAac,SAAS,eAAiByG,EAAO,yBAAyB8G,aAGxG,IAAI8E,IAAUC,EAAG,UAAWC,EAAG,QAASC,EAAG,OAAQC,EAAG,SAClDC,EAAQ,uBAAuBC,KAAK9T,EAAUK,aAAac,SAAS4S,4BACpEF,KACF7Q,EAAMgR,WAAY,EAClBhR,EAAMuO,MAAME,SAAW7H,SAASiK,EAAM,IACtC7Q,EAAMuO,MAAMG,KAAO8B,EAAMK,EAAM,KAIjC7Q,EAAMiR,6BAA+BjU,EAAUK,aAAac,SAAS+S,wCAIvEjV,KAAK+U,UAAY9T,QAAQ8F,UAAUlD,EAAKyO,OAI1CtS,KAAKkV,oBAAsBlV,KAAKgH,IAOhChH,KAAKmV,iBAELnV,KAAK4L,UAAW,GASlB7K,EAAUoG,UAAUkN,gBAAkB,WACpC,GAAIe,GAAInU,QAAQ8F,UAAU/G,KAAKqS,UAC1BrS,KAAKqS,OAAO2B,SAAW,GACvBhU,KAAKqS,OAAOhB,MAAQrR,KAAKqS,OAAOhB,KAAKxF,OAAS,GAC9C7L,KAAKqS,OAAO4B,WAAajU,KAAKqS,OAAO4B,UAAUpI,OAAS,GACxD7L,KAAKqS,OAAO6B,QAAUlU,KAAKqS,OAAO6B,OAAOrI,OAAS,EACvD,OAAOuJ,IASTrU,EAAUoG,UAAUzB,WAAa,WAC/B,OAAS1F,KAAK4N,eAAiB5N,KAAKqV,YAStCtU,EAAUoG,UAAUmO,qBAAuB,WACzC,MAAQtV,MAAK4N,eAAiB5N,KAAKqV,YASrCtU,EAAUoG,UAAUoO,aAAe,WACjC,OAASvV,KAAK4N,cAAgB5N,KAAKwV,aASrCzU,EAAUoG,UAAUsO,uBAAyB,WAC3C,MAAQzV,MAAK4N,cAAgB5N,KAAKwV,aASpCzU,EAAUoG,UAAUkO,WAAa,WAC/B,MAAQrV,MAAKqV,aAAerV,KAAKwV,aAUnCzU,EAAUoG,UAAUuO,sBAAwB,WAC1C,MAAqB,QAAb1V,KAAK2I,MACU,iBAAf3I,KAAKoG,QACU,aAAfpG,KAAKoG,QASfrF,EAAUoG,UAAUwO,eAAiB,SAAS7I,EAAKyD,EAAMqF,GACvD,GAAIR,GAAKnU,QAAQ8F,UAAU/G,KAAK6V,SAAS/I,KAChC7L,QAAQ8F,UAAU/G,KAAK6V,SAAS/I,GAAKyD,KACA,GAArCvQ,KAAK6V,SAAS/I,GAAKyD,GAAMqF,EAClC,OAAOR,IASTrU,EAAUoG,UAAU2O,uBAAyB,WAC3C,GAAI/R,GAAQ/D,KAAM6V,IAElB,IAAI7V,KAAKqQ,OAASrQ,KAAKkT,IAAK,CAC1B,GAAI6C,GAAe,GAAIlJ,MAAK7M,KAAKqQ,MAAMtB,WACnCiH,EAAa,GAAInJ,MAAK7M,KAAKkT,IAAInE,WAC/BkH,EAAetL,SAASoL,EAAa9C,aAAa,GAAK,IACvDiD,EAAavL,SAASqL,EAAW/C,aAAa,GAAK,GA8BvD,OA7BA8C,GAAajD,WAAW,GAAGmD,GAC3BD,EAAWlD,WAAW,GAAGoD,GAEzB9T,EAAE4B,QAAQ+R,EAAaI,SAASH,GAAa,SAASzH,EAAM6H,GAC1D,GAEIC,GAFAC,EAAa/H,EAAKxB,UAClBwJ,EAAShI,EAAKoB,cAElB,IAAI4G,GAAUxS,EAAMsM,MAAMV,eAIxB,IAHA0G,EAAU9H,EAAKiI,WAAWzC,WAC1B8B,EAASU,MACTV,EAASU,GAAQF,MACVJ,EAAe,GACpBJ,EAASU,GAAQF,GAASpS,KAAK,GAC/BgS,QAIF1H,GAAOA,EAAKkI,aACZZ,EAASU,KAEX,MAAOhI,EAAKQ,UAAYhL,EAAMmP,IAAInE,WAC3BR,EAAKxB,WAAauJ,GACvBD,EAAU9H,EAAKiI,WAAWzC,WACtB9S,QAAQiD,YAAY2R,EAASU,GAAQF,MACvCR,EAASU,GAAQF,OACnBR,EAASU,GAAQF,GAASpS,KAAK,GAC/BsK,EAAKmI,WAAW,MAGbb,IASX9U,EAAUoG,UAAUgO,eAAiB,WACnC,GAAIpR,GAAQ/D,IAEZA,MAAK6V,SAAW7V,KAAK8V,yBAEjB9V,KAAK2W,WACPvU,EAAE4B,QAAQhE,KAAK2W,UAAW,SAASC,GACjCA,EAASC,MAAQ9V,EAAU8I,UAAU+M,EAASE,MAAO,IACrD/S,EAAMgT,uBAAuBH,MAWnC7V,EAAUoG,UAAUiM,SAAW,SAASR,GACtC5S,KAAK4S,MAAQA,EACb5S,KAAKkT,IAAM,GAAIrG,MAAK7M,KAAKqQ,MAAMtB,WAC/B/O,KAAKkT,IAAIJ,WAAgD,GAArCC,KAAKC,MAAMhT,KAAKkT,IAAID,aAAa,KACrDjT,KAAKkT,IAAIwD,WAAW1W,KAAK4S,QAS3B7R,EAAUoG,UAAU4P,uBAAyB,SAASH,GACpD,GAAItJ,GAAQnI,EAAKkM,CACbuF,GAAS7R,MACXuI,GAEI0J,KAAMhX,KAAKqQ,MAAMV,eACjBsH,KAAMjX,KAAKkT,IAAIvD,gBAEnBxK,GAAO,KAAM,KAAMyR,EAAS7R,IAAK,gBACjCsM,EAAOjP,EAAEgB,IAAIpD,KAAKqQ,MAAM8F,SAASnW,KAAKkT,KAAM,SAASpG,GAAO,MAAOA,GAAI6C,iBAEnE1O,QAAQiD,YAAY0S,EAASf,YAC/Be,EAASf,aAGX9U,EAAUV,WAAW8D,MAAMgB,EAAI0I,KAAK,KAAM,WAAYP,GAAQ/J,KAAK,SAASM,GAC1EzB,EAAE4B,QAAQqN,EAAM,SAASvE,GACvB,GAAIyD,EAEAtP,SAAQiD,YAAY0S,EAASf,SAAS/I,MACxC8J,EAASf,SAAS/I,OAEhB7L,QAAQiD,YAAYL,EAAKiJ,MAC3BjJ,EAAKiJ,MAEP,KAAK,GAAInK,GAAI,EAAGA,GAAK,GAAIA,IACvB4N,EAAO5N,EAAEoR,WACLlQ,EAAKiJ,GAAKyD,GACZqG,EAASf,SAAS/I,GAAKyD,IACrB1M,EAAKiJ,GAAKyD,GAAM,GAChB1M,EAAKiJ,GAAKyD,GAAM,IAChB1M,EAAKiJ,GAAKyD,GAAM,IAChB1M,EAAKiJ,GAAKyD,GAAM,KAGlBqG,EAASf,SAAS/I,GAAKyD,IAAS,EAAG,EAAG,EAAG,SAcrDxP,EAAUoG,UAAUS,aAAe,SAASC,GAG1C,MAFI5G,SAAQiD,YAAY2D,KACtBA,EAAO,MACFA,EAAO,WAAa7H,KAAKkV,qBAAuBlV,KAAKkX,UAAYlX,KAAKgH,MAS/EjG,EAAUoG,UAAUgQ,YAAc,SAASC,GACzC,GAAkBR,GAAUnU,EAAxBsB,EAAQ/D,IACRoX,KACEA,EAAKC,SAASC,YAAY,KAE5B7U,EAAO1B,EAAU6I,MAAMZ,MAAMoO,EAAKG,UAAWH,EAAKI,QAClD/U,EAAKgF,MAAMlE,KAAK,SAASkU,GACvBrV,EAAE4B,QAAQvB,EAAKiV,KAAM,SAASC,GAC5Bf,GACE1W,KAAMyX,EAAIC,KACVd,MAAOa,EAAIE,kBACXC,KAAM,kBACNC,SAAU,eACVhT,IAAK4S,EAAIK,OAEN5V,EAAEC,KAAK0B,EAAM4S,UAAW,SAAS1T,GACpC,MAAOA,GAAE6T,OAASF,EAASE,UAG3BF,EAASC,MAAQ9V,EAAU8I,UAAU+M,EAASE,MAAO,IACjD/S,EAAM4S,UACR5S,EAAM4S,UAAU1S,KAAK2S,GAErB7S,EAAM4S,WAAaC,GACrB7S,EAAMgT,uBAAuBH,UAOnCA,GACE1W,KAAMkX,EAAKQ,KACXd,MAAOM,EAAKS,kBACZC,KAAM,kBACNC,SAAU,eACVhT,IAAKqS,EAAKY,OAEP5V,EAAEC,KAAKrC,KAAK2W,UAAW,SAAS1T,GACnC,MAAOA,GAAE6T,OAASF,EAASE,UAE3BF,EAASC,MAAQ9V,EAAU8I,UAAU+M,EAASE,MAAO,IACjD9W,KAAK2W,UACP3W,KAAK2W,UAAU1S,KAAK2S,GAEpB5W,KAAK2W,WAAaC,GACpB5W,KAAK+W,uBAAuBH,OAapC7V,EAAUoG,UAAU8Q,YAAc,SAASb,GACzC,GAAIR,GAAWxU,EAAEC,KAAKrC,KAAK2W,UAAW,SAASC,GAC7C,MAAOxU,GAAEC,KAAK+U,EAAKc,OAAQ,SAASpB,GAClC,MAAOA,GAAMpV,OAASkV,EAASE,SAGnC,OAAO7V,SAAQ8F,UAAU6P,IAS3B7V,EAAUoG,UAAUgR,eAAiB,SAASvB,GAC5C,GAAIR,GAAQhU,EAAEgW,UAAUpY,KAAK2W,UAAW,SAAS0B,GAC/C,MAAOA,GAAgBvB,OAASF,EAASE,OAE3C9W,MAAK2W,UAAUtT,OAAO+S,EAAO,IAS/BrV,EAAUoG,UAAUmR,0BAA4B,WAC9C,MAA4B,SAArBtY,KAAKsS,MAAMC,SACfvS,KAAKqV,YACNrV,KAAK2W,WAAa3W,KAAK2W,UAAU9K,OAAS,GAU9C9K,EAAUoG,UAAUoR,aAAe,SAASC,GAC1C,GAAIvX,QAAQiD,YAAYlE,KAAKyY,YAC3BzY,KAAKyY,aAAe/W,MAAO8W,QAExB,CACH,IAAK,GAAI7V,GAAI,EAAGA,EAAI3C,KAAKyY,WAAW5M,QAC9B7L,KAAKyY,WAAW9V,GAAGjB,OAAS8W,EADU7V,KAKxCA,GAAK3C,KAAKyY,WAAW5M,QACvB7L,KAAKyY,WAAWxU,MAAMvC,MAAO8W,IAEjC,MAAOxY,MAAKyY,WAAW5M,OAAS,GASlC9K,EAAUoG,UAAUuR,gBAAkB,SAAStC,GACzCA,GAAQ,GAAMpW,KAAKyY,WAAW5M,OAASuK,GACzCpW,KAAKyY,WAAWpV,OAAO+S,EAAO,IASlCrV,EAAUoG,UAAUwR,YAAc,WAChC3Y,KAAKsT,IAAM,GAAIzG,MACf7M,KAAKsT,IAAIR,WAAgD,GAArCC,KAAKC,MAAMhT,KAAKsT,IAAIL,aAAa,KACrDjT,KAAKqT,QAAUrT,KAAKsT,IAAIsF,eAQ1B7X,EAAUoG,UAAU0R,eAAiB,iBAC5B7Y,MAAKsT,UACLtT,MAAKqT,SAQdtS,EAAUoG,UAAU2R,cAAgB,WAClC9Y,KAAKqQ,MAAQ,GAAIxD,MACjB7M,KAAKqQ,MAAMyC,WAAkD,GAAvCC,KAAKC,MAAMhT,KAAKqQ,MAAM4C,aAAa,MAQ3DlS,EAAUoG,UAAU4R,iBAAmB,iBAC9B/Y,MAAKqQ,YACLrQ,MAAK0O,WAQd3N,EAAUoG,UAAUe,OAAS,WAC3B,GAAInE,GAAQ/D,IACZiB,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAOyG,GACzB,eAAPA,GAAkC,KAAVA,EAAI,UACvBpE,GAAMoE,KAGjBnI,KAAKC,KAAKD,KAAKuH,aACfvH,KAAKuH,YAAcvH,KAAKwH,SAS1BzG,EAAUoG,UAAU6R,OAAS,WAC3B,GAAkBnV,GAAdE,EAAQ/D,KAAYgF,GAAQhF,KAAKgH,IAAKhH,KAAKG,GAW/C,OATIH,MAAK4N,cACP5I,EAAKf,KAAKjE,KAAK4N,cAEjB/J,GACEoV,MAAOjZ,KAAKiZ,MACZC,YAAalZ,KAAKkZ,YAClB5G,MAAOtS,KAAK+U,UAAW/U,KAAKsS,UAGvBvR,EAAUV,WAAW+H,KAAKpD,EAAK6I,KAAK,KAAMhK,GAAQ0O,OAAQ,oBAC9DhP,KAAK,SAASM,GAGb,MADAE,GAAMwD,YAAcxD,EAAMyD,QACnB3D,KAUb9C,EAAUoG,UAAUgS,QAAU,SAAS7L,GACrC,GAAItI,IAAQhF,KAAKgH,IAAKhH,KAAKG,GAE3B,OAAIiC,GAAEgX,MAAMhX,EAAEiX,OAAO/L,GAAS,SAASgM,GAAK,MAAa,KAANA,IAE1CvY,EAAUN,GAAGiH,QAElB1H,KAAK4N,cACP5I,EAAKf,KAAKjE,KAAK4N,cAEjB7M,EAAUJ,KAAKmF,MAAM,UAAYd,EAAK6I,KAAK,KAAO,IAAM9H,KAAKC,UAAUsH,IAEhEvM,EAAUV,WAAW+H,KAAKpD,EAAK6I,KAAK,KAAMP,GAAUiF,OAAQ,aASrExR,EAAUoG,UAAUY,MAAQ,SAASwR,GACnC,GAAkB5M,GAAS3H,EAAM8B,EAAiB0S,EAA9CzV,EAAQ/D,IA2EZ,OAzEA8G,GAAY9G,KAAKwH,QACjBgS,EAAMzY,EAAUK,aAAaqY,sBAG7B3S,EAAU4H,UAAY5H,EAAUuJ,MAAQvJ,EAAUuJ,MAAMqJ,OAAOF,EAAK,YAAc,GAClF1S,EAAU6S,UAAY7S,EAAUuJ,MAAQvJ,EAAUuJ,MAAMqJ,OAAOF,EAAK,SAAW,GAC/E1S,EAAU6H,QAAU7H,EAAUoM,IAAMpM,EAAUoM,IAAIwG,OAAOF,EAAK,YAAc,GAC5E1S,EAAU8S,QAAU9S,EAAUoM,IAAMpM,EAAUoM,IAAIwG,OAAOF,EAAK,SAAW,GACzE1S,EAAUuM,QAAUvM,EAAUwM,IAAMxM,EAAUwM,IAAIoG,OAAOF,EAAK,YAAc,GAC5E1S,EAAU+S,QAAU/S,EAAUwM,IAAMxM,EAAUwM,IAAIoG,OAAOF,EAAK,SAAW,GACzE1S,EAAUyM,cAAgBzM,EAAU0M,UAAY1M,EAAU0M,UAAUkG,OAAOF,EAAK,YAAc,GAG1FxZ,KAAKoU,iBACsB,WAAzBpU,KAAKqS,OAAOwB,WAA0B7T,KAAKqS,OAAOrF,MAAMrE,MAAkC,SAA1B3I,KAAKqS,OAAOrF,MAAMrE,MACzD,UAAzB3I,KAAKqS,OAAOwB,WAAyB7T,KAAKqS,OAAOnF,KAAK4G,aAEjDhN,GAAUuL,OAAO4B,UACxBnN,EAAUuL,OAAOhB,OAAUvE,IAAK9M,KAAKqS,OAAOrF,MAAMF,IAAK8G,WAAY5T,KAAKqS,OAAOrF,MAAM4G,WAAWG,cAE/D,WAAzB/T,KAAKqS,OAAOwB,WAAmD,UAAzB7T,KAAKqS,OAAOwB,YACnD7T,KAAKqS,OAAOrF,MAAMrE,YAElB7B,GAAUuL,OAAOhB,KAGnBrR,KAAKqS,OAAOwB,WAAsC,SAAzB7T,KAAKqS,OAAOwB,YAC5C/M,EAAUuL,QAAWwB,UAAW7T,KAAKqS,OAAOwB,YAE1C/M,EAAU4H,WAAa1O,KAAKqS,OAAOwB,UACd,SAAnB7T,KAAKqS,OAAOa,KAAkBlT,KAAKqS,OAAO8B,MAC5CrN,EAAUuL,OAAO8B,MAAQnU,KAAKqS,OAAO8B,MAAM2F,oBAAoB,KACrC,SAAnB9Z,KAAKqS,OAAOa,KAAkBlT,KAAKqS,OAAO5G,MACjD3E,EAAUuL,OAAO5G,MAAQzL,KAAKqS,OAAO5G,aAE9B3E,GAAUuL,OAAO8B,YACjBrN,GAAUuL,OAAO5G,aAInB3E,GAAUuL,OAIA,iBAAfrS,KAAKoG,aACAU,GAAUV,OACK,aAAfpG,KAAKoG,cACLU,GAAUyM,cAGfzM,EAAU4H,WAAa1O,KAAK+U,WAC1B/U,KAAKsS,MAAMC,QAA+B,SAArBvS,KAAKsS,MAAMC,QAC9BvS,KAAK2W,WAAa3W,KAAK2W,UAAU9K,OAAS,IAE9C/E,EAAUwL,MAAMqE,UAAY,EAC5B7P,EAAUwL,MAAMyH,UAAY,GAI9BjT,EAAUwL,SAIZtN,GAAQhF,KAAKgH,IAAKhH,KAAKG,IAEnBH,KAAKsJ,QACPqD,GAAY4F,OAAQ,SAAWvS,KAAK2I,KAAK0E,eAEvCrN,KAAK4N,cACP5I,EAAKf,KAAKjE,KAAK4N,cAEjB3M,QAAQC,OAAO4F,EAAWyS,GAEnBxY,EAAUV,WAAW+H,KAAKpD,EAAK6I,KAAK,KAAM/G,EAAW6F,GACzDpJ,KAAK,SAASM,GAGb,MADAE,GAAMwD,YAAcxD,EAAMyD,QACnB3D,KAUb9C,EAAUoG,UAAUc,OAAS,SAAS+R,GACpC,GAAkBhV,IAAQhF,KAAKgH,IAAKhH,KAAKG,GAKzC,OAHI6Z,IAAkBha,KAAK4N,cACzB5I,EAAKf,KAAKjE,KAAK4N,cAEV7M,EAAUV,WAAW4H,OAAOjD,EAAK6I,KAAK,OAS/C9M,EAAUoG,UAAU5G,QAAU,SAAS4I,GACrC,GAAIpF,GAAQ/D,IAGZA,MAAKia,qBAAuB9Q,EAG5BnJ,KAAKia,qBAAqB1W,KAAK,SAASM,GACtCE,EAAM9D,KAAK4D,GAEXE,EAAMwD,YAAcxD,EAAMyD,SACzB,SAAS3D,GACV5C,QAAQC,OAAO6C,EAAOF,GACtBE,EAAMkF,SAAU,EAChBlI,EAAUJ,KAAK0H,MAAMtE,EAAMsE,UAU/BtH,EAAUoG,UAAUK,MAAQ,WAC1B,GAAIV,KASJ,OARA7F,SAAQ+C,QAAQhE,KAAM,SAAS0B,EAAOyG,GACzB,eAAPA,GACU,KAAVA,EAAI,IACG,UAAPA,IACFrB,EAAUqB,GAAOlH,QAAQiZ,KAAKxY,MAI3BoF,GAST/F,EAAUoG,UAAUgT,kBAAoB,WACtC,GAAIC,GAAkB,IAItB,OAHIpa,MAAKqS,SACP+H,EAAkB3T,EAAE,UAAYzG,KAAKqS,OAAOwB,UAAUwG,gBAEjDD,GASTrZ,EAAUoG,UAAUmT,iBAAmB,WACrC,GAAInS,GAAKiS,EAAkB,IAW3B,OAVIpa,MAAKsS,QACPnK,GAAO,WAAanI,KAAKsS,MAAME,SAAUxS,KAAKsS,MAAMG,KAAMzS,KAAKsS,MAAMI,WAAW7E,KAAK,KACrFuM,EAAkB3T,EAAE0B,GAChBA,IAAQiS,IAEVA,GAAmBpa,KAAKsS,MAAME,SACX/L,EAAE,YAAczG,KAAKsS,MAAMG,MAC3BhM,EAAE,YAAczG,KAAKsS,MAAMI,YAAY7E,KAAK,OAG5DuM,GAUTrZ,EAAUoG,UAAUoT,OAAS,SAASvY,GACpC,MAAOjB,GAAUV,WAAWoF,KAAKzF,KAAKgH,IAAM,IAAMhH,KAAKG,GAAI,QAASqa,YAAaxY,KAUnFjB,EAAUoG,UAAUsT,OAAS,SAASzY,GACpC,MAAOjB,GAAUV,WAAWoF,KAAKzF,KAAKgH,IAAM,IAAMhH,KAAKG,GAAI,QAASqa,YAAaxY,KAGnFjB,EAAUoG,UAAU4M,SAAW,WAC7B,MAAO,cAAgB/T,KAAKG,GAAK,QClxCrC,WAEE,YAMA,SAASua,GAAmBC,EAAQpR,EAAYqR,EAAQC,EAAcC,EAAWhb,EAAUiB,EAAWD,EAAaia,GAkCjH,QAASC,GAAiBvN,GACxBA,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,gBACPyU,YAAazU,EAAE,SACf0U,SAAUC,EACVC,KAAM,GAAIxO,SAEZY,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,kBACPyU,YAAazU,EAAE,OACf0U,SAAUG,EACVD,KAAM,SAER5N,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,mBACPyU,YAAazU,EAAE,QACf0U,SAAUG,EACVD,KAAM,UAER5N,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,oBACPyU,YAAazU,EAAE,SACf0U,SAAUG,EACVD,KAAM,WAER5N,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,6BACPyU,YAAazU,EAAE,wBACf0U,SAAUG,EACVD,KAAM,oBAER5N,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK,OACL+S,YAAazU,EAAE,iBACf0U,SAAUI,EACVF,MAAM,KAER5N,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK,QACL+S,YAAazU,EAAE,gBACf0U,SAAUI,EACVF,KAAM,KAIRjZ,EAAE4B,QAAQyJ,EAAM,SAAStF,GACvB2S,EAAUU,eAAerT,KAK7B,QAASoT,GAAYE,EAAQC,GAC3B,GAAInN,EAEqB,SAArBsM,EAAavM,KACfC,EAAOoN,EAAGC,aAAa/M,YAAY/N,EAAYoB,SAAS0M,oBAAoBI,QAAQ,EAAI0M,GAE5D,SAArBb,EAAavM,MACpBC,EAAOoN,EAAGC,aACVrN,EAAKU,QAAQ,GACbV,EAAKW,SAASX,EAAKtB,WAAayO,IAGhCnN,EAAOoN,EAAGC,aAAa5M,QAAQ0M,GAGjCN,EAAWK,EAAQlN,GASrB,QAASsN,GAAYtN,GACM,SAArBsM,EAAavM,MACfC,EAAKU,QAAQ,GACbV,EAAKuN,SAAS,IACdvN,EAAKwN,YAAc,SAES,QAArBlB,EAAavM,MACpBC,EAAKO,QAAQP,EAAKM,YAAY/N,EAAYoB,SAAS0M,oBAAoBG,WACvER,EAAKwN,YAActV,EAAE,WAAWuV,QAAQ,KAAM,OAG9CzN,EAAKwN,YAAc,KAKvB,QAASE,KACPvB,EAAmBwB,iBAAmBxB,EAAmBwB,gBACzDP,EAAGO,gBAAkBxB,EAAmBwB,gBAG1C,QAASC,KAGPpb,EAAUsN,qBAAqBwM,EAAavM,KAAMuM,EAAa/N,IAAIsP,UAAU7Y,KAAK,SAASM,GACzF,GAAIlB,GAAG0M,EAAGf,CACV,KAAK3L,EAAI,EAAGA,EAAIkB,EAAKgI,OAAQlJ,IAC3B2L,EAAOzK,EAAKlB,GACRgZ,EAAG9L,MAAMlN,IACXP,EAAE4B,QAAQsK,EAAK2C,aAAc,SAASR,EAAQ3D,GAC5C6O,EAAG9L,MAAMlN,GAAGsO,aAAanE,GAAO2D,IAElCrO,EAAE4B,QAAQsK,EAAKmC,OAAQ,SAASA,EAAQ3D,GACtC6O,EAAG9L,MAAMlN,GAAG8N,OAAO3D,GAAO2D,KAI5BkL,EAAG9L,MAAMlN,GAAK2L,EAEZA,EAAKnO,KAGPwb,EAAG9L,MAAMlN,GAAGX,SAAW,GAAIlC,IAAWK,GAAImO,EAAKnO,GAAID,KAAMoO,EAAKkD,eAIlE,KAAKnC,EAAIsM,EAAG9L,MAAMhE,OAAQwD,GAAK1M,EAAG0M,IAChCsM,EAAG9L,MAAMxM,OAAOgM,EAAG,KAKzB,QAAS+L,GAAWK,EAAQY,GAC1B,GAAI9N,GAAO8N,EAASA,EAAQ1M,eAAiB1O,QAAQqb,QAAQb,EAAOc,eAAeC,KAAK,OACpFH,IACFR,EAAYQ,GACdzB,EAAO6B,GAAG,kBAAoB3P,IAAKyB,IAIrC,QAAS+M,GAAWG,EAAQnN,GAC1BsM,EAAO6B,GAAG,kBAAoBnO,KAAMA,IAzKtC,GAAeoO,GAAXf,EAAK3b,KAA+B2c,IAGpC1b,SAAQiD,YAAYwW,EAAmBwB,mBACzCxB,EAAmBwB,iBAAkB,GAEvCP,EAAGC,aAAef,EAAa/N,IAAIsP,SACnCT,EAAGO,gBAAkBxB,EAAmBwB,gBACxCP,EAAGM,cAAgBA,EACnBN,EAAG9L,MAAQkL,EACXY,EAAGP,WAAaA,EAChBO,EAAGL,WAAaA,EAGhBN,EAAiB2B,GAEjB7b,EAAYwC,QAAQC,KAAK,WACvBsY,EAAYF,EAAGC,gBAIjBc,EAA0BnT,EAAWqT,IAAI,iBAAkBT,GAE3DxB,EAAOiC,IAAI,WAAY,WAErBF,IAEAta,EAAE4B,QAAQ2Y,EAAS,SAASxU,GAC1B2S,EAAU+B,iBAAiB1U,OA9BjCuS,EAAmBoC,SAAW,SAAU,aAAc,SAAU,eAAgB,YAAa,WAAY,YAAa,cAAe,qBA+KrI7b,QACGO,OAAO,oBACPub,WAAW,qBAAsBrC,MCxLtC,WACE,YAMA,SAASsC,GAAuBzT,EAAYoR,EAAQja,EAAUka,EAAQqC,EAAWnC,EAAWoC,EAAOC,EAAQrc,EAAasc,EAAkBtd,EAAUiB,GAqDlJ,QAASia,GAAiBvN,GACxBA,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,iBACPyU,YAAazU,EAAE,UACf0U,SAAUkC,KAEZ5P,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,uBACPyU,YAAazU,EAAE,sBACf0U,SAAUmC,EACVjC,KAAM,iBAER5N,EAAKxJ,KAAK6W,EAAUG,cAClB9S,IAAK1B,EAAE,sBACPyU,YAAazU,EAAE,qBACf0U,SAAUmC,EACVjC,KAAM,UAIRjZ,EAAE4B,QAAQyJ,EAAM,SAAStF,GACvB2S,EAAUU,eAAerT,KAK7B,QAASoV,GAAoB5U,EAAMgE,IAC7BA,GAAWA,EAAQ6Q,QAAU7B,EAAGvN,eAAiBzF,KAC/C1H,QAAQiD,YAAYnD,EAAU,IAAM4H,KACtC5H,EAAU2L,QAAQ/D,GACpBgT,EAAG8B,qBACH9B,EAAGvN,cAAgBzF,EACnB5H,EAAUoN,iBAAiBxF,IAI/B,QAAS8U,KACPrb,EAAE4B,QAAQjD,EAAU,IAAM4a,EAAGvN,eAAgB,SAAStH,GACpDA,EAAU8E,UAAW,IAEvB+P,EAAG+B,KAAKC,SAAW,EAGrB,QAASC,KACPxb,EAAE4B,QAAQjD,EAAU,IAAM4a,EAAGvN,eAAgB,SAAStH,GACpDA,EAAU8E,UAAW,IAEvB+P,EAAG+B,KAAKC,SAAW5c,EAAU,IAAM4a,EAAGvN,eAAevC,OAGvD,QAASgS,GAAyBpC,EAAQ3U,GACxCA,EAAU8E,UAAY9E,EAAU8E,SAChC+P,EAAG+B,KAAKC,UAAY7W,EAAU8E,SAAU,GAAI,EAC5C6P,EAAOqC,iBACPrC,EAAOsC,kBAGT,QAASV,KACP1B,EAAG+B,KAAK1T,QAAS,EACjBkT,EAAM,UAGR,QAASc,KACPb,EAAOc,QAAQxX,EAAE,WACFA,EAAE,6DACAyX,GAAIzX,EAAE,YACpBlD,KAAK,WAEJ,GAAIsD,GAAazE,EAAEkC,OAAOvD,EAAU,IAAM4a,EAAGvN,eAAgB,SAAStH,GACpE,MAAOA,GAAU8E,UAEnB9L,GAAS8G,kBAAkBC,GAAYtD,KAAK,WAC1CoY,EAAG+B,KAAKC,SAAW,EACnBpU,EAAW+C,MAAM,sBAKzB,QAAS6R,GAAU1C,EAAQ9P,GACzByS,EAAc3C,EAAQ9P,EAAO,eAG/B,QAAS0S,GAAS5C,EAAQ1P,GACxBqS,EAAc3C,EAAQ1P,EAAM,QAG9B,QAASqS,GAAc3C,EAAQ3U,EAAW6B,GACxC,GAAI7B,EAAUwX,SAAU,CAGtB,GAAIC,GAAc,MAAQ5V,EAAK0E,aAAe,cAC9C4P,GAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCC,YAAanD,EACboD,qBAAqB,EACrBC,eAAe,EACfP,YAAaA,EACbxB,WAAY,sBACZgC,aAAc,SACdC,QACEC,eAAgBnY,MAMxB,QAASwW,GAAa7B,EAAQ9S,EAAMuW,GAClC,GAAIpY,EAGFA,GADEoY,EACUA,EAGA,GAAIne,IAAYiG,IAAKlH,EAASiC,mBAAoB4G,KAAMA,GAKtE,IAAI4V,GAAc,MAAQ5V,EAAK0E,aAAe,gBAC9C,OAAO4P,GAAUuB,MACfC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCC,YAAanD,EACboD,qBAAqB,EACrBC,eAAe,EACfP,YAAaA,EACbxB,WAAY,4BACZgC,aAAc,SACdC,QACEC,eAAgBnY,KAMtB,QAASqY,GAAyB1D,GA8EhC,QAAS2D,GAAmCzE,EAAQsC,EAAWnW,EAAWwG,GACxEqN,EAAO0E,qBAAuB,WAC5BvY,EAAUqS,QAAQ7L,GAAQ/J,KAAK0Z,EAAUqC,KAAM,SAASnZ,GACtD8W,EAAUhR,SAAS1I,KAAK,WACtBgc,EAAuBpZ,EAAUW,EAAWwG,QAIlDqN,EAAO6E,qBAAuB,iBACrB1Y,GAAU8G,aACjB9G,EAAUqS,QAAQ7L,GAAQ/J,KAAK0Z,EAAUqC,KAAM,SAASnZ,GACtD8W,EAAUhR,SAAS1I,KAAK,WACtBgc,EAAuBpZ,EAAUW,EAAWwG,QAMpD,QAASiS,GAAuBpZ,EAAUW,EAAWwG,GAC/CnH,EAASC,QAAUgX,EAAiBvb,uBACpCsE,EAAStC,MAAQsC,EAAStC,KAAK4b,SAAWxe,QAAQiI,SAAS/C,EAAStC,KAAK4b,UAC3ExC,EAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAa,4BACbxB,WAAY2C,EACZX,aAAc,oCACdC,QACElY,UAAWA,EACXwG,OAAQA,EACRqS,cAAexZ,EAAStC,KAAK4b,WAE9Blc,KAAK,WACNgG,EAAW+C,MAAM,oBASvB,QAASoT,GAAiC/E,EAAQsC,EAAWnW,EAAWwG,EAAQqS,GAO9E,QAASvX,KACPtB,EAAUqS,QAAQlY,QAAQC,QAAS0e,iBAAiB,GAAQtS,IAAS/J,KAAK0Z,EAAUqC,MAPtF,GAAI3D,GAAK3b,IAET2b,GAAGgE,cAAgBA,EACnBhE,EAAG1P,OAASgR,EAAUhR,OACtB0P,EAAGvT,KAAOA,EA7HZ,GAAItB,GAAW8K,EAAgBiO,EAAajN,EAAOtF,EAAQwS,EAAgBC,CAE3EjZ,GAAY/F,EAAUwJ,OAAOzD,UAC7B8K,EAAiB7Q,EAAUwJ,OAAOqH,eAE9B9K,EAAUwC,OACZuW,EAAcjO,EAAeoO,wBAC7BlZ,EAAUmZ,QAAU,GAChBnZ,EAAUoZ,WACZL,EAAYM,UAAY,IAC1BrZ,EAAUsM,SAAgC,GAAvByM,EAAYM,UAC/B7C,EAAa,KAAM,cAAexW,GAAWsZ,QAAQ,WACnD1f,EAAS,WACPK,EAAU4Q,oBAKdiB,EAAQhB,EAAeoO,wBAAwBK,SAASzO,EAAe0O,0BACvEhT,GACE+D,KAAMuB,EAAMrB,UACZlB,MAAqB,GAAduC,EAAMvC,MACb8P,SAA2B,GAAjBvN,EAAMuN,UAEdvO,EAAe2O,kBAAwC,IAApB3N,EAAMrB,YAE3CuO,EAAiBlO,EAAeoO,wBAAwBzO,UACxDwO,EAAkB3d,EAAEkC,OAAOxE,EAASwC,YAAcC,OAAQ,IAC1D+K,EAAOkN,YAAcuF,EAAgBD,GAAgB3f,GACrDmN,EAAO+D,KAAO,GAEZvK,EAAU0Z,cAAgB1Z,EAAU8G,aAGtC9G,EAAUqS,QAAQ7L,GAAQ/J,KAAK,WAC7BgG,EAAW+C,MAAM,mBAChB,SAASnG,GACVoZ,EAAuBpZ,EAAUW,EAAWwG,KAC3C8S,QAAQ,WACT1f,EAAS,WACPK,EAAU4Q,kBAGP7K,EAAU8G,cACjBqP,EAAUuB,MACRK,qBAAqB,EACrBC,eAAe,EACfE,QACElY,UAAWA,EACXwG,OAAQA,GAEVmT,UACE,kDACA,kDACA,UAAYha,EAAE,qBAAuB,OACrC,yBACA,wBACA,oDAAsDA,EAAE,6BAA+B,eACvF,oDAAsDA,EAAE,yBAA2B,eACnF,yBACA,gBACAoH,KAAK,IACPkP,WAAYqC,IACX7b,KAAK,WACNgG,EAAW+C,MAAM,oBAChB8T,QAAQ,WACT1f,EAAS,WACPK,EAAU4Q,mBASlByN,EAAmCtC,SAAW,SAAU,YAAa,YAAa,UA2ClF4C,EAAiC5C,SAAW,SAAU,YAAa,YAAa,SAAU,iBAc5F,QAAS1S,KACP,MAAOrJ,GAAU,SAAW4a,EAAGvN,cAAcf,cAAcjD,YAG7D,QAAS9F,GAAO8F,GACdrJ,EAAU2L,QAAQiP,EAAGvN,eAAiBhE,YAAaA,IAGrD,QAASsW,GAAWtW,GAClB,MAAOrJ,GAAU,SAAW4a,EAAGvN,cAAcf,cAAcjD,aAAeA,EAG5E,QAASF,GAAKyW,GACZ5f,EAAU2L,QAAQiP,EAAGvN,eAAiBlE,KAAMyW,IAG9C,QAASC,GAASD,GAChB,MAAO5f,GAAU,SAAW4a,EAAGvN,cAAcf,cAAcnD,MAAQyW,EAGrE,QAASnD,KACP1d,EAASwG,qBAAqB8Z,QAAQ,WACpC7W,EAAW+C,MAAM,oBAIrB,QAASuU,KACPlF,EAAG+B,KAAK1T,QAAS,EACjBjJ,EAAU2L,QAAQiP,EAAGvN,eAAiB1M,MAAO,KA5V/C,GAAIia,GAAK3b,KAAM2c,IAEfhB,GAAG7U,UAAY/F,EACf4a,EAAGvN,cAAgB,SACnBuN,EAAGmF,aAAe,EAClBnF,EAAG4B,oBAAsBA,EACzB5B,EAAG8B,mBAAqBA,EACxB9B,EAAGiC,UAAYA,EACfjC,EAAG0B,WAAaA,EAChB1B,EAAGkC,yBAA2BA,EAC9BlC,EAAGqC,gCAAkCA,EACrCrC,EAAGwC,UAAYA,EACfxC,EAAG0C,SAAWA,EACd1C,EAAG2B,aAAeA,EAClB3B,EAAGvR,YAAcA,EACjBuR,EAAGrX,OAASA,EACZqX,EAAG+E,WAAaA,EAChB/E,EAAGzR,KAAOA,EACVyR,EAAGiF,SAAWA,EACdjF,EAAG6B,OAASA,EACZ7B,EAAGkF,aAAeA,EAClBlF,EAAG+B;AAAS1T,QAAQ,EAAO2T,SAAU,GAGrC3C,EAAiB2B,GAGjB7b,EAAYwC,QAAQC,KAAK,WACvB,GAAIoF,GAAO,QACuC,kBAA9C7H,EAAY0C,SAAS1D,SAASihB,eAChCpF,EAAGmF,aAAe,EAClBnY,EAAO,SAET4U,EAAoB5U,GAAQ6U,QAAQ,MAItCjU,EAAWqT,IAAI,iBAAkB,WAC/B7b,EAAU2L,QAAQiP,EAAGvN,eAAiBoP,QAAQ,MAIhDjU,EAAWqT,IAAI,mBAAoBuC,GAEnCxE,EAAOiC,IAAI,WAAY,WAErBxa,EAAE4B,QAAQ2Y,EAAS,SAASxU,GAC1B2S,EAAU+B,iBAAiB1U,OAjDjC6U,EAAuBF,SAAW,aAAc,SAAU,WAAY,SAAU,YAAa,YAAa,UAAW,SAAU,cAAe,mBAAoB,WAAY,aAkW9K7b,QACGO,OAAO,oBACPub,WAAW,yBAA0BC,MC1W1C,WACE,YAMA,SAASgE,GAAoBzX,EAAYoR,EAAQsG,EAAShE,EAAWtc,EAAMugB,EAAUC,EAAcjE,EAAOC,EAAQvc,EAAUE,EAAahB,EAAUshB,EAAMC,GA+EvJ,QAASC,GAAgBC,EAAuBC,EAAmBC,GACjE,MAAOF,GAAsBG,cAAcpF,QAAQ,IAAMkF,EAAkBlF,QAAQ,GAGrF,QAASqF,KACP7hB,EAAS4D,iBAAiBtB,EAAEuB,QAAQ7D,EAASwC,WAAY,OAG3D,QAASsf,KACPjG,EAAGkG,cAAgBlG,EAAGkG,aACtBlG,EAAGrX,OAAOpE,KAAO,GAGnB,QAAS4hB,KACPhiB,EAAS4D,mBAGX,QAASqe,GAAYC,GACnB7E,EAAO8E,OAAOxb,EAAE,gBAAiBA,EAAE,yBAChClD,KAAK,SAASrD,GACb,GAAI8B,GAAW,GAAIlC,IAEfI,KAAMA,EACNwF,YAAY,EACZC,UAAU,EACVC,MAAOsc,WAGXlgB,GAASyF,MAAMlE,KAAK,WAClBzD,EAAS0C,KAAKR,OAKtB,QAASmgB,KA0BP,QAASC,GAAgCC,EAAOpF,EAAW9X,EAAKnD,GAC9D,GAAI2Z,GAAK3b,KACLsiB,EAAQnd,EAAIgN,MAAM,KAClBoQ,EAAWD,EAAM,EAErB3G,GAAG6G,MAAQ/b,EAAE,oCAAoCgc,UAAUF,GAC3D5G,EAAG+G,aAAe,SAASC,IACrBA,EAAKC,QAAWD,EAAKnc,OAAOqc,UAC9B7gB,EAASsG,eAAeqT,EAAGpT,SAAUoT,EAAGnT,UAAUjF,KAAK,SAASkc,GAC9DxC,EAAUqC,QACT,SAASwD,GACVH,EAAKna,SAASua,aAAa,eAAe,MAIhDpH,EAAG1P,OAAS,WACVgR,EAAUhR,UAzCdkR,EAAO8E,OAAOxb,EAAE,kCAAmCA,EAAE,wBAAyBuc,UAAW,QACtFzf,KAAK,SAAS4B,GACbrF,EAASoF,gBAAgBC,GAAK5B,KAAK,SAASvB,GACtCf,QAAQiI,SAASlH,IAEnBib,EAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAa,2BACbxB,WAAYqF,EACZrD,aAAc,mCACdC,QACE7Z,IAAKA,EACLnD,SAAUA,SAUtBogB,EAAgCtF,SAAW,QAAS,YAAa,MAAO,YAsB1E,QAASmG,GAAcC,GACjBA,EAAOpgB,eAETogB,EAAOlb,UACJmb,MAAM,SAAStf,EAAMuC,GACpB+W,EAAOiG,MAAM3c,EAAE,uDAAwDyc,EAAOhjB,MACjEuG,EAAE5C,EAAKwE,UAIxB8U,EAAOc,QAAQxX,EAAE,WAAYA,EAAE,uDAAwDyc,EAAOhjB,OAC7Ege,GAAIzX,EAAE,YACpBlD,KAAK,WACJ2f,EAAOlb,UACJmb,MAAM,SAAStf,EAAMuC,GACpB+W,EAAOiG,MAAM3c,EAAE,uDAAwDyc,EAAOhjB,MACjEuG,EAAE5C,EAAKwE,YAMhC,QAASgb,GAAe5H,EAAQyH,GAkB9B,QAASI,GAA+BjB,EAAOpF,EAAWiG,GA8CxD,QAASK,GAAkBC,GACzB,GAAIC,GAA2C,IAA9BD,EAAK7a,KAAKxF,QAAQ,SAC/B,WAAWugB,KAAKF,EAAKtjB,KAgBzB,OAdKujB,IACHvC,EAAS1C,MACPiC,UACE,aACA,mCACA,gEACA,aAAeha,EAAE,oCAAsC,UACvD,WACA,eACAoH,KAAK,IACP8V,SAAU,YACVC,UAAW,MAGRH,EA/DT,GAAI9H,GAAK3b,IAET2b,GAAGkI,SAAW,GAAI1C,IAChBhc,IAAK2e,oBAAsBZ,EAAO/iB,GAAI,UAAU0N,KAAK,KACrDkW,YAAY,EACZC,WAAY,EACZC,UAAY/jB,KAAMqjB,EAAmBW,GAAIX,IACzCY,cAAe,SAASX,EAAMrd,EAAUC,EAAQge,GAC9C,GAAIC,EAEJpH,GAAUqC,OAEgB,IAAtBnZ,EAASme,SACXD,EAAM5d,EAAE,2BAER4d,EAAM5d,EAAE,wDAAyDN,EAASme,UAC1E/a,EAAW+C,MAAM,mBAGnB4U,EAAS1C,KACP0C,EAASqD,SACNC,QAAQH,GACRV,SAAS,aACTC,UAAU,OAEjBa,YAAa,SAASjB,EAAMrd,EAAUC,EAAQge,GAC5ClD,EAAS1C,MACPiC,UACE,aACA,mCACA,gEACA,aAAeha,EAAE,+CAAiD,UAClE,WACA,eACAoH,KAAK,IACP8V,SAAU,YACVC,UAAW,SAKjBjI,EAAG+I,MAAQ,WACTzH,EAAUqC,QA5DdrC,EAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCC,YAAanD,EACboD,qBAAqB,EACrBC,eAAe,EACfP,YAAa,0BACbxB,WAAYuG,EACZvE,aAAc,kCACdC,QACEkE,OAAQA,KAOZI,EAA+BxG,SAAW,QAAS,YAAa,UAsElE,QAAS6H,GAAS3iB,GAChBI,EAAE4B,QAAQlE,EAASwC,WAAY,SAASW,GAClCjB,EAAS7B,IAAM8C,EAAE9C,GACnB8C,EAAEV,OAAS,EAEXU,EAAEV,OAAS,IAIjB,QAASqiB,KACPxiB,EAAE4B,QAAQlE,EAASwC,WAAY,SAASW,GAAKA,EAAEV,OAAS,IAG1D,QAASsiB,GAAU7iB,GAiBjB,QAAS8iB,GAAsB7H,EAAWjb,GAKxC,QAAS0iB,KACPzH,EAAUqC,OALZ,GAAI3D,GAAK3b,IACT2b,GAAG3Z,SAAWA,EACd2Z,EAAG+I,MAAQA,EAnBbzH,EAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAavc,EAAS7B,GAAK,SAC3B4c,WAAY+H,EACZ/F,aAAc,QACdC,QACEhd,SAAUA,KAOd8iB,EAAsBhI,SAAW,YAAa,YAYhD,QAASiI,GAAe/iB,GAoBtB,QAASgjB,GAA2BrK,EAAQsC,EAAWgI,GAWrD,QAASC,KACPvJ,EAAG3Z,SAAS+F,QAEZkd,EAAYhlB,KAAK0b,EAAG3Z,SAASwF,SAC7ByV,EAAUqC,OAGZ,QAASoF,KACPzH,EAAUhR,SAlBZ,GAAI0P,GAAK3b,IAET2b,GAAG3Z,SAAW,GAAIlC,GAASmlB,EAAYzd,SACvCmU,EAAGuJ,eAAiBA,EACpBvJ,EAAG+I,MAAQA,EAEX/J,EAAOwK,OAAO,WAAa,MAAOxJ,GAAG3Z,SAASoF,OAAU,WACtD6d,EAAY7d,MAAQuU,EAAG3Z,SAASoF,QA3BpC,GAAIA,GAAQpF,EAASoF,KACrB6V,GAAUuB,MACRD,YAAavc,EAAS7B,GAAK,cAC3B4c,WAAYiI,EACZjG,aAAc,aACdF,qBAAqB,EACrBC,eAAe,EACfE,QACEiG,YAAajjB,KAEdmhB,MAAM,WAEPnhB,EAASoF,MAAQA,IAMnB4d,EAA2BlI,SAAW,SAAU,YAAa,eAyB/D,QAASsI,GAAWlC,GAClBvH,EAAGnK,aAAe0R,EAAOhjB,KACzByb,EAAG0J,SAAWnC,EAAO/iB,GACrB+c,EAAM,gBAAkBgG,EAAO/iB,IAGjC,QAASmlB,GAAcpC,GACrBA,EAAOhb,SACPyT,EAAG0J,UAAW,EAGhB,QAASE,GAAarC,GACpBA,EAAOpb,UACJvE,KAAK,SAASM,GACb8X,EAAG0J,UAAW,IAIpB,QAASG,GAAMxjB,GACbA,EAASqF,KAAKoe,SAASliB,KAAK,WAC1B0Z,EAAUuB,MACRD,YAAavc,EAAS7B,GAAK,gBAC3B4c,WAAY,gBACZgC,aAAc,MACdF,qBAAqB,EACrBC,eAAe,EACfE,QACE0G,aAAc1jB,EAASqF,KAAKse,MAC5BvE,KAAMA,EACN8B,OAAQlhB,OAOhB,QAAS4jB,GAAkBlhB,GACzB/D,EAAKmF,MAAM,qBAAuBpB,EAAakB,MAAQlB,EAAaxE,MACpEJ,EAASgF,WAAWJ,EAAakB,MAAOlB,EAAaxE,MAAMqD,KAAK,SAASM,GACtEqd,EAAS1C,KACP0C,EAASqD,SACNC,QAAQ/d,EAAE,wCACVkd,SAAS,aACTC,UAAU,QA5YpB,GAAIjI,GAAK3b,IAET2b,GAAGxa,WAAaP,EAASO,WACzBwa,EAAGkK,QAAU/lB,EACb6b,EAAGoG,YAAcA,EACjBpG,EAAGwG,eAAiBA,EACpBxG,EAAGsH,cAAgBA,EACnBtH,EAAGyJ,WAAaA,EAChBzJ,EAAG2J,cAAgBA,EACnB3J,EAAG4J,aAAeA,EAClB5J,EAAG6J,MAAQA,EACX7J,EAAG0H,eAAiBA,EACpB1H,EAAGgJ,SAAWA,EACdhJ,EAAGiJ,QAAUA,EACbjJ,EAAGkJ,UAAYA,EACflJ,EAAGoJ,eAAiBA,EACpBpJ,EAAGiK,kBAAoBA,EAGvBjK,EAAGrX,QAAWpE,KAAM,IACpByb,EAAGkG,cAAe,EAClBlG,EAAGiG,mBAAqBA,EACxBjG,EAAGmG,UAAYA,EACfnG,EAAGmK,mBACDC,oBAAqB,mBACrBC,YAAa,UACbC,aAActE,EACduE,OAAQ5E,GAGVxgB,EAAYwC,QAAQC,KAAK,WACvBoY,EAAGjL,WAAatO,EAAEgB,IAAItC,EAAYoB,SAASikB,uBAAwB,SAASjmB,GAC1E,OAASC,GAAID,EAAKkmB,kBACTlmB,KAAMA,EACNkH,MAAOtG,EAAYoB,SAAS8I,6BAA6B9K,QAOtEya,EAAOwK,OACL,WACE,MAAO/iB,GAAEiC,MACPjC,EAAEgB,IAAItD,EAASkD,WAAY,SAASC,GAAK,MAAOb,GAAEikB,KAAKpjB,GAAI,KAAM,SAAU,YAC3Eb,EAAEgB,IAAItD,EAASiD,eAAgB,SAASE,GAAK,MAAOb,GAAEikB,KAAKpjB,GAAI,KAAM,SAAU,YAC/Eb,EAAEgB,IAAItD,EAAS+C,cAAe,SAASI,GAAK,MAAOb,GAAEikB,KAAKpjB,GAAI,KAAM,SAAU,cAGlF,SAASqjB,EAASC,GAChB,GAAIC,GAAYC,EAAKlgB,CAGrBigB,GAAapkB,EAAEskB,eAAeJ,EAASC,EAAS,MAChDE,EAAMrkB,EAAEgB,IAAIhB,EAAEkC,OAAOkiB,EAAY,SAASvjB,GACxC,GAAI0jB,GAAYvkB,EAAEC,KAAKkkB,GAAWpmB,GAAI8C,EAAE9C,IACxC,QAAQiC,EAAEwkB,QAAQ3jB,EAAG0jB,KACnB,MACJpgB,KAEIkgB,EAAI5a,OAAS,IACflL,EAAKmF,MAAM2gB,EAAI5Y,KAAK,MAAQ,YAC5BzL,EAAE4B,QAAQyiB,EAAK,SAAStmB,GACtB,GAAI6B,GAAWlC,EAAS8E,KAAKzE,EAC7BoG,GAAStC,KAAKjC,EAAS4G,sBAGvBrC,EAASsF,OAAS,GAAK2a,EAAW3a,QAAUya,EAAQza,QAAU2a,EAAW3a,QAAU0a,EAAQ1a,SAC7F/L,EAASW,GAAGkG,IAAIJ,GAAUhD,KAAK,WAC7BgG,EAAW+C,MAAM,sBAGvB,GA1EJ0U,EAAoBlE,SAAW,aAAc,SAAU,UAAW,YAAa,OAAQ,WAAY,eAAgB,UAAW,SAAU,aAAc,cAAe,WAAY,OAAQ,kBA4ZzL7b,QACGO,OAAO,oBACPub,WAAW,sBAAuBiE,MCpavC,WACE,YAMA,SAAS6F,GAAoBtd,EAAY0T,EAAWnd,EAAUiB,EAAW+lB,EAAaC,EAAOC,EAAS/H,GA6BpG,QAASyF,KACPzH,EAAUqC,OAIZ,QAAS2H,GAAWld,GAClB,MAAO+c,GAAYI,WAAWnd,GAGhC,QAASod,GAA4B1L,GACnC,GAAI2L,GAAahlB,EAAEgB,IAAIuY,EAAG7U,UAAU6P,UAAW,SAASC,GACtD,MAAOA,GAAS1W,KAAO,KAAO0W,EAASE,MAAQ,KAEjDuQ,GAAY5L,EAAQ2L,GAGtB,QAASE,GAAwB7L,EAAQvb,EAAM4W,GAC7CuQ,EAAY5L,GAASvb,EAAO,KAAO4W,EAAQ,MAG7C,QAASuQ,GAAY5L,EAAQ2L,GAC3BJ,EAAQ1kB,WAAWiB,KAAK,SAASgkB,GAC/B,GAAIC,GAAUplB,EAAEC,KAAKklB,EAAU,SAAStkB,GACtC,GAAa,IAATA,EAAE9C,GACJ,MAAO8C,IAKXukB,GAAQC,gBAAgBlkB,KAAK,SAASmkB,GACpCF,EAAQG,cAAcpkB,KAAK,SAASkc,GAClCxe,QAAQC,OAAOue,EAAQmI,UAAYC,GAAIT,EAAYU,QAASnM,EAAG7U,UAAUmZ,UACzEhD,EAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCC,YAAanD,EACboD,qBAAqB,EACrBC,eAAe,EACfP,YAAa,wBACbxB,WAAY,0BACZgC,aAAc,SACdC,QACE+I,aAAcP,EACdQ,aAAcvI,WAOxBhE,EAAOqC,iBACPrC,EAAOsC,kBAGT,QAASkK,KACP,GAAItf,GAAkC,UAA1BgT,EAAG7U,UAAUA,UAAwB,cAAc,MAC/DmW,GAAUqC,OAAO/b,KAAK,WAGpB,GAAIgb,GAAc,MAAQ5V,EAAO,gBACjCsU,GAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCE,qBAAqB,EACrBC,eAAe,EACfP,YAAaA,EACbxB,WAAY,4BACZgC,aAAc,SACdC,QACEC,eAAgBtD,EAAG7U,eAM3B,QAASohB,KACPphB,EAAYhH,EAAS8E,KAAK+W,EAAG7U,UAAUE,KAAK6B,cAAc8S,EAAG7U,UAAU3G,IACvE2G,EAAUmT,qBAAqB1W,KAAK,WAClCoY,EAAG7U,UAAYA,EACfmhB,MAIJ,QAAShP,GAAMnS,GACb,GAAIqhB,GAAIrhB,GAAa6U,EAAG7U,SAExBqhB,GAAEnP,SAASzV,KAAK,WACdgG,EAAW+C,MAAM,kBACjB2Q,EAAUqC,OACVyH,EAAMqB,cAIV,QAASC,KAEPvhB,EAAYhH,EAAS8E,KAAK+W,EAAG7U,UAAUE,KAAK6B,cAAc8S,EAAG7U,UAAU3G,IACvE2G,EAAUmT,qBAAqB1W,KAAK,WAElCuD,EAAUmS,MAAQ0C,EAAG7U,UAAUmS,MAC/BnS,EAAUoS,YAAcyC,EAAG7U,UAAUoS,YACrCpS,EAAUiO,UAAY4G,EAAG7U,UAAUiO,UACnCjO,EAAUwL,MAAQqJ,EAAG7U,UAAUwL,MAE/B2G,EAAMnS,KAIV,QAASwhB,KACP3M,EAAG7U,UAAUmB,QAAO,GAAM1E,KAAK,WAC7BgG,EAAW+C,MAAM,kBACjB2Q,EAAUqC,SAId,QAASiJ,KACP5M,EAAG7U,UAAUmB,SAAS1E,KAAK,WACzBgG,EAAW+C,MAAM,kBACjB2Q,EAAUqC,SAId,QAASkJ,GAAgB/M,GACvB3b,EAASO,WAAWoF,KAAKkW,EAAG7U,UAAUE,IAAM,IAAM2U,EAAG7U,UAAU3G,GAAI,OAAOoD,KAAK,SAASM,GAyBtF,QAAS4kB,GAAmCpG,EAAOpF,EAAWpZ,GAC5Dwe,EAAMxe,KAAOA,EACbwe,EAAMqC,MAAQ,WACZzH,EAAUqC,QA3BdrC,EAAUqC,OACVrC,EAAUuB,MACRC,OAAQxd,QAAQqb,QAAQoC,SAASC,MACjCC,YAAanD,EACboD,qBAAqB,EACrBC,eAAe,EACf2B,UACE,+DAAiEha,EAAE,mBAAqB,KACxF,kDACA,sCACA,yBACA,wBACA,qCAAuCA,EAAE,SAAW,eACpD,yBACA,gBACAoH,KAAK,IACPkP,WAAY0L,EACZzJ,QAAUnb,KAAMA,KAMlB4kB,EAAmC3L,SAAW,QAAS,YAAa,UAUxE,QAAS4L,GAAsB1mB,GAC7B2Z,EAAG7U,UAAUyT,OAAOvY,GAAUuB,KAAK,WACjC0Z,EAAUqC,OACV/V,EAAW+C,MAAM,oBAIrB,QAASqc,GAAsB3mB,GAC7B2Z,EAAG7U,UAAU2T,OAAOzY,GAAUuB,KAAK,WACjC0Z,EAAUqC,OACV/V,EAAW+C,MAAM,oBAhMrB,GAAexF,GAAX6U,EAAK3b,IAET2b,GAAGiN,gBAAkB9oB,EACrB6b,EAAGkK,QAAU9kB,EACb4a,EAAG7U,UAAYmY,EACftD,EAAG+I,MAAQA,EACX/I,EAAGsL,WAAaA,EAChBtL,EAAGwL,4BAA8BA,EACjCxL,EAAG2L,wBAA0BA,EAC7B3L,EAAGsM,KAAOA,EACVtM,EAAGuM,mBAAqBA,EACxBvM,EAAG1C,MAAQA,EACX0C,EAAG0M,oBAAsBA,EACzB1M,EAAG2M,iBAAmBA,EACtB3M,EAAG4M,qBAAuBA,EAC1B5M,EAAG6M,gBAAkBA,EACrB7M,EAAG+M,sBAAwBA,EAC3B/M,EAAGgN,sBAAwBA,EAGvB1nB,QAAQiD,YAAYyX,EAAG7U,UAAUmT,wBACnCnT,EAAYhH,EAAS8E,KAAK+W,EAAG7U,UAAUE,KAAK6B,cAAc8S,EAAG7U,UAAU3G,GAAIwb,EAAG7U,UAAU8G,cACxF9G,EAAUmT,qBAAqB1W,KAAK,WAClCoY,EAAG7U,UAAYA,EACf6U,EAAG5B,WAAa4B,EAAG7U,UAAUiT,cAiLnC,QAAS8O,GAA0Btf,EAAYoR,EAAQha,EAAMD,EAAUuc,EAAWmE,EAAMhE,EAAkBtd,EAAUiB,EAAW+lB,EAAard,EAAMsd,EAAO9H,GAsCvJ,QAAS1G,KACP,GAAI5V,GAAIgZ,EAAG7U,UAAUyR,aAAa,GAClC2E,OAAM,aAAeva,GAGvB,QAASmmB,KACPnN,EAAGoN,sBAAwBpN,EAAGoN,qBAC9BpN,EAAG7U,UAAUsN,iBAAmBuH,EAAGoN,qBAGrC,QAASC,KACPrN,EAAGsN,qBAAuBtN,EAAGsN,oBAI/B,QAAShC,GAAWld,GAElB,MADA+c,GAAYI,WAAWnd,GAChB+c,EAAYoC,OAGrB,QAAS/R,GAAYC,GACfnW,QAAQ4R,SAASuE,GAEfA,EAAK+R,iBACPxN,EAAG7U,UAAUqQ,YAAY,GAAI1N,IAAOyO,SAAWxW,MAAO0V,OACtDuE,EAAGyN,WAAa,IAIlBzN,EAAG7U,UAAUqQ,YAAYC,GAI7B,QAASiS,GAAezS,GACtB+E,EAAG7U,UAAUqR,eAAevB,GACU,IAAlC+E,EAAG7U,UAAU6P,UAAU9K,SACzB8P,EAAGsN,qBAAsB,GAG7B,QAASK,KACP,GAAI3N,EAAG7U,WAAa6U,EAAG7U,UAAUyiB,SAC/B,MAAI5N,GAAG7U,UAAUyiB,SAAW,EACnB9iB,EAAE,OACFkV,EAAG7U,UAAUyiB,SAAW,EACxB9iB,EAAE,UAEFA,EAAE,QAIf,QAAS2B,GAAKua,EAAMhW,GACdgW,EAAKC,QACPjH,EAAG7U,UAAUiB,MAAM4E,GAChBpJ,KAAK,SAASM,GACb0F,EAAW+C,MAAM,kBACjB2Q,EAAUqC,OACVyH,EAAMqB,aACL,SAASjiB,GACNA,EAASC,QAAUgX,EAAiBvb,uBACpCsE,EAAStC,MAAQsC,EAAStC,KAAK4b,SAC/Bxe,QAAQiI,SAAS/C,EAAStC,KAAK4b,WACjC9D,EAAG6N,sBAAwBrjB,EAAStC,KAAK4b,WAKnD,QAASxT,KACP0P,EAAG7U,UAAUoB,SACTyT,EAAG7U,UAAUwC,QAEfqS,EAAG7U,UAAY,MAEjBmW,EAAUhR,SAGZ,QAASwd,KACP,GAAIpY,KAKJ,OAHIsK,GAAG7U,UAAUuJ,OAASsL,EAAG7U,UAAUoM,MACrC7B,EAAOsK,EAAG7U,UAAUuJ,MAAM8F,SAASwF,EAAG7U,UAAUoM,MAE3C9Q,EAAEgB,IAAIiO,EAAM,SAAS9C,GAC1B,OAASuL,oBAAqBvL,EAAKuL,sBAC1BnK,aAAcpB,EAAKoB,kBAIhC,QAAS6G,KAEP,IAAK,GADDkT,MACK/mB,EAAI,EAAGA,GAAK,GAAIA,IACvB+mB,EAAMzlB,KAAKtB,EAAEoR,WAEf,OAAO2V,GAGT,QAASC,KACPhO,EAAG7U,UAAUgS,gBACb8Q,EAAe,GAAI/c,MAAK8O,EAAG7U,UAAUuJ,MAAMtB,WAG7C,QAAS8a,KACPlO,EAAG7U,UAAU6R,cACbmR,EAAa,GAAIjd,MAAK8O,EAAG7U,UAAUwM,IAAIvE,WAGzC,QAASgb,KACP,GAAIpO,EAAG7U,UAAUuJ,MAAO,CAEtB,GAAIuC,EACJA,GAAQgX,EAAaI,UAAYrO,EAAG7U,UAAUuJ,MAAM2Z,UACtC,IAAVpX,IACFgX,EAAe,GAAI/c,MAAK8O,EAAG7U,UAAUuJ,MAAMtB,WACjB,gBAAtB4M,EAAG7U,UAAU6B,OACfgT,EAAG7U,UAAUoM,IAAM,GAAIrG,MAAK8O,EAAG7U,UAAUuJ,MAAMtB,WAC/C4M,EAAG7U,UAAUoM,IAAIwD,WAAWiF,EAAG7U,UAAU8L,OACzCqX,EAAa,GAAIpd,MAAK8O,EAAG7U,UAAUoM,IAAInE,YAEzCoG,MAKN,QAAS+U,KACP,GAAIvO,EAAG7U,UAAUoM,IAAK,CAEpB,GAAIN,GAAQqX,EAAWD,UAAYrO,EAAG7U,UAAUoM,IAAI8W,SACtC,KAAVpX,IACFA,EAAQ+I,EAAG7U,UAAUuJ,MAAM8C,UAAUwI,EAAG7U,UAAUoM,KAC9CN,EAAQ,EACV+I,EAAG7U,UAAUoM,IAAM,GAAIrG,MAAKod,EAAWlb,YAEvC4M,EAAG7U,UAAU8L,MAAQA,EACrBqX,EAAa,GAAIpd,MAAK8O,EAAG7U,UAAUoM,IAAInE,YAEzCoG,MAKN,QAASgV,KACPL,EAAa,GAAIjd,MAAK8O,EAAG7U,UAAUwM,IAAIvE,WAGzC,QAASoG,KACPwG,EAAGyO,gBAAgB/Y,KAAOoY,IAC1B9N,EAAG7U,UAAUqO,iBAtLf,GAA0ByU,GAAcK,EAAYH,EAAhDnO,EAAK3b,IAET2b,GAAGkK,QAAU/lB,EACb6b,EAAG7U,UAAYmY,EACftD,EAAGjL,cACHiL,EAAGoN,qBAAuBpN,EAAG7U,UAAUsN,iBACvCuH,EAAGmN,uBAAyBA,EAC5BnN,EAAGsN,qBAAsB,EACzBtN,EAAGqN,sBAAwBA,EAE3BrN,EAAGsL,WAAaA,EAChBtL,EAAGxE,YAAcA,EACjBwE,EAAG0N,eAAiBA,EACpB1N,EAAGpD,aAAeA,EAClBoD,EAAG2N,cAAgBA,EACnB3N,EAAG1P,OAASA,EACZ0P,EAAGvT,KAAOA,EACVuT,EAAG6N,uBAAwB,EAC3B7N,EAAGyO,iBACD/Y,KAAMoY,IACNC,MAAOlT,KAETmF,EAAGgO,aAAeA,EAClBhO,EAAGkO,WAAaA,EAGhBlO,EAAGoO,gBAAkBA,EACrBpO,EAAGuO,cAAgBA,EACnBvO,EAAGwO,cAAgBA,EAEfxO,EAAG7U,UAAUuJ,QACfuZ,EAAe,GAAI/c,MAAK8O,EAAG7U,UAAUuJ,MAAMtB,YACzC4M,EAAG7U,UAAUoM,MACf+W,EAAa,GAAIpd,MAAK8O,EAAG7U,UAAUoM,IAAInE,YACrC4M,EAAG7U,UAAUwM,MACfwW,EAAa,GAAIjd,MAAK8O,EAAG7U,UAAUwM,IAAIvE,YA/O3C8X,EAAoB/J,SAAW,aAAc,YAAa,WAAY,YAAa,cAAe,QAAS,UAAW,kBA0MtH+L,EAA0B/L,SAAW,aAAc,SAAU,OAAQ,WAAY,YAAa,OAAQ,mBAAoB,WAAY,YAAa,cAAe,OAAQ,QAAS,kBA4LnL7b,QACGO,OAAO,oBACPub,WAAW,sBAAuB8J,GAClC9J,WAAW,4BAA6B8L,MC/Y7C,WAEE,YAmBA,SAASwB,KACP,OACEC,SAAU,IACVjI,OACEvV,IAAK,SACLyE,UAAW,eACXgZ,UAAW,eACXvoB,SAAU,eAEZ+a,WAAYyN,GAQhB,QAASA,GAAwB7P,EAAQ7a,GAGvCE,KAAK8M,IAAM6N,EAAO7N,IAClB9M,KAAKuR,UAAYoJ,EAAOpJ,UACxBvR,KAAKuqB,UAAY5P,EAAO4P,UACxBvqB,KAAK0E,aAAe,WAClB,GAAIsC,GAAKoP,EAAO2J,CAChB,OAAIpF,GAAO3Y,UAETgF,EAAM2T,EAAO3Y,SACb+d,EAAkB3d,EAAEkC,OAAOxE,EAASwC,YAAcC,OAAQ,IAC1D6T,EAAQhU,EAAEgW,UAAU2H,EAAiB,SAAS/d,GAC5C,MAAOA,GAAS7B,IAAM6G,KAEfA,IAAKA,EAAKoP,MAAOA,IAGrB,MAnBXoU,EAAwB1N,SAAW,SAAU,YAuB7C7b,QACGO,OAAO,oBACPipB,UAAU,gBAAiBJ,MC9DhC,WACE,YAmBA,SAASK,GAAmBtN,GAY1B,QAASqD,GAASkK,EAAOC,GACvB,GAAIC,GAAIzoB,EAAE0oB,IAAIF,EAAQ,mBAAoB,GAAK,IAE/C,QACE,wBAEA,4DACA,6BACA,uFAEA,uDAAuDC,EAAE,8BACzD,sBAAsBA,EAAE,+BACxB,sBAAsBA,EAAE,0CACxB,yBAEA,wBAAwBA,EAAE,qDAAqDA,EAAE,sCAEjF,YAAYA,EAAE,6BACd,6BAEA,2BAA2BA,EAAE,8EAE7B,2BAA2BA,EAAE,4EAE7B,2BAA2BA,EAAE,+FAE7B,2BAA2BA,EAAE,wFAC7B,gBAEA,uCAAuCA,EAAE,+BACzC,sCAAsCA,EAAE,+BACxC,eACA,aACA,WACA,oFACA,8EACA,UACAhd,KAAK,IAGT,QAASkd,GAAK1I,EAAO2I,EAAUC,GAC7B,GAAIC,GAAIC,EAAMC,CAEThpB,GAAE0oB,IAAIG,EAAO,qBAGhBC,EAAK,IAAM7I,EAAM1R,MAAM0a,SACvBF,EAAO9I,EAAM1R,MAAMgT,SAAWuH,EAC9BE,EAAQ,KAAO/I,EAAM1R,MAAMgT,SAAW,GAAKuH,EACvCA,EAAK,MACHC,EAAO,IACTA,GAAQ,GACNC,EAAQ,IACVA,GAAS,IAIA,IAATD,IACFA,EAAO,GACK,IAAVC,IACFA,EAAQ,GAGVJ,EAASM,IAAI,OAAQH,EAAO,KAC5BH,EAASM,IAAI,QAASF,EAAQ,KACzB/I,EAAM1R,MAAM7J,WAAcub,EAAM1R,MAAM7J,UAAUykB,aACnDP,EAASQ,SAAS,SAAWnJ,EAAM1R,MAAMN,OACzC2a,EAASQ,SAAS,QAAUnJ,EAAM1R,MAAM9E,SAItCwW,EAAM1R,MAAM8a,WACdT,EAASQ,SAAS,aAAenJ,EAAM1R,MAAM8a,WAE3CpJ,EAAM1R,MAAM7J,YAEdkkB,EAASQ,SAAS,YAAcnJ,EAAM1R,MAAM7J,UAAUE,KACtDgkB,EAASQ,SAAS,sBAAwBnJ,EAAM1R,MAAM7J,UAAUE,KAGvB,IAArCqb,EAAM1R,MAAM7J,UAAU4kB,YACxBV,EAASQ,SAAS,yBAGmB,IAAnCnJ,EAAM1R,MAAM7J,UAAU6kB,UACxBX,EAASQ,SAAS,yBAhG1B,OACElB,SAAU,IACVjI,OACE1R,MAAO,WACPib,WAAY,YAEd5P,SAAS,EACTyE,SAAUA,EACVsK,KAAMA,GAVVL,EAAmB5N,SAAW,oBAyG9B7b,QACGO,OAAO,oBACPipB,UAAU,qBAAsBC,MC9HrC,WACE,YAmBA,SAASmB,KACP,OACEvB,SAAU,IACVjI,OACE5R,OAAQ,YACR3D,IAAK,SACL8e,WAAY,YAEdnL,UACE,yBACA,wCACA,qCACA,qBACA,6EACA5S,KAAK,KAIX5M,QACGO,OAAO,oBACPipB,UAAU,qBAAsBoB,MCxCrC,WACE,YAeA,SAASC,GAAgBviB,EAAY7I,EAAU0c,EAAkBtd,EAAUiB,GAOzE,QAASgqB,GAAK1I,EAAO2I,EAAUC,EAAOc,GAsBpC,QAASC,KACP,GAAIhlB,GAAKtC,EAAc+mB,CAGvBpJ,GAAM1R,MAAQ5P,EAAUwJ,OAExB7F,EAAeunB,EAAgBvnB,eAC3BA,IAEFob,EAAiBpb,EAAa0R,MAC9BpP,EAAMtC,EAAasC,IACnBklB,EAAyB7J,EAAM1R,MAAMiB,eAAe2O,iBAAiBnK,OAGlEpP,IACHA,EAAMqb,EAAM1R,MAAM7J,UAAUE,KAG9BykB,EAAYpJ,EAAM1R,MAAM7J,UAAU2J,OAAO,GAAGgb,UACxCA,GACFT,EAASQ,SAAS,aAAeC,GAGnCT,EAASQ,SAAS,YAAcxkB,GAGlC,QAASmlB,KAEP/pB,EAAEgqB,aAAaC,EAAWC,UAAW,SAASnE,GACxC,aAAazE,KAAKyE,IACpB6C,EAASuB,YAAYpE,KAGzB6C,EAASQ,SAAS,WAGpB,QAASgB,KAEP,GAAIC,GAAWC,EAAYxM,EAAU5J,EACjCjG,EAAO8P,EAAUwM,EAAcC,CAInC,IAFAH,GAAY,EAER3sB,EAASyB,OAASzB,EAASyB,MAAMoH,MAAQkkB,EAAelkB,KAAM,CAUhE,GAPA+jB,EAAuC,oBAAxBG,EAAelkB,KAC9BuX,EAAemC,EAAM1R,MAAM7J,UAAUykB,WACrCjV,EAAe+L,EAAM1R,MAAMiB,eAAeoO,wBAAwBzO,UAClElB,EAAegS,EAAM1R,MAAMiB,eAAeoO,wBAAwB3P,MAClEsc,EAAetK,EAAM1R,MAAMiB,eAAeoO,wBAAwBG,SAClEyM,EAAexP,EAAiBzb,mBAAqB0O,EAEjDpP,QAAQiD,YAAYyoB,GACtB,MAqCF,KApCAxM,EAAWwM,EACPxM,EAAWyM,IACbzM,EAAWyM,GAETtW,GAAa,IACXwJ,EAAiB,GACjBxJ,GAAc2V,EAAgB1a,WAC/B+E,GAAcwJ,IACboM,GAA0BpM,IACzBuC,EAAM1R,MAAM7J,UAAU0Z,gBAI3BiM,GAAY,EACPC,IACExM,IAEHmC,EAAM1R,MAAMkB,UAAYib,EAAazc,IAEnCvQ,EAASyB,MAAMwrB,eACjB/B,EAASM,IAAI,MAAQjb,EAAQvQ,EAASyB,MAAMwrB,cAAiB,MAC7D/B,EAASM,IAAI,SAAWnL,EAAWrgB,EAASyB,MAAMwrB,cAAiB,OAGnE/B,EAASM,IAAI,MAAOxrB,EAASyB,MAAMyrB,UAAY,OAEnDhC,EAASuB,YAAY,YAAclK,EAAM1R,MAAM7J,UAAUE,KACzDgkB,EAASuB,YAAY,yBACrBvB,EAASQ,SAAS,0BAClBnJ,EAAM1R,MAAME,SAAU,GAGxB8b,GAAgBxM,EAChB7J,KAGQmW,GAAaE,GAAgBrW,GAAc2V,EAAgB1a,WACjE4O,EAAWwM,EACPxM,EAAW/C,EAAiBzb,qBAC9Bwe,EAAW/C,EAAiBzb,oBAC1B2U,GAAa,GAAMA,GAAc2V,EAAgB1a,YAEnDkb,GAAY,EACPC,IACH1B,EAASM,IAAI,MAAOxrB,EAASyB,MAAMyrB,UAAY,MAE3CltB,EAASyB,MAAMwrB,eACjB/B,EAASM,IAAI,SAAWnL,EAAWrgB,EAASyB,MAAMwrB,cAAiB,OAEvE/B,EAASuB,YAAY,0BACrBvB,EAASuB,YAAY,yBAGrBvB,EAASQ,SAAS,YAAcnJ,EAAM1R,MAAM7J,UAAUE,MAExD2lB,GAAgBxM,EAChB7J,IACAjG,EAAQ,CAELsc,KAECD,EACF1B,EAASQ,SAAS,yBAEVtL,IAERmC,EAAM1R,MAAMmB,QAAUmb,EAAW5c,EAAO8P,KAK1CsM,EACFzB,EAASuB,YAAY,WAErBvB,EAASQ,SAAS,WAGtB,QAAS0B,GAAaC,GACpB,GAAIC,GAAS1D,EAAO2D,CAUpB,OARAD,GAAqB,GAAXD,EACVzD,EAAQ3W,KAAKua,MAAMF,EAAU,IACzB1D,EAAQ,KACRA,EAAQ,IAAMA,GAClB2D,EAAOD,EAAU,GACbC,EAAO,KACPA,EAAO,IAAMA,GAEV,GAAK3D,EAAQ,IAAM2D,EAG5B,QAASP,GAAazc,GACpB,MAAO6c,GAAa7c,GAGtB,QAAS4c,GAAW5c,EAAO8P,GACzB,GAAIjN,IAAO7C,EAAQ8P,GAAY/C,EAAiBzb,kBAChD,OAAOurB,GAAaha,GA7KtB,GAAImZ,GAAYJ,EAAiBY,EAAgB/M,EAAgBoM,CAEjEG,GAAarB,EAAS,GACtBiB,EAAkBF,EAAM,GACxBc,EAAiBd,EAAM,GACvBjM,GAAiB,EAEjBkL,EAASQ,SAAS,4CAGlB,IAAI+B,GAAsBhkB,EAAWqT,IAAI,qBAAsBoP,GAC3DwB,EAAiBjkB,EAAWqT,IAAI,gBAAiB4P,GACjDiB,EAAoBlkB,EAAWqT,IAAI,mBAAoBuP,EAG3D9J,GAAMzF,IAAI,WAAY,WACpB2Q,IACAC,IACAC,MAzBJ,OACEnD,SAAU,IACVoD,SAAU,iBAAkB,yBAC5B3C,KAAMA,GALVe,EAAgBhP,SAAW,aAAc,WAAY,mBAAoB,WAAY,aA2LrF7b,QACGO,OAAO,oBACPipB,UAAU,kBAAmBqB,MC5MlC,WACE,YAmBA,SAAS6B,KACP,OACErD,SAAU,IACVjI,OACE5R,OAAQ,YACR3D,IAAK,SACL8e,WAAY,YAEdnL,UACE,2BACA,wCACA,qCACA,qBACA,6EACA5S,KAAK,KAIX5M,QACGO,OAAO,oBACPipB,UAAU,qBAAsBkD,MCxCrC,WACE,YAcA,SAASC,KAYP,QAASnN,GAASkK,EAAOC,GACvB,GAAIC,GAAIzoB,EAAE0oB,IAAIF,EAAQ,mBAAoB,GAAK,IAE/C,QACE,wBAEA,2DACA,qFAEA,qDAAqDC,EAAE,8BACvD,oBAAoBA,EAAE,+BACtB,oBAAoBA,EAAE,0CACtB,oCAAoCA,EAAE,sDAAsDA,EAAE,sCAE9F,oBAAoBA,EAAE,qDAAqDA,EAAE,sCAE7E,QAAQA,EAAE,6BACV,yBAEA,uBAAuBA,EAAE,8EAEzB,uBAAuBA,EAAE,4EAEzB,uBAAuBA,EAAE,+FAEzB,uBAAuBA,EAAE,wFACzB,YACA,UACAhd,KAAK,IAGT,QAASkd,GAAK1I,EAAO2I,EAAUC,GACxB7oB,EAAE0oB,IAAIG,EAAO,qBAGZ5I,EAAM1R,MAAM8a,WACdT,EAASQ,SAAS,aAAenJ,EAAM1R,MAAM8a,WAE3CpJ,EAAM1R,MAAM7J,YAEdkkB,EAASQ,SAAS,YAAcnJ,EAAM1R,MAAM7J,UAAUE,KAGb,IAArCqb,EAAM1R,MAAM7J,UAAU4kB,YACxBV,EAASQ,SAAS,yBAGmB,IAAnCnJ,EAAM1R,MAAM7J,UAAU6kB,UACxBX,EAASQ,SAAS,yBA3D1B,OACElB,SAAU,IACVjI,OACE1R,MAAO,WACPib,WAAY,YAEd5P,SAAS,EACTyE,SAAUA,EACVsK,KAAMA,GA0DV9pB,QACGO,OAAO,oBACPipB,UAAU,uBAAwBmD,MCpFvC,WAEE,YAeA,SAASC,GAAqBtkB,EAAY0X,EAAS6M,EAAWrtB,EAAIC,EAAUqtB,EAAYjuB,EAAUiB,EAAWD,GAC3G,OACEwpB,SAAU,IACVjI,OACE1Z,KAAM,yBAERoU,WAAYiR,EACZjD,KAAM,SAAS1I,EAAO/F,EAAS2O,EAAOlO,GAqBpC,QAASkR,KACP3f,EAAO,GAAI4f,GAAa5R,EAAS3T,GAErB,WAARA,GAEF7H,EAAYwC,QAAQC,KAAK,WACvB,GAAI0O,GAAMkc,EAAUC,CAChBttB,GAAYoB,SAASmsB,mBACvBpc,EAAOnR,EAAYoB,SAASmsB,iBAAiBlc,MAAM,KACnDgc,EAAWzP,SAAS4P,eAAe,OAAS3jB,SAASsH,EAAK,KAC1Dmc,EAAiBzjB,SAASsH,EAAK,IAAM3D,EAAKye,cAC1Cze,EAAKgO,QAAQiS,UAAYJ,EAASK,UAAYJ,KAMpDrR,EAAWgQ,cAAgBze,EAAKye,cAMlC,QAASmB,GAAaO,EAAU9lB,GAC9B3I,KAAKyuB,SAAWA,EAChBzuB,KAAKsc,QAAUmS,EAAS,GACxBzuB,KAAK2I,KAAOA,EACZ3I,KAAK+sB,cAAgB/sB,KAAK0uB,mBAC1B1uB,KAAK2uB,WAAa,EAAI3uB,KAAK+sB,cAC3B/sB,KAAKuP,WAAavP,KAAK4uB,gBACvB5uB,KAAK6uB,KAAO7uB,KAAK8uB,gBAGjB9uB,KAAKutB,oBAAsBhkB,EAAWqT,IAAI,qBAAsB3b,QAAQoL,KAAKrM,KAAMA,KAAK+uB,cACxF/uB,KAAKgvB,mBAAqBzlB,EAAWqT,IAAI,mBAAoB3b,QAAQoL,KAAKrM,KAAMA,KAAKivB,YAErFjvB,KAAKkvB,wBAA0BjuB,QAAQoL,KAAKrM,KAAMA,KAAKmvB,mBACvDnvB,KAAKovB,+BAAiCnuB,QAAQoL,KAAKrM,KAAMA,KAAKqvB,0BAG9DrvB,KAAKmvB,oBACLluB,QAAQqb,QAAQ2E,GAASqO,GAAG,SAAUtvB,KAAKkvB,yBA7D7C,GAAI5gB,GAAM3F,EAAM4mB,GAAgB,CAEhCjhB,GAAO,KACP3F,EAAO0Z,EAAM1Z,KACb4mB,EAA4C,sBAA3BjT,EAAQE,KAAK,WAI9BO,EAAWwS,cAAgBA,EAG3B7uB,EAASutB,GAGT5L,EAAMzF,IAAI,WAAY,WAChBtO,GACFA,EAAKkhB,aAgDTtB,EAAa/mB,WAEXqoB,SAAU,WACRxvB,KAAKutB,sBACLvtB,KAAKgvB,qBACLhvB,KAAKyuB,SAASgB,IAAI,YAAazvB,KAAKovB,gCACpCnuB,QAAQqb,QAAQ2E,GAASwO,IAAI,SAAUzvB,KAAKkvB,0BAG9CH,YAAa,WACX/uB,KAAKyuB,SAASa,GAAG,YAAatvB,KAAKovB,gCACnCpvB,KAAKmvB,oBACLnvB,KAAKqvB,4BAGPJ,UAAW,WACTjvB,KAAKyuB,SAASgB,IAAI,YAAazvB,KAAKovB,gCACpCtvB,EAASyB,MAAQ,MAGnBmtB,iBAAkB,WAChB,GAAIgB,GAAOC,EAAQC,EAAS,IAO5B,OALAF,GAAQhR,SAAS4P,eAAe,SAChCqB,EAASjR,SAAS4P,eAAe,UAC7BoB,GAASC,IACXC,GAAWD,EAAOnB,UAAYkB,EAAMlB,WAAa,IAE5CoB,GAITC,iBAAkB,SAASC,GACzB,GAAIC,GAAOH,EAAQI,EAAYhD,EAAWiD,EAAOC,EAASC,CAe1D,OAbAP,GAASG,EAAQC,EAAahD,EAAY,EAC1CiD,EAAQjwB,KAAKsc,QAAQ8T,uBAAuB,OAExCH,EAAMpkB,OAAS,IACjBqkB,EAAUD,EAAM,GAAGI,wBACnBT,EAASM,EAAQN,OACjBG,EAAQG,EAAQH,MAChBC,EAAaE,EAAQ/E,KAAO2E,EAC5BK,EAAaF,EAAM,GAAGG,uBAAuB,2BACzCD,EAAWtkB,OAAS,IACtBmhB,EAAYmD,EAAW,GAAGG,gBAGrBV,OAAQA,EAAQG,MAAOA,EAAOQ,QAAUpF,KAAM6E,EAAYQ,IAAKxD,KAI1E4B,cAAe,WACb,GAAqBvd,EAIrB,OAFAA,GAAOrR,KAAKsc,QAAQmU,qBAAqB,mBAElCruB,EAAEgB,IAAIiO,EAAM,SAASqf,EAAIta,GAC9B,MAAImZ,GACKnZ,EAEAzL,SAAS+lB,EAAGC,WAAW,iBAAiBjvB,UAKrDotB,cAAe,WACb,GAAI8B,GAAYC,EAAM,CAUtB,OARiB,WAAb7wB,KAAK2I,MACPioB,EAAa5wB,KAAKsc,QAAQmU,qBAAqB,gBAAgB,GAC/DI,EAAMlmB,SAASimB,EAAWD,WAAW,WAAWjvB,OAAS,GAGzDmvB,EAAM7wB,KAAKsc,QAAQ8T,uBAAuB,OAAOvkB,OAAS,EAGrDglB,GAKT1B,kBAAmB,WACjB,GAAIe,GAASY,CAEbZ,GAAUlwB,KAAKsc,QAAQ+T,wBACvBS,EAAgB9wB,KAAK6vB,iBAAiBK,EAAQ/E,MAE9ClqB,QAAQC,OAAOlB,MACb6f,aACEkR,EAAGb,EAAQ/E,KACX6F,EAAGd,EAAQM,KAEbS,UAAWH,EAAclB,OACzBsB,SAAUJ,EAAcf,MACxBoB,WAAYL,EAAcP,OAAOpF,KACjC6B,UAAW8D,EAAcP,OAAOC,OAMpCnB,yBAA0B,WACxB,GAAIzd,GAAgBwf,EAAoBxkB,EAAKykB,EAASC,EAAM1e,CAE5DhB,GAAiB7Q,EAAUwJ,OAAOqH,eAC9B5R,KAAK6f,aAAejO,IACtBwf,EAAqBxf,EAAe2f,6BAA6BvxB,MAE7DoxB,IAEFtxB,EAASyB,MAAQvB,KACjB4M,GAAM,GAAIC,OAAOkC,YACZ/O,KAAKwxB,YAAc5kB,EAAM5M,KAAKwxB,WAAa,OAC9CxxB,KAAKwxB,WAAa5kB,EAClBykB,EAAUD,EAAmBJ,EAAIhxB,KAAK2uB,WAClC0C,EAAU,GACZC,GAAQtxB,KAAKsc,QAAQiS,UACjB8C,EAAUC,IACZD,EAAUC,GACZtxB,KAAKsc,QAAQiS,WAAa8C,IAG1BA,EAAUD,EAAmBJ,EAAIhxB,KAAK2uB,WACtC/b,EAAQye,EAAUrxB,KAAKsc,QAAQgU,aAC3B1d,EAAQ,IACV5S,KAAKsc,QAAQiS,WAAa3b,WAe9C,QAASob,GAA+BrT,GAGtC3a,KAAK2I,KAAOgS,EAAOhS,KAzNrBklB,EAAqB/Q,SAAW,aAAc,UAAW,YAAa,KAAM,WAAY,aAAc,WAAY,YAAa,eAqN/HkR,EAA+BlR,SAAW,UAO1C7b,QACGO,OAAO,oBACPipB,UAAU,uBAAwBoD,MC9OvC,WAEE,YAaA,SAAS4D,KACP,OACEnH,SAAU,IACVoD,QAAS,UACTrL,OACEqP,QAAS,KAEX1V,SAAS,EACTyE,UACE,0BAEA,mCACA,wDACA,MAEA,oCACA,oDACA,MACA,YACA5S,KAAK,KAIX5M,QACGO,OAAO,oBACPipB,UAAU,uBAAwBgH,MCxCvC,WACE,YAYA,SAASE,GAAyBpoB,EAAY7I,EAAUC,EAAMG,EAAahB,EAAUsd,EAAkBrc,GAOrG,QAASgqB,GAAK1I,EAAO/F,EAAS2O,EAAOgB,GAqBnC,QAAS2F,KACP,GAAI9qB,GAAWwK,EAAUugB,EAAYC,EAAcC,EAC/CC,EAAUC,EAAUC,EAAWC,EAASC,CAGxC/P,GAAM1R,MAAM9E,OAAS,IAEzB/E,EAAYub,EAAM1R,MAAM7J,UACxBwK,EAAW+Q,EAAM1R,MAAMW,SACvBugB,EAAazvB,EAAEgW,UAAUtR,EAAU2J,QAAS,WAAYa,IACxDwgB,EAA+B,IAAfD,EAChBE,EAAeF,IAAe/qB,EAAU2J,OAAO5E,OAAS,EAExDmmB,EAAW/wB,QAAQqb,QAAQ,gCAC3B0V,EAASxG,SAAS,aAAe1kB,EAAUE,KAEvCF,EAAUykB,YACwB,0BAAlCjP,EAAQ,GAAG+V,WAAWC,SACpBR,IACFG,EAAWhxB,QAAQqb,QAAQ,qCAAqCiW,OAAOP,GACvE1V,EAAQiW,OAAON,IAEbF,IACFG,EAAYjxB,QAAQqb,QAAQ,sCAAsCiW,OAAOP,EAASQ,SAClFlW,EAAQiW,OAAOL,MAIbJ,IACFK,EAAUlxB,QAAQqb,QAAQ,oCAAoCiW,OAAOP,GACrE1V,EAAQiW,OAAOJ,IAEbJ,IACFK,EAAanxB,QAAQqb,QAAQ,uCAAuCiW,OAAOP,EAASQ,SACpFlW,EAAQiW,OAAOH,MAKrB,QAASK,GAAazQ,GACpB,GAAI0Q,GAAU9gB,CAEdoQ,GAAGjE,kBAEH2U,EAAW,aAEPrQ,EAAM1R,OAAS0R,EAAM1R,MAAM7J,UAEF,gBAAvBkb,EAAG2Q,OAAOC,WACa,iBAAvB5Q,EAAG2Q,OAAOC,UACZF,EAAW,eACmB,mBAAvB1Q,EAAG2Q,OAAOC,WACa,kBAAvB5Q,EAAG2Q,OAAOC,YACjBF,EAAW,cAIbA,EAAW,aAIb9gB,EAAiB,GAAIihB,GAA4BH,GACjD9gB,EAAekhB,cAAc9Q,GAG7BjhB,EAAUwJ,OAAOqH,eAAiBA,EAGlC3Q,QAAQqb,QAAQoC,UAAUqU,IAAI,UAAW9D,GAGzChuB,QAAQqb,QAAQoC,UAAU4Q,GAAG,YAAa0D,GAG5C,QAASC,GAAUjR,GACjB,GAAIrR,GAAOuiB,EAAWC,EAAYC,EAAW1kB,EAAW2kB,EAAS/V,EAAc1L,EAAgBlN,CAE/FyuB,GAAa7W,EAAQgX,SAAS,qBAC9BF,EAA8C,yBAAjC9W,EAAQ,GAAG+V,WAAWC,SACjChW,EAAQgX,SAAS,oBAEnB5uB,EAAeunB,EAAgBvnB,eAE3B2d,EAAM1R,OAAS0R,EAAM1R,MAAM7J,UAE7B6J,EAAQ0R,EAAM1R,OAIdjC,EAAYud,EAAgB1B,UAAUgJ,UAAUzyB,EAAY2Y,sBAAuB,YACnF4Z,GACE1qB,KAAM,cACN3B,IAAKtC,EAAcA,EAAasC,IAAMlH,EAASiC,mBAC/Cke,QAASxZ,EAAE,aACXiI,UAAWA,EACXwR,SAAUiT,EAAY,EAAI,GAE5B7V,EAAe,GAAIvc,GAAUsyB,GAC7B1iB,GACE7J,UAAWwW,EACX/L,UAAW0a,EAAgB1a,UAC3B1F,OAAQ,GAEV8E,EAAM7J,UAAU2J,QAAUE,IAI5BuiB,EAAY,WACRE,EACFF,EAAY,UACLviB,EAAM7J,UAAUykB,aACvB2H,EAAY,mBAGd9wB,EAAE4B,QAAQ2M,EAAM7J,UAAU2J,OAAQ,SAAS2E,GACzCA,EAAEoe,UAAW,IAIf5hB,EAAiB7Q,EAAUwJ,OAAOqH,eAClCA,EAAe6hB,qBAAqBP,GACpCthB,EAAe8hB,cAAc/iB,GACzBjM,GAGFkN,EAAe+hB,iBAAiBjvB,GAGlC3D,EAAUwJ,OAAOzD,UAAY6J,EAAM7J,UAEnCnG,EAAKmF,MAAM,2BAA6BotB,GACxC3pB,EAAW+C,MAAM,sBAGnB,QAAS0mB,GAAOhR,GACd,GAAIpQ,GAAiB7Q,EAAUwJ,OAAOqH,cAMtClR,GAAS,WACPkR,EAAegiB,gBAAgB5R,KAInC,QAASiN,GAAUjN,GACjB,GAAIrR,GAAOkjB,CAEXljB,GAAQ0R,EAAM1R,MACdkjB,EAAU9yB,EAAUwJ,OAAOqH,eAG3B3Q,QAAQqb,QAAQoC,UAAU+Q,IAAI,YAAauD,GAEvCa,EAAQC,iBACVvqB,EAAW+C,MAAM,oBACjBunB,EAAQC,gBAAiB,GAIvBnjB,GAASA,EAAM7J,WACjB1E,EAAE4B,QAAQ2M,EAAM7J,UAAU2J,OAAQ,SAAS2E,GACzCA,EAAEoe,UAAW,IAOnB,QAASO,MAqCT,QAASC,GAA8Bd,GACrClzB,KAAKi0B,aAAaf,GAwFpB,QAASL,GAA4BH,GACnC1yB,KAAK0yB,SAAWA,EA7TlB,GAAIrQ,EAAM1R,MAAO,CACf,IAAI0R,EAAM1R,MAAM7J,UAAU8gB,UAAavF,EAAM1R,MAAM8a,UAMjD,WADAnP,GAAQiQ,YAAY,8BAHpBqF,KASJtV,EAAQgT,GAAG,YAAamD,GAGxBpQ,EAAMzF,IAAI,WAAY,WACpBN,EAAQmT,IAAI,YAAagD,GACzBnW,EAAQmT,IAAI,YAAauD,KAgL3Be,EAAgB5sB,WACd4pB,GAAG,EACHC,GAAG,EAEH3Q,SAAU,SAAqB6T,GAC7B,GAAIthB,GAAQ,GAAImhB,EAQhB,OAPAnhB,GAAMme,EAAI/wB,KAAK+wB,EAAImD,EAAiBnD,EACpCne,EAAMoe,EAAIhxB,KAAKgxB,EAAIkD,EAAiBlD,EAEhClxB,EAASyB,QACXqR,EAAMvB,KAAOvR,EAASyB,MAAMgO,WAAWvP,KAAK+wB,GAAKjxB,EAASyB,MAAMgO,WAAW2kB,EAAiBnD,IAGvFne,GAGTuhB,YAAa,SAAwBD,GACnC,GAAIthB,GAAQ5S,KAAKqgB,SAAS6T,EAE1B,OAAOnhB,MAAKqhB,KAAKxhB,EAAMme,EAAIne,EAAMme,EAAIne,EAAMoe,EAAIpe,EAAMoe,IAGvDwB,MAAO,WACL,GAAI3S,GAAc,GAAIkU,EAItB,OAHAlU,GAAYkR,EAAI/wB,KAAK+wB,EACrBlR,EAAYmR,EAAIhxB,KAAKgxB,EAEdnR,IAWXmU,EAA8B7sB,WAC5BoK,WAAW,EACX8iB,SAAS,EACThkB,OAAO,EACP8P,UAAU,EAEV+S,UAAW,KAEXe,aAAc,SAASf,GACrBlzB,KAAKkzB,UAAYA,GAGnBQ,cAAe,SAAS/iB,GACtB,GAAI2jB,IAAgB,CAEG,aAAnBt0B,KAAKkzB,WACPlzB,KAAKqQ,MAAQ,EACbrQ,KAAKmgB,SAAWxP,EAAM7J,UAAU2J,OAAO5E,OAASuR,EAAiBzb,qBAKjE3B,KAAKqQ,MAAQM,EAAM7J,UAAU2J,OAAO,GAAGJ,MACvCrQ,KAAKmgB,SAAW/d,EAAEmyB,MAAM5jB,EAAM7J,UAAU2J,OAAQ,SAAS2E,GACvD,GAAIxC,GAAO4hB,CASX,OAPAA,GAAmBpf,EAAE7D,UAEnBqB,EADE0hB,EAAgB,EACV,EAEAE,EAAmBF,EAAgB,EAC7CA,EAAgBE,EAETpf,EAAEvJ,OAAS+G,EAAQwK,EAAiBzb,uBAKjDgyB,iBAAkB,SAAS7T,GACzB9f,KAAKuR,UAAYuO,GAGnBO,SAAU,SAAS6T,GACjB,GAAIthB,GAAQ,GAAIohB,EAKhB,OAJAphB,GAAMrB,UAAavR,KAAKuR,UAAY2iB,EAAiB3iB,UACrDqB,EAAMvC,MAASrQ,KAAKqQ,MAAQ6jB,EAAiB7jB,MAC7CuC,EAAMuN,SAAYngB,KAAKmgB,SAAW+T,EAAiB/T,SAE5CvN,GAGT6hB,cAAe,SAAStH,GACtB,GAAIC,GAAqB,GAAXD,EACVzD,EAAQ3W,KAAKua,MAAMF,EAAU,GAC7B1D,GAAQ,KACVA,EAAQ,IAAMA,EAChB,IAAI2D,GAAOD,EAAU,EAIrB,OAHIC,GAAO,KACTA,EAAO,IAAMA,GAER,GAAK3D,EAAQ,IAAM2D,GAG5BP,aAAc,WACZ,MAAO9sB,MAAKy0B,cAAcz0B,KAAKqQ,QAGjC4c,WAAY,WACV,GAAI/Z,IAAOlT,KAAKqQ,MAAQrQ,KAAKmgB,UAAY/C,EAAiBzb,kBAC1D,OAAO3B,MAAKy0B,cAAcvhB,IAG5Bsf,MAAO,WACL,GAAI3S,GAAc,GAAImU,EAKtB,OAJAnU,GAAYtO,UAAYvR,KAAKuR,UAC7BsO,EAAYxP,MAAQrQ,KAAKqQ,MACzBwP,EAAYM,SAAWngB,KAAKmgB,SAErBN,IAWXgT,EAA4B1rB,WAE1ButB,oBAAqB,KACrBC,mBAAoB,KAGpBC,wBAAyB,KACzBC,uBAAwB,KAGxBvU,yBAA0B,KAC1BN,wBAAyB,KAEzBO,iBAAkB,KAElBuT,gBAAgB,EAIhBgB,wBAAyB,KAEzBpB,cAAe,SAA6B/iB,GAC1C3Q,KAAKggB,wBAA0B,GAAIgU,GAA8Bh0B,KAAKkzB,WACtElzB,KAAKsgB,yBAA2B,GAAI0T,GAA8Bh0B,KAAKkzB,WACvElzB,KAAKsgB,yBAAyBoT,cAAc/iB,IAG9CmiB,cAAe,SAA6BnnB,GAC1C3L,KAAK20B,mBAAqB,GAAIZ,GAC9B/zB,KAAK4zB,gBAAgBjoB,GACrB3L,KAAK00B,oBAAsB10B,KAAK20B,mBAAmBnC,SAGrDmB,iBAAkB,SAAgCjvB,GAChD1E,KAAKugB,iBAAmB7b,EACxB1E,KAAKggB,wBAAwB2T,iBAAiBjvB,EAAa0R,OAC3DpW,KAAKsgB,yBAAyBqT,iBAAiBjvB,EAAa0R,QAI9Dwd,gBAAiB,SAA+BjoB,GAM9C,GAJA3L,KAAK20B,mBAAmB5D,EAAIplB,EAAMopB,MAClC/0B,KAAK20B,mBAAmB3D,EAAIrlB,EAAMqpB,MAG9Bh1B,KAAK8zB,gBAAkBh0B,EAASyB,MAAO,CACzC,GAAI0zB,GAAsBj1B,KAAK80B,wBAAwBh1B,EAASyB,MAC3DvB,MAAK40B,0BACR50B,KAAK40B,wBAA0B50B,KAAK80B,wBAAwBh1B,EAASyB,MAAOvB,KAAK00B,qBAC7E3zB,EAAUwJ,OAAOzD,UAAUwC,QAC7BtJ,KAAKk1B,oBAAoBn0B,EAAUwJ,OAAOzD,UAAUuJ,MAAOrQ,KAAK40B,wBAAwB5D,GACxFrwB,EAAKmF,MAAM,wBAA0B/E,EAAUwJ,OAAOzD,UAAUuJ,SAG/DrQ,KAAK60B,wBACLI,GACDA,EAAoBlE,GAAK/wB,KAAK60B,uBAAuB9D,GACrDkE,EAAoBjE,GAAKhxB,KAAK60B,uBAAuB7D,IACvDhxB,KAAK60B,uBAAyBI,EAC1Bj1B,KAAK40B,0BACFK,IACHj1B,KAAK60B,uBAAyB70B,KAAK40B,wBAAwBpC,SAE7DxyB,KAAKm1B,+BAIN,IAAIn1B,KAAK00B,qBACL10B,KAAK20B,qBACJ30B,KAAK8zB,eAAgB,CAC7B,GAAIsB,GAAWp1B,KAAKm0B,aAChBiB,GAAW,IACbp1B,KAAK8zB,gBAAiB,EACtBb,EAAUtnB,MAOhBwpB,uBAAwB,WACtB,GAAIE,GAGAziB,EAAQ5S,KAAK60B,uBAAuBxU,SAASrgB,KAAK40B,yBAClDU,EAAgB1iB,EAAMvB,KAAO+L,EAAiBzb,mBAAqBiR,EAAMoe,CAC7ErwB,GAAKmF,MAAM,kBAAoBwvB,GAE3Br0B,QAAQiD,YAAYlE,KAAKsgB,yBAAyBjQ,QAEpDrQ,KAAKsgB,yBAAyB/O,UAAYzR,EAASyB,MAAMgO,WAAWvP,KAAK40B,wBAAwB7D,GACjG/wB,KAAKsgB,yBAAyBjQ,MAAQrQ,KAAK40B,wBAAwB5D,GAE5DhxB,KAAKsgB,yBAAyB/O,UAAY,IACjDvR,KAAKsgB,yBAAyB/O,UAAYzR,EAASyB,MAAMgO,WAAW8S,EAAM1R,MAAM7J,UAAU2J,OAAO,GAAGa,WAKtGtR,KAAKggB,wBAAwBzO,UAAYvR,KAAKsgB,yBAAyB/O,UAElD,cAAjBvR,KAAK0yB,UACP1yB,KAAKggB,wBAAwB3P,MAAQrQ,KAAKsgB,yBAAyBjQ,MAAQilB,EAC3Et1B,KAAKggB,wBAAwBG,SAAWngB,KAAKsgB,yBAAyBH,UAGjD,gBAAjBngB,KAAK0yB,UACP2C,EAAcr1B,KAAKsgB,yBAAyBH,SAAWmV,EACnDD,EAAc,GAChBr1B,KAAKggB,wBAAwB3P,MAAQrQ,KAAKsgB,yBAAyBjQ,MAAQilB,EAC3Et1B,KAAKggB,wBAAwBG,SAAWkV,GAEjCA,EAAc,IACrBr1B,KAAKggB,wBAAwB3P,MAASrQ,KAAKsgB,yBAAyBjQ,MAAQrQ,KAAKsgB,yBAAyBH,SAC1GngB,KAAKggB,wBAAwBG,UAAYkV,IAGnB,cAAjBr1B,KAAK0yB,WACZ2C,EAAcr1B,KAAKsgB,yBAAyBH,SAAWmV,EACnDD,EAAc,GAChBr1B,KAAKggB,wBAAwB3P,MAAQrQ,KAAKsgB,yBAAyBjQ,MACnErQ,KAAKggB,wBAAwBG,SAAWkV,GAEjCA,EAAc,IACrBr1B,KAAKggB,wBAAwB3P,MAAQrQ,KAAKsgB,yBAAyBjQ,MAAQglB,EAC3Er1B,KAAKggB,wBAAwBG,UAAYkV,GAK/C,IAAIE,EACAv1B,MAAKggB,wBAAwB3P,MAAQ,GACvCklB,EAAYxiB,KAAKyiB,MAAMx1B,KAAKggB,wBAAwB3P,MAAQ+M,EAAiBzb,oBAC7E3B,KAAKggB,wBAAwB3P,OAASklB,EAAYnY,EAAiBzb,mBACnE3B,KAAKggB,wBAAwBzO,WAAagkB,GAEnCv1B,KAAKggB,wBAAwB3P,OAAS+M,EAAiBzb,qBAC9D4zB,EAAYxiB,KAAKua,MAAMttB,KAAKggB,wBAAwB3P,MAAQ+M,EAAiBzb;AAC7E3B,KAAKggB,wBAAwB3P,OAASklB,EAAYnY,EAAiBzb,mBACnE3B,KAAKggB,wBAAwBzO,WAAagkB,GAG5C50B,EAAKmF,MAAM,qBAAuBC,KAAKC,UAAUhG,KAAKggB,0BACtDzW,EAAW+C,MAAM,kBAInBilB,6BAA8B,SAAsBjjB,EAAM8iB,GACxD,GAAIuD,GAAqBvD,GAAsBpxB,KAAK20B,mBAChD9U,EAAc8U,EAAmBtU,SAAS/R,EAAKuR,aAC/CtI,EAAYjJ,EAAKgO,OAMrB,QAJIuD,EAAYkR,EAAIziB,EAAK6iB,YAActR,EAAYkR,EAAIxZ,EAAUke,aAC7D5V,EAAYmR,EAAI,GAAKnR,EAAYmR,EAAIzZ,EAAU+Y,gBACjDzQ,EAAc,MAETA,GAGT4T,qBAAsB,SAAoCP,GACxD,GAAIwC,IAAYC,SAAY31B,KAAK41B,gCACjBC,kBAAmB71B,KAAK81B,sCACxBC,QAAW/1B,KAAKg2B,+BAChBC,QAAW,MACvBC,EAASR,EAAQxC,EACrBlzB,MAAKkzB,UAAYA,EACjBlzB,KAAK80B,wBAA0BoB,GAGjCN,gCAAiC,SAA+BtnB,EAAM8iB,GAEpE,GAAIvR,GAAc7f,KAAK81B,sCAAsCxnB,EAAM8iB,EACnE,IAAIvR,EAAa,CACf,GAAIkN,GAAgBze,EAAKye,cACrBoJ,EAAgBn2B,KAAKuxB,6BAA6BjjB,EAAM8iB,EAC5D+E,GAAcnF,GAAK1iB,EAAKgO,QAAQiS,UAEhC1O,EAAYmR,EAAIje,KAAKua,OAAO6I,EAAcnF,EAAI5T,EAAiBxb,2BAA6BmrB,EAC5F,IAAIqJ,GAAOhZ,EAAiBzb,mBAAqB,CAC7Cke,GAAYmR,EAAI,EAClBnR,EAAYmR,EAAI,EACTnR,EAAYmR,EAAIoF,IACvBvW,EAAYmR,EAAIoF,GAGpB,MAAOvW,IAETiW,sCAAuC,SAA8BxnB,EAAM8iB,GAEzE,GAAIvR,GAEAsW,EAAgBn2B,KAAKuxB,6BAA6BjjB,EAAM8iB,EAC5D,IAAI+E,EAAe,CACjBtW,EAAc,GAAIkU,EAElB,IAAI7C,GAAW5iB,EAAK4iB,SAChBC,EAAa7iB,EAAK6iB,UAEtBtR,GAAYkR,EAAIhe,KAAKua,OAAO6I,EAAcpF,EAAII,GAAcD,EAC5D,IAAImF,GAAO,EACPxH,EAAO/uB,EAASyB,MAAMstB,IAC1B,IAAqB,cAAjB7uB,KAAK0yB,SAA0B,CACjC,GAAIhuB,GAAeunB,EAAgBvnB,cAC/BA,KAEF2xB,EAAOxH,EAAOnqB,EAAa0R,OAE3ByJ,EAAYkR,EAAIsF,EAClBxW,EAAYkR,EAAIsF,EACTxW,EAAYkR,EAAIlC,IACvBhP,EAAYkR,EAAIlC,GAClBhP,EAAYmR,EAAI,MAGhBnR,GAAc,IAGhB,OAAOA,IAETmW,+BAAgC,SAA8B1nB,EAAM8iB,GAElE,GAAIvR,GAEAsW,EAAgBn2B,KAAKuxB,6BAA6BjjB,EAAM8iB,EAC5D,IAAI+E,EAAe,CACjBtW,EAAc,GAAIkU,EAElB,IAAIlF,GAAOvgB,EAAKugB,KACZyH,EAAgB,EAChBpF,EAAW5iB,EAAK4iB,SAChBC,EAAa7iB,EAAK6iB,WAClBF,EAAY3iB,EAAK2iB,UACjBsF,EAAQxjB,KAAKua,OAAO6I,EAAcnF,EAAIsF,GAAiBrF,EACvDsF,GAAQ,IACVA,EAAQ,GAEV1W,EAAYkR,EAAIhe,KAAKua,OAAO6I,EAAcpF,EAAII,GAAcD,GACxDrR,EAAYkR,EAAI,EAClBlR,EAAYkR,EAAI,EACTlR,EAAYkR,EAAIlC,IACvBhP,EAAYkR,EAAIlC,GAClBhP,EAAYkR,IAAMlC,EAAO,GAAK0H,EAC9B1W,EAAYmR,EAAI,MAGhBnR,GAAc,IAGhB,OAAOA,IAGTsU,YAAa,WACX,MAAOn0B,MAAK20B,mBAAmBR,YAAYn0B,KAAK00B,sBAGlDQ,oBAAqB,SAAmC3mB,EAAM4e,GAC5D,GAAIzD,GAAO0D,CACX1D,GAAQ3W,KAAKua,MAAMH,EAAW,GAC9BC,EAAWD,EAAW,EAAK,GAC3B5e,EAAKuN,SAAS4N,EAAO0D,KA3kB3B,OACE9C,SAAU,KACVoD,QAAS,iBACT3C,KAAMA,GALV4G,EAAyB7U,SAAW,aAAc,WAAY,OAAQ,cAAe,WAAY,mBAAoB,aAmlBrH7b,QACGO,OAAO,oBACPipB,UAAU,2BAA4BkH,MCjmB3C,WAEE,YAMA,SAAS6E,KAQP,QAASzL,GAAK1I,EAAO2I,EAAUyL,EAAOC,GACpC,QAASC,KACP,MAAO3L,GAAS3oB,KAAK,mBAEvB,QAASu0B,KACP,MAAOF,GAAyB3J,cAIlC,GAAI8J,GAAexU,EAAM8C,OAAOyR,EAAU,SAAS7J,GACjD,GAAIA,EAAe,CACjB8J,IACAxU,EAAM0K,cAAgBA,CAEtB,IAAI+J,GAAezU,EAAM8C,OAAOwR,EAAU,SAAStlB,GAC7CA,EAAKxF,SACPirB,IACAzU,EAAMhR,KAAOA,EAEbgR,EAAM0U,mBA1BhB,OACEzM,SAAU,IACVoD,QAAS,yBACT3C,KAAMA,EACNhO,WAAYia,GAkChB,QAASA,GAAoBrc,EAAQ8T,EAAU/tB,GAc7C,QAASu2B,GAAYC,GACnB,GAAItqB,GAAM,GAAIC,MACVsqB,EAASvqB,EAAI+C,eACb+Z,EAAQ9c,EAAI4J,WACZ4gB,EAAoC,EAAvBzc,EAAOoS,cACpBK,EAAUxgB,EAAIqG,aACdokB,EAAe1c,EAAOoS,cAAc,GACpCpJ,EAAWhZ,SAAS+e,EAAU0N,EACVhK,EAAUiK,EACV,IAEpBH,GAASC,GAAUxc,EAAOwc,UACxBxc,EAAO2c,aACT3c,EAAO2c,YAAYrvB,SACrB0S,EAAO2c,YAAcC,EAASJ,EAAQxc,EAAOtJ,MAC7CsJ,EAAOwc,OAASA,GAGdxc,EAAO2c,cAET3c,EAAO2c,YAAYhM,IAAI,MAAO3H,EAAW,MAEzC6T,EAAU92B,EAASO,QAAQoL,KAAKtI,EAAO4W,EAAOoc,YAAa,MAI/D,QAASQ,GAASJ,EAAQ9lB,GACxB,GAAIomB,GAAex2B,QAAQqb,QAAQ,gBAcnC,OAZIuQ,GAAe0C,cAEble,GAAQA,EAAK,GAAGsf,WAAW,UAAUjvB,OAASy1B,GAChD1I,EAAS8D,OAAOkF,GAGlBr1B,EAAE4B,QAAQqN,EAAM,SAASqmB,GACnBA,EAAW/G,WAAW,UAAUjvB,OAASy1B,GAC3Cl2B,QAAQqb,QAAQob,GAAYr1B,KAAK,OAAOs1B,GAAG,GAAGpF,OAAOkF,KAIpDA,EAtDT,GAAkBD,GAAdzzB,EAAQ/D,KACR6sB,EAAiB4B,EAAS1R,WAAW,uBAEzCpC,GAAOwc,OAAS,KAChBxc,EAAO2c,YAAc,KACrB3c,EAAOoc,WAAaE,EAEpBtc,EAAOiC,IAAI,WAAY,WACjB4a,GACF92B,EAASuL,OAAOurB,KAXtBR,EAAoBla,SAAW,SAAU,WAAY,YA4DrD7b,QACGO,OAAO,oBACPipB,UAAU,YAAa+L","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength:          24 * 4,   // hour quarters\n      EventDragHorizontalOffset:   3,        // pixels\n      ConflictHTTPErrorCode:       409\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id')).then(function() {\n          // Refresh list of calendars to fetch links associated to new calendar\n          Calendar.$reloadAll();\n        });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Reload the list of known calendars.\n   */\n  Calendar.$reloadAll = function() {\n    var _this = this;\n\n    Calendar.$$resource.fetch('calendarslist').then(function(data) {\n      _.forEach(data.calendars, function(calendarData) {\n        var group, calendar;\n\n        if (calendarData.isWebCalendar)\n          group = _this.$webcalendars;\n        else if (calendarData.isSubscription)\n          group = _this.$subscriptions;\n        else\n          group = _this.$calendars;\n\n        calendar = _.find(group, function(o) { return o.id == calendarData.id; });\n        if (calendar)\n          calendar.init(calendarData);\n      });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, {type: 'application/octet-stream'});\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', '$rootScope', 'sgSettings', 'sgComponent_STATUS', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, $rootScope, Settings, Component_STATUS, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      STATUS: Component_STATUS,\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $rootScope: $rootScope,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .constant('sgComponent_STATUS', {\n      NOT_LOADED:      0,\n      DELAYED_LOADING: 1,\n      LOADING:         2,\n      LOADED:          3,\n      DELAYED_MS:      300\n    })\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected list (events or tasks) and\n   * current view.\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(Component.$rootScope, Component.$rootScope.$emit, 'calendars:list');\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $isLoading\n   * @memberof Component\n   * @returns true if the components list is still being retrieved from server after a specific delay\n   * @see sgMessage_STATUS\n   */\n  Component.$isLoading = function() {\n    return Component.$loaded == Component.STATUS.LOADING;\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      if (dirty) {\n        otherType = (type == 'tasks')? '$events' : '$tasks';\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        // Filter out categories for which there's no associated color\n        component.categories = _.filter(component.categories, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        });\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n        block.isFirst = (this[block.nbr].blocks.length == 1);\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    // Components list is not loaded yet\n    Component.$loaded = Component.STATUS.DELAYED_LOADING;\n    Component.$timeout(function() {\n      if (Component.$loaded != Component.STATUS.LOADED)\n        Component.$loaded = Component.STATUS.LOADING;\n    }, Component.STATUS.DELAYED_MS);\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          // Filter out categories for which there's no associated color\n          component.categories = _.filter(component.categories, function(name) {\n            return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n          });\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        Component.$loaded = Component.STATUS.LOADED;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      if (angular.isString(this.repeat.until))\n        this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default values\n      Component.$Preferences.ready().then(function() {\n        var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n        // Set default classification\n        _this.classification = Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n\n        // Set default alarm\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n\n        // Set notitifications\n        _this.sendAppointmentNotifications = Component.$Preferences.defaults.SOGoAppointmentSendEMailNotifications;\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList({expandable: true})) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              partstat: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          partstat: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (component.startDate && this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (component.startDate && this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint loopfunc: true */\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'sgHotkeys', 'Calendar', 'Component', 'Preferences', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, sgHotkeys, Calendar, Component, Preferences, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList, hotkeys = [];\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.selectedDate = $stateParams.day.asDate();\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n\n    _registerHotkeys(hotkeys);\n\n    Preferences.ready().then(function() {\n      _formatDate(vm.selectedDate);\n    });\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', function() {\n      // Destroy event listener when the controller is being deactivated\n      deregisterCalendarsList();\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_today'),\n        description: l('Today'),\n        callback: changeDate,\n        args: new Date()\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_dayview'),\n        description: l('Day'),\n        callback: changeView,\n        args: 'day'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_weekview'),\n        description: l('Week'),\n        callback: changeView,\n        args: 'week'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_monthview'),\n        description: l('Month'),\n        callback: changeView,\n        args: 'month'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_multicolumndayview'),\n        description: l('Multicolumn Day View'),\n        callback: changeView,\n        args: 'multicolumnday'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'left',\n        description: l('Move backward'),\n        callback: _goToPeriod,\n        args: -1\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'right',\n        description: l('Move forward'),\n        callback: _goToPeriod,\n        args: +1\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n\n    function _goToPeriod($event, direction) {\n      var date;\n\n      if ($stateParams.view == 'week') {\n        date = vm.selectedDate.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).addDays(7 * direction);\n      }\n      else if ($stateParams.view == 'month') {\n        date = vm.selectedDate;\n        date.setDate(1);\n        date.setMonth(date.getMonth() + direction);\n      }\n      else {\n        date = vm.selectedDate.addDays(direction);\n      }\n\n      changeDate($event, date);\n    }\n\n    /**\n     * Format a date according to the current view.\n     * - Day/Multicolumn: name of weekday\n     * - Week: week number\n     * - Month: name of month\n     */\n    function _formatDate(date) {\n      if ($stateParams.view == 'month') {\n        date.setDate(1);\n        date.setHours(12);\n        date.$dateFormat = '%B %Y';\n      }\n      else if ($stateParams.view == 'week') {\n        date.setTime(date.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).getTime());\n        date.$dateFormat = l('Week %d').replace('%d', '%U');\n      }\n      else {\n        date.$dateFormat = '%A';\n      }\n    }\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // The list of calendars has changed; update the views\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        var i, j, view;\n        for (i = 0; i < data.length; i++) {\n          view = data[i];\n          if (vm.views[i]) {\n            _.forEach(view.allDayBlocks, function(blocks, day) {\n              vm.views[i].allDayBlocks[day] = blocks;\n            });\n            _.forEach(view.blocks, function(blocks, day) {\n              vm.views[i].blocks[day] = blocks;\n            });\n          }\n          else {\n            vm.views[i] = view;\n          }\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            vm.views[i].calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        }\n        // Remove previous views\n        for (j = vm.views.length; j >= i; j--)\n          vm.views.splice(j, 1);\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event, newDate) {\n      var date = newDate? newDate.getDayString() : angular.element($event.currentTarget).attr('date');\n      if (newDate)\n        _formatDate(newDate);\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView($event, view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$scope', '$timeout', '$state', '$mdDialog', 'sgHotkeys', 'sgFocus', 'Dialog', 'Preferences', 'CalendarSettings', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $scope, $timeout, $state, $mdDialog, sgHotkeys, focus, Dialog, Preferences, CalendarSettings, Calendar, Component) {\n    var vm = this, hotkeys = [];\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.searchMode = searchMode;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n\n    _registerHotkeys(hotkeys);\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true }); // fetch events/tasks lists\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    $scope.$on('$destroy', function() {\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_search'),\n        description: l('Search'),\n        callback: searchMode\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_event'),\n        description: l('Create a new event'),\n        callback: newComponent,\n        args: 'appointment'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_task'),\n        description: l('Create a new task'),\n        callback: newComponent,\n        args: 'task'\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function searchMode() {\n      vm.mode.search = true;\n      focus('search');\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            vm.mode.multiple = 0;\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, type, baseComponent) {\n      var component;\n\n      if (baseComponent) {\n        component = baseComponent;\n      }\n      else {\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, 'appointment', component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == CalendarSettings.ConflictHTTPErrorCode &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    // vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.sortableMode = false;\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      scrollableContainer: '#sidenav-content',\n      containment: 'md-list',\n      orderChanged: _sortableEnd,\n      accept: _sortableAccept\n    };\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    /**\n     * Only allow to sort items within the same list.\n     */\n    function _sortableAccept(sourceItemHandleScope, destSortableScope, destItemScope) {\n      return sourceItemHandleScope.sortableScope.element[0] == destSortableScope.element[0];\n    }\n\n    function _sortableEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableMode = !vm.sortableMode;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch(function() { return vm.calendar.color; }, function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    // function today() {\n    //   var fragments = $window.location.hash.split('/'),\n    //       state = fragments[1],\n    //       view = fragments[2],\n    //       now = new Date(),\n    //       path = ['#', state, view, now.getDayString()];\n    //   $window.location = path.join('/');\n    // }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      return AddressBook.$filterAll($query);\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre ng-bind-html=\"data\"></pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController,\n          locals: { data: data }\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog', 'data'];\n        function ComponentRawSourceDialogController(scope, $mdDialog, data) {\n          scope.data = data;\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'CalendarSettings', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, CalendarSettings, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = false;\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.adjustStartTime = adjustStartTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == CalendarSettings.ConflictHTTPErrorCode &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '         ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, isAllDay, currentDay,\n            start, duration, durationLeft, maxDuration;\n\n        showGhost = false;\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          isAllDay     = scope.block.component.c_isallday;\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              if (!isAllDay)\n                // Show start hour and set the vertical position\n                scope.block.startHour = getStartTime(start);\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n            scope.block.isFirst = true;\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else if (!isAllDay) {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '  <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '       ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '       ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '  <span class=\"secondary\" ng-if=\"'+p+'(!block.component.c_isallday && block.isFirst)\">{{ '+p+'block.component.startHour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, type, isMultiColumn = false;\n\n        view = null;\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        isMultiColumn = (element.attr('sg-view') == 'multicolumndayview');\n\n        // Expose isMultiColumn in the controller\n        // See sgNowLine directive\n        controller.isMultiColumn = isMultiColumn;\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          if (view) {\n            view.$destroy();\n          }\n        });\n\n        function initView() {\n          view = new sgScrollView(element, type);\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * view.quarterHeight;\n                view.element.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n\n          // Expose quarter height to the controller\n          // See sgNowLine directive\n          controller.quarterHeight = view.quarterHeight;\n        }\n\n        /**\n         * sgScrollView\n         */\n        function sgScrollView($element, type) {\n          this.$element = $element;\n          this.element = $element[0];\n          this.type = type;\n          this.quarterHeight = this.getQuarterHeight();\n          this.scrollStep = 6 * this.quarterHeight;\n          this.dayNumbers = this.getDayNumbers();\n          this.maxX = this.getMaxColumns();\n\n          // Listen to dragstart and dragend events\n          this.deregisterDragStart = $rootScope.$on('calendar:dragstart', angular.bind(this, this.onDragStart));\n          this.deregisterDragStop = $rootScope.$on('calendar:dragend', angular.bind(this, this.onDragEnd));\n\n          this.bindedUpdateCoordinates = angular.bind(this, this.updateCoordinates);\n          this.bindedUpdateFromPointerHandler = angular.bind(this, this.updateFromPointerHandler);\n\n          // Compute coordinates of view element; recompute it on window resize\n          this.updateCoordinates();\n          angular.element($window).on('resize', this.bindedUpdateCoordinates);\n        }\n\n        sgScrollView.prototype = {\n\n          $destroy: function() {\n            this.deregisterDragStart();\n            this.deregisterDragStop();\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            angular.element($window).off('resize', this.bindedUpdateCoordinates);\n          },\n\n          onDragStart: function() {\n            this.$element.on('mousemove', this.bindedUpdateFromPointerHandler);\n            this.updateCoordinates();\n            this.updateFromPointerHandler();\n          },\n\n          onDragEnd: function() {\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            Calendar.$view = null;\n          },\n\n          getQuarterHeight: function() {\n            var hour0, hour23, height = null;\n\n            hour0 = document.getElementById('hour0');\n            hour23 = document.getElementById('hour23');\n            if (hour0 && hour23)\n              height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n            return height;\n          },\n\n\n          getDayDimensions: function(viewLeft) {\n            var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n            height = width = leftOffset = topOffset = 0;\n            nodes = this.element.getElementsByClassName('day');\n\n            if (nodes.length > 0) {\n              domRect = nodes[0].getBoundingClientRect();\n              height = domRect.height;\n              width = domRect.width;\n              leftOffset = domRect.left - viewLeft;\n              tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n              if (tileHeader.length > 0)\n                topOffset = tileHeader[0].clientHeight;\n            }\n\n            return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n          },\n\n\n          getDayNumbers: function() {\n            var viewType = null, days, total, sum;\n\n            days = this.element.getElementsByTagName('sg-calendar-day');\n\n            return _.map(days, function(el, index) {\n              if (isMultiColumn)\n                return index;\n              else\n                return parseInt(el.attributes['sg-day-number'].value);\n            });\n          },\n\n\n          getMaxColumns: function() {\n            var mdGridList, max = 0;\n\n            if (this.type == 'monthly') {\n              mdGridList = this.element.getElementsByTagName('md-grid-list')[0];\n              max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n            }\n            else {\n              max = this.element.getElementsByClassName('day').length - 1;\n            }\n\n            return max;\n          },\n\n          // View has been resized;\n          // Compute the view's origins (x, y), a day's dimensions and left margin.\n          updateCoordinates: function() {\n            var domRect, dayDimensions;\n\n            domRect = this.element.getBoundingClientRect();\n            dayDimensions = this.getDayDimensions(domRect.left);\n\n            angular.extend(this, {\n              coordinates: {\n                x: domRect.left,\n                y: domRect.top\n              },\n              dayHeight: dayDimensions.height,\n              dayWidth: dayDimensions.width,\n              daysOffset: dayDimensions.offset.left,\n              topOffset: dayDimensions.offset.top\n            });\n          },\n\n\n          // From SOGoScrollController.updateFromPointerHandler\n          updateFromPointerHandler: function() {\n            var pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n            pointerHandler = Component.$ghost.pointerHandler;\n            if (this.coordinates && pointerHandler) {\n              pointerCoordinates = pointerHandler.getContainerBasedCoordinates(this);\n\n              if (pointerCoordinates) {\n                // Pointer is inside view; Adjust scrollbar if necessary\n                Calendar.$view = this;\n                now = new Date().getTime();\n                if (!this.lastScroll || now > this.lastScroll + 100) {\n                  this.lastScroll = now;\n                  scrollY = pointerCoordinates.y - this.scrollStep;\n                  if (scrollY < 0) {\n                    minY = -this.element.scrollTop;\n                    if (scrollY < minY)\n                      scrollY = minY;\n                    this.element.scrollTop += scrollY;\n                  }\n                  else {\n                    scrollY = pointerCoordinates.y + this.scrollStep;\n                    delta = scrollY - this.element.clientHeight;\n                    if (delta > 0) {\n                      this.element.scrollTop += delta;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n\n        };\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarGhost directive\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCategoryStylesheet - Add CSS stylesheet for a category's color\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {object} ngModel - the object literal describing the category\n   * @example:\n\n    <sg-category-stylesheet\n         ng-repeat=\"category in categories\"\n         ng-model=\"category\" />\n  */\n  function sgCategoryStylesheet() {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      scope: {\n        ngModel: '='\n      },\n      replace: true,\n      template: [\n        '<style type=\"text/css\">',\n        /* Background color */\n        '  .bg-category{{ ngModel.id }} {',\n        '    background-color: {{ ngModel.color }} !important;',\n        '  }',\n        /* Border color */\n        '  .bdr-category{{ ngModel.id }} {',\n        '    border-color: {{ ngModel.color }} !important;',\n        '  }',\n        '</style>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCategoryStylesheet', sgCategoryStylesheet);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable && !scope.block.userState) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        // Don't show grips for blocks of less than 45 minutes\n        if (scope.block.length < 3) return;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n","/* -*- Mode: js; indent-tabs-mode: nil; js-indent-level: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgNowLine - Now line to be displayed on top of current day\n   * @restrict class\n  */\n  function sgNowLine() {\n    return {\n      restrict: 'C',\n      require: '^^sgCalendarScrollView',\n      link: link,\n      controller: sgNowLineController\n    };\n\n    function link(scope, iElement, iAttr, sgCalendarScrollViewCtrl) {\n      function _getDays() {\n        return iElement.find('sg-calendar-day');\n      }\n      function _getView() {\n        return sgCalendarScrollViewCtrl.quarterHeight;\n      }\n\n      // We need to wait for the view to be compiled\n      var _unwatchView = scope.$watch(_getView, function(quarterHeight) {\n        if (quarterHeight) {\n          _unwatchView(); // self release\n          scope.quarterHeight = quarterHeight;\n          // We need to wait for the days to be compiled\n          var _unwatchDays = scope.$watch(_getDays, function(days) {\n            if (days.length) {\n              _unwatchDays(); // self release\n              scope.days = days;\n              // Draw the line\n              scope.updateLine();\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  sgNowLineController.$inject = ['$scope', '$element', '$timeout'];\n  function sgNowLineController($scope, $element, $timeout) {\n    var _this = this, updater,\n        scrollViewCtrl = $element.controller('sgCalendarScrollView');\n\n    $scope.nowDay = null;\n    $scope.lineElement = null;\n    $scope.updateLine = _updateLine;\n\n    $scope.$on('$destroy', function() {\n      if (updater)\n        $timeout.cancel(updater);\n    });\n\n\n    function _updateLine(force) {\n      var now = new Date(), // TODO: adjust to user's timezone\n          nowDay = now.getDayString(),\n          hours = now.getHours(),\n          hourHeight = $scope.quarterHeight * 4,\n          minutes = now.getMinutes(),\n          minuteHeight = $scope.quarterHeight/15,\n          position = parseInt(hours   * hourHeight   +\n                              minutes * minuteHeight -\n                              1);\n\n      if (force || nowDay != $scope.nowDay) {\n        if ($scope.lineElement)\n          $scope.lineElement.remove();\n        $scope.lineElement = _addLine(nowDay, $scope.days);\n        $scope.nowDay = nowDay;\n      }\n\n      if ($scope.lineElement) {\n        // Current day is displayed\n        $scope.lineElement.css('top', position + \"px\");\n        // Update line every minute\n        updater = $timeout(angular.bind(_this, $scope.updateLine), 60000);\n      }\n    }\n\n    function _addLine(nowDay, days) {\n      var $lineElement = angular.element('<sg-now-line>');\n\n      if (scrollViewCtrl.isMultiColumn) {\n        // In multicolumn day view, the line must go over all columns\n        if (days && days[0].attributes['sg-day'].value == nowDay)\n          $element.append($lineElement);\n      }\n      else\n        _.forEach(days, function(dayElement) {\n          if (dayElement.attributes['sg-day'].value == nowDay) {\n            angular.element(dayElement).find('div').eq(0).append($lineElement);\n          }\n        });\n\n      return $lineElement;\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgNowLine', sgNowLine);\n})();\n"]}
{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgCalendarTable.directive.js","Scheduler/sgCategoryStylesheet.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js","Scheduler/sgDroppableBlock.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","$reloadAll","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","calendarData","group","$get","$getIndex","$subscribe","uid","path","userResource","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","download","type","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","Component_STATUS","Card","Gravatar","STATUS","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","constant","NOT_LOADED","DELAYED_LOADING","LOADING","LOADED","DELAYED_MS","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","$isLoading","$loaded","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","categories","block","nbr","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","repeat","alarm","action","quantity","unit","reference","relation","delta","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","classification","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","sendAppointmentNotifications","SOGoAppointmentSendEMailNotifications","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","expandable","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","partstat","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$rootScope","$state","$stateParams","stateEventsBlocks","_formatDate","setHours","$dateFormat","replace","toggleAllDays","expandedAllDays","vm","updateView","asDate","changeDate","$event","newDate","element","currentTarget","attr","go","changeView","deregisterCalendarsList","selectedDate","$on","$inject","controller","CalendarListController","$mdDialog","Dialog","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","$emit","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","focus","User","stateCalendars","_sortableAccept","sourceItemHandleScope","destSortableScope","destItemScope","sortableScope","_sortableEnd","toggleSortableMode","sortableMode","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","service","sortableCalendars","scrollableContainer","containment","orderChanged","accept","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","Account","cardFilter","$filterAll","$cards","newMessageWithAllRecipients","recipients","_newMessage","newMessageWithRecipient","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","removeAttendee","priorityLevel","priority","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","updateStartTime","adjustStartTime","valueOf","oldEndDate","updateEndTime","adjustEndTime","updateDueTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","c_status","clickBlock","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","durationLeft","maxDuration","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","sgScrollView","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","$element","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","onDragStart","deregisterDragStop","onDragEnd","bindedUpdateCoordinates","updateCoordinates","bindedUpdateFromPointerHandler","updateFromPointerHandler","on","$destroy","off","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","isMultiColumn","viewType","attributes","getElementsByTagName","el","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","sgCalendarTable","blocksType","sgCategoryStylesheet","ngModel","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","sgDroppableBlock","onDrop","deregister"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,   // hour quarters\n      EventDragHorizontalOffset: 3  // pixels\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id')).then(function() {\n          // Refresh list of calendars to fetch links associated to new calendar\n          Calendar.$reloadAll();\n        });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Reload the list of known calendars.\n   */\n  Calendar.$reloadAll = function() {\n    var _this = this;\n\n    Calendar.$$resource.fetch('calendarslist').then(function(data) {\n      _.forEach(data.calendars, function(calendarData) {\n        var group, calendar;\n\n        if (calendarData.isWebCalendar)\n          group = _this.$webcalendars;\n        else if (calendarData.isSubscription)\n          group = _this.$subscriptions;\n        else\n          group = _this.$calendars;\n\n        calendar = _.find(group, function(o) { return o.id == calendarData.id; });\n        if (calendar)\n          calendar.init(calendarData);\n      });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, {type: 'application/octet-stream'});\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'sgComponent_STATUS', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Component_STATUS, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      STATUS: Component_STATUS,\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .constant('sgComponent_STATUS', {\n      NOT_LOADED:      0,\n      DELAYED_LOADING: 1,\n      LOADING:         2,\n      LOADED:          3,\n      DELAYED_MS:      300\n    })\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $isLoading\n   * @memberof Component\n   * @returns true if the components list is still being retrieved from server after a specific delay\n   * @see sgMessage_STATUS\n   */\n  Component.$isLoading = function() {\n    return Component.$loaded == Component.STATUS.LOADING;\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        // Filter out categories for which there's no associated color\n        component.categories = _.filter(component.categories, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        });\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    // Components list is not loaded yet\n    Component.$loaded = Component.STATUS.DELAYED_LOADING;\n    Component.$timeout(function() {\n      if (Component.$loaded != Component.STATUS.LOADED)\n        Component.$loaded = Component.STATUS.LOADING;\n    }, Component.STATUS.DELAYED_MS);\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          // Filter out categories for which there's no associated color\n          component.categories = _.filter(component.categories, function(name) {\n            return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n          });\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        Component.$loaded = Component.STATUS.LOADED;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default values\n      Component.$Preferences.ready().then(function() {\n        var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n        // Set default classification\n        _this.classification = Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n\n        // Set default alarm\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n\n        // Set notitifications\n        _this.sendAppointmentNotifications = Component.$Preferences.defaults.SOGoAppointmentSendEMailNotifications;\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList({expandable: true})) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              partstat: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          partstat: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'Calendar', 'Component', 'Preferences', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, Calendar, Component, Preferences, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList;\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.selectedDate = $stateParams.day.asDate();\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n    Preferences.ready().then(function() {\n      _formatDate(vm.selectedDate);\n    });\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    // Destroy event listener when the controller is being deactivated\n    $scope.$on('$destroy', deregisterCalendarsList);\n\n    function _formatDate(date) {\n      if ($stateParams.view == 'month') {\n        date.setDate(1);\n        date.setHours(12);\n        date.$dateFormat = '%B %Y';\n      }\n      else if ($stateParams.view == 'week') {\n        date.setTime(date.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).getTime());\n        date.$dateFormat = l('Week %d').replace('%d', '%U');\n      }\n      else {\n        date.$dateFormat = '%A';\n      }\n    }\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.views = data;\n        _.forEach(vm.views, function(view) {\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            view.calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        });\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event, newDate) {\n      var date = newDate? newDate.getDayString() : angular.element($event.currentTarget).attr('date');\n      if (newDate)\n        _formatDate(newDate);\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView(view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            vm.mode.multiple = 0;\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, type, baseComponent) {\n      var component;\n\n      if (baseComponent) {\n        component = baseComponent;\n      }\n      else {\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, 'appointment', component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == 403 &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    // vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.sortableMode = false;\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      scrollableContainer: '#sidenav-content',\n      containment: 'md-list',\n      orderChanged: _sortableEnd,\n      accept: _sortableAccept\n    };\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    /**\n     * Only allow to sort items within the same list.\n     */\n    function _sortableAccept(sourceItemHandleScope, destSortableScope, destItemScope) {\n      return sourceItemHandleScope.sortableScope.element[0] == destSortableScope.element[0];\n    }\n\n    function _sortableEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableMode = !vm.sortableMode;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch(function() { return vm.calendar.color; }, function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    // function today() {\n    //   var fragments = $window.location.hash.split('/'),\n    //       state = fragments[1],\n    //       view = fragments[2],\n    //       now = new Date(),\n    //       path = ['#', state, view, now.getDayString()];\n    //   $window.location = path.join('/');\n    // }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre ng-bind-html=\"data\"></pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController,\n          locals: { data: data }\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog', 'data'];\n        function ComponentRawSourceDialogController(scope, $mdDialog, data) {\n          scope.data = data;\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = false;\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.updateStartTime = updateStartTime;\n    vm.adjustStartTime = adjustStartTime;\n    vm.updateEndTime = updateEndTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.updateDueTime = updateDueTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == 403 &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateStartTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.start.addMinutes(oldStartDate.getHours() * 60 + oldStartDate.getMinutes());\n      adjustStartTime();\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateEndTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.end.addMinutes(oldEndDate.getHours() * 60 + oldEndDate.getMinutes());\n      adjustEndTime();\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateDueTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.due.addMinutes(oldDueDate.getHours() * 60 + oldDueDate.getMinutes());\n      adjustDueTime();\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"\\'bg-category\\' + category\"',\n        '         ng-style=\"{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, currentDay,\n            start, duration, durationLeft, maxDuration;\n\n        showGhost = false;\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              // Show start hour and set the vertical position\n              scope.block.startHour = getStartTime(start);\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span class=\"secondary\" ng-if=\"'+p+'!block.component.c_isallday\">{{ '+p+'block.starthour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, type;\n\n        view = null;\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          if (view) {\n            view.$destroy();\n          }\n        });\n\n        function initView() {\n          view = new sgScrollView(element, type);\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * view.quarterHeight;\n                view.element.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n        }\n\n        /**\n         * sgScrollView\n         */\n        function sgScrollView($element, type) {\n          this.$element = $element;\n          this.element = $element[0];\n          this.type = type;\n          this.quarterHeight = this.getQuarterHeight();\n          this.scrollStep = 6 * this.quarterHeight;\n          this.dayNumbers = this.getDayNumbers();\n          this.maxX = this.getMaxColumns();\n\n          // Listen to dragstart and dragend events\n          this.deregisterDragStart = $rootScope.$on('calendar:dragstart', angular.bind(this, this.onDragStart));\n          this.deregisterDragStop = $rootScope.$on('calendar:dragend', angular.bind(this, this.onDragEnd));\n\n          this.bindedUpdateCoordinates = angular.bind(this, this.updateCoordinates);\n          this.bindedUpdateFromPointerHandler = angular.bind(this, this.updateFromPointerHandler);\n\n          // Compute coordinates of view element; recompute it on window resize\n          this.updateCoordinates();\n          angular.element($window).on('resize', this.bindedUpdateCoordinates);\n        }\n\n        sgScrollView.prototype = {\n\n          $destroy: function() {\n            this.deregisterDragStart();\n            this.deregisterDragStop();\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            angular.element($window).off('resize', this.bindedUpdateCoordinates);\n          },\n\n          onDragStart: function() {\n            this.$element.on('mousemove', this.bindedUpdateFromPointerHandler);\n            this.updateCoordinates();\n            this.updateFromPointerHandler();\n          },\n\n          onDragEnd: function() {\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            Calendar.$view = null;\n          },\n\n          getQuarterHeight: function() {\n            var hour0, hour23, height = null;\n\n            hour0 = document.getElementById('hour0');\n            hour23 = document.getElementById('hour23');\n            if (hour0 && hour23)\n              height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n            return height;\n          },\n\n\n          getDayDimensions: function(viewLeft) {\n            var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n            height = width = leftOffset = topOffset = 0;\n            nodes = this.element.getElementsByClassName('day');\n\n            if (nodes.length > 0) {\n              domRect = nodes[0].getBoundingClientRect();\n              height = domRect.height;\n              width = domRect.width;\n              leftOffset = domRect.left - viewLeft;\n              tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n              if (tileHeader.length > 0)\n                topOffset = tileHeader[0].clientHeight;\n            }\n\n            return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n          },\n\n\n          getDayNumbers: function() {\n            var viewType = null, isMultiColumn, days, total, sum;\n\n            if (this.element.attributes['sg-view'])\n              viewType = this.element.attributes['sg-view'].value;\n            isMultiColumn = (viewType == 'multicolumndayview');\n            days = this.element.getElementsByTagName('sg-calendar-day');\n\n            return _.map(days, function(el, index) {\n              if (isMultiColumn)\n                return index;\n              else\n                return parseInt(el.attributes['sg-day-number'].value);\n            });\n          },\n\n\n          getMaxColumns: function() {\n            var mdGridList, max = 0;\n\n            if (this.type == 'monthly') {\n              mdGridList = this.element.getElementsByTagName('md-grid-list')[0];\n              max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n            }\n            else {\n              max = this.element.getElementsByClassName('day').length - 1;\n            }\n\n            return max;\n          },\n\n          // View has been resized;\n          // Compute the view's origins (x, y), a day's dimensions and left margin.\n          updateCoordinates: function() {\n            var domRect, dayDimensions;\n\n            domRect = this.element.getBoundingClientRect();\n            dayDimensions = this.getDayDimensions(domRect.left);\n\n            angular.extend(this, {\n              coordinates: {\n                x: domRect.left,\n                y: domRect.top\n              },\n              dayHeight: dayDimensions.height,\n              dayWidth: dayDimensions.width,\n              daysOffset: dayDimensions.offset.left,\n              topOffset: dayDimensions.offset.top\n            });\n          },\n\n\n          // From SOGoScrollController.updateFromPointerHandler\n          updateFromPointerHandler: function() {\n            var pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n            pointerHandler = Component.$ghost.pointerHandler;\n            if (this.coordinates && pointerHandler) {\n              pointerCoordinates = pointerHandler.getContainerBasedCoordinates(this);\n\n              if (pointerCoordinates) {\n                // Pointer is inside view; Adjust scrollbar if necessary\n                Calendar.$view = this;\n                now = new Date().getTime();\n                if (!this.lastScroll || now > this.lastScroll + 100) {\n                  this.lastScroll = now;\n                  scrollY = pointerCoordinates.y - this.scrollStep;\n                  if (scrollY < 0) {\n                    minY = -this.element.scrollTop;\n                    if (scrollY < minY)\n                      scrollY = minY;\n                    this.element.scrollTop += scrollY;\n                  }\n                  else {\n                    scrollY = pointerCoordinates.y + this.scrollStep;\n                    delta = scrollY - this.element.clientHeight;\n                    if (delta > 0) {\n                      this.element.scrollTop += delta;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n\n        };\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarGhost directive\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        calendars: '=sgCalendars',\n        calendar: '@sgCalendar',\n        blocksType: '@sgBlocksType',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-table',\n        '  sg-blocks=\"calendars[calendar][blocksType]\"',\n        '  sg-day=\"day\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarTable', sgCalendarTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCategoryStylesheet - Add CSS stylesheet for a category's color\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {object} ngModel - the object literal describing the category\n   * @example:\n\n    <sg-category-stylesheet\n         ng-repeat=\"category in categories\"\n         ng-model=\"category\" />\n  */\n  function sgCategoryStylesheet() {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      scope: {\n        ngModel: '='\n      },\n      replace: true,\n      template: [\n        '<style type=\"text/css\">',\n        /* Background color */\n        '  .bg-category{{ ngModel.id }} {',\n        '    background-color: {{ ngModel.color }} !important;',\n        '  }',\n        /* Border color */\n        '  .bdr-category{{ ngModel.id }} {',\n        '    border-color: {{ ngModel.color }} !important;',\n        '  }',\n        '</style>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCategoryStylesheet', sgCategoryStylesheet);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable && !scope.block.userState) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   http://www.html5rocks.com/en/tutorials/dnd/basics/\n   https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_and_drop\n\n   <sg-calendar-day-table\n   sg-blocks=\"calendar.blocks\"\n   sg-day=\"20150330\"\n   sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  sgDroppableBlock.$inject = ['$rootScope', '$timeout', '$mdGesture', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDroppableBlock($rootScope, $timeout, $mdGesture, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      scope: {\n        onDrop: '&sgOnDrop'\n      },\n      link: function (scope, element, attrs, controller) {\n        var deregister = $rootScope.$on('calendar:dragend', scope.onDrop);\n        scope.$on('$destroy', deregister);\n      }\n    };\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDroppableBlock', sgDroppableBlock);\n})();\n\n"]}
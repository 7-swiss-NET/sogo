{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","$reloadAll","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","calendarData","group","$get","$getIndex","$subscribe","uid","path","userResource","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","export","download","type","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","Card","Gravatar","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","categories","block","nbr","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","repeat","alarm","action","quantity","unit","reference","relation","delta","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","classification","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","sendAppointmentNotifications","SOGoAppointmentSendEMailNotifications","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","expandable","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","partstat","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$rootScope","$state","$stateParams","stateEventsBlocks","_formatDate","setHours","$dateFormat","replace","toggleAllDays","expandedAllDays","vm","updateView","asDate","changeDate","$event","newDate","element","currentTarget","attr","go","changeView","deregisterCalendarsList","selectedDate","$on","$inject","controller","CalendarListController","$mdDialog","Dialog","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","$emit","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","finally","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","focus","User","stateCalendars","_sortableAccept","sourceItemHandleScope","destSortableScope","destItemScope","sortableScope","_sortableEnd","toggleSortableMode","sortableMode","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","catch","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","service","sortableCalendars","scrollableContainer","containment","orderChanged","accept","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","Account","cardFilter","$filterAll","$cards","newMessageWithAllRecipients","recipients","_newMessage","newMessageWithRecipient","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","removeAttendee","priorityLevel","priority","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","updateStartTime","adjustStartTime","valueOf","oldEndDate","updateEndTime","adjustEndTime","updateDueTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","c_status","clickBlock","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","wasOtherBlock","durationLeft","maxDuration","enableTransition","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","sgScrollView","on","updateCoordinates","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","onDragStart","updateFromPointerHandler","onDragEnd","off","$element","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","deregisterDragStop","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","isMultiColumn","viewType","attributes","getElementsByTagName","el","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,   // hour quarters\n      EventDragHorizontalOffset: 3  // pixels\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id')).then(function() {\n          // Refresh list of calendars to fetch links associated to new calendar\n          Calendar.$reloadAll();\n        });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Reload the list of known calendars.\n   */\n  Calendar.$reloadAll = function() {\n    var _this = this;\n\n    Calendar.$$resource.fetch('calendarslist').then(function(data) {\n      _.forEach(data.calendars, function(calendarData) {\n        var group, calendar;\n\n        if (calendarData.isWebCalendar)\n          group = _this.$webcalendars;\n        else if (calendarData.isSubscription)\n          group = _this.$subscriptions;\n        else\n          group = _this.$calendars;\n\n        calendar = _.find(group, function(o) { return o.id == calendarData.id; });\n        if (calendar)\n          calendar.init(calendarData);\n      });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, {type: 'application/octet-stream'});\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        // Filter out categories for which there's no associated color\n        component.categories = _.filter(component.categories, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        });\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          // Filter out categories for which there's no associated color\n          component.categories = _.filter(component.categories, function(name) {\n            return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n          });\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default values\n      Component.$Preferences.ready().then(function() {\n        var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n        // Set default classification\n        _this.classification = Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n\n        // Set default alarm\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n\n        // Set notitifications\n        _this.sendAppointmentNotifications = Component.$Preferences.defaults.SOGoAppointmentSendEMailNotifications;\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList({expandable: true})) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              partstat: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          partstat: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'Calendar', 'Component', 'Preferences', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, Calendar, Component, Preferences, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList;\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.selectedDate = $stateParams.day.asDate();\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n    Preferences.ready().then(function() {\n      _formatDate(vm.selectedDate);\n    });\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    // Destroy event listener when the controller is being deactivated\n    $scope.$on('$destroy', deregisterCalendarsList);\n\n    function _formatDate(date) {\n      if ($stateParams.view == 'month') {\n        date.setDate(1);\n        date.setHours(12);\n        date.$dateFormat = '%B %Y';\n      }\n      else if ($stateParams.view == 'week') {\n        date.setTime(date.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).getTime());\n        date.$dateFormat = l('Week %d').replace('%d', '%U');\n      }\n      else {\n        date.$dateFormat = '%A';\n      }\n    }\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.views = data;\n        _.forEach(vm.views, function(view) {\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            view.calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        });\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event, newDate) {\n      var date = newDate? newDate.getDayString() : angular.element($event.currentTarget).attr('date');\n      if (newDate)\n        _formatDate(newDate);\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView(view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            vm.mode.multiple = 0;\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, type, baseComponent) {\n      var component;\n\n      if (baseComponent) {\n        component = baseComponent;\n      }\n      else {\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, 'appointment', component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == 403 &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    // vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.sortableMode = false;\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      scrollableContainer: '#sidenav-content',\n      containment: 'md-list',\n      orderChanged: _sortableEnd,\n      accept: _sortableAccept\n    };\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    /**\n     * Only allow to sort items within the same list.\n     */\n    function _sortableAccept(sourceItemHandleScope, destSortableScope, destItemScope) {\n      return sourceItemHandleScope.sortableScope.element[0] == destSortableScope.element[0];\n    }\n\n    function _sortableEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableMode = !vm.sortableMode;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch(function() { return vm.calendar.color; }, function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    // function today() {\n    //   var fragments = $window.location.hash.split('/'),\n    //       state = fragments[1],\n    //       view = fragments[2],\n    //       now = new Date(),\n    //       path = ['#', state, view, now.getDayString()];\n    //   $window.location = path.join('/');\n    // }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre ng-bind-html=\"data\"></pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController,\n          locals: { data: data }\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog', 'data'];\n        function ComponentRawSourceDialogController(scope, $mdDialog, data) {\n          scope.data = data;\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = false;\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.updateStartTime = updateStartTime;\n    vm.adjustStartTime = adjustStartTime;\n    vm.updateEndTime = updateEndTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.updateDueTime = updateDueTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == 403 &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateStartTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.start.addMinutes(oldStartDate.getHours() * 60 + oldStartDate.getMinutes());\n      adjustStartTime();\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateEndTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.end.addMinutes(oldEndDate.getHours() * 60 + oldEndDate.getMinutes());\n      adjustEndTime();\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateDueTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.due.addMinutes(oldDueDate.getHours() * 60 + oldDueDate.getMinutes());\n      adjustDueTime();\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"\\'bg-category\\' + category\"',\n        '         ng-style=\"{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, currentDay, wasOtherBlock,\n            start, duration, durationLeft, maxDuration, enableTransition;\n\n        showGhost = false;\n        enableTransition = function() {\n          iElement.removeClass('sg-event--notransition');\n        };\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              // Show start hour and set the vertical position\n              scope.block.startHour = getStartTime(start);\n              wasOtherBlock = parseInt(iElement.css('top')) === 0;\n              if (wasOtherBlock)\n                iElement.addClass('sg-event--notransition');\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n              if (wasOtherBlock)\n                $timeout(enableTransition);\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                wasOtherBlock = parseInt(iElement.css('top')) !== 0;\n                if (wasOtherBlock)\n                  iElement.addClass('sg-event--notransition');\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n                if (wasOtherBlock)\n                  $timeout(enableTransition);\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span class=\"secondary\" ng-if=\"'+p+'!block.component.c_isallday\">{{ '+p+'block.starthour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, type, deregisterDragStart, deregisterDragStop;\n\n        view = null;\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n\n        // Listen to dragstart and dragend events\n        deregisterDragStart = $rootScope.$on('calendar:dragstart', onDragStart);\n        deregisterDragStop = $rootScope.$on('calendar:dragend', onDragEnd);\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          deregisterDragStart();\n          deregisterDragStop();\n          if (view) {\n            element.off('mouseover', view.updateFromPointerHandler);\n            angular.element($window).off('resize', view.updateCoordinates);\n          }\n        });\n\n        function initView() {\n          view = new sgScrollView(element, type);\n\n          // Compute coordinates of view element; recompute it on window resize\n          angular.element($window).on('resize', view.updateCoordinates);\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * view.quarterHeight;\n                view.element.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n        }\n\n        function onDragStart() {\n          if (view) {\n            element.on('mouseover', view.updateFromPointerHandler);\n            view.updateCoordinates();\n            view.updateFromPointerHandler();\n          }\n        }\n\n        function onDragEnd() {\n          element.off('mouseover', view.updateFromPointerHandler);\n          Calendar.$view = null;\n        }\n\n        /**\n         * sgScrollView\n         */\n        function sgScrollView($element, type) {\n          this.$element = $element;\n          this.element = $element[0];\n          this.type = type;\n          this.quarterHeight = this.getQuarterHeight();\n          this.scrollStep = 6 * this.quarterHeight;\n          this.dayNumbers = this.getDayNumbers();\n          this.maxX = this.getMaxColumns();\n\n          this.updateCoordinates();\n        }\n\n        sgScrollView.prototype = {\n\n\n          getQuarterHeight: function() {\n            var hour0, hour23, height = null;\n\n            hour0 = document.getElementById('hour0');\n            hour23 = document.getElementById('hour23');\n            if (hour0 && hour23)\n              height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n            return height;\n          },\n\n\n          getDayDimensions: function(viewLeft) {\n            var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n            height = width = leftOffset = topOffset = 0;\n            nodes = this.element.getElementsByClassName('day');\n\n            if (nodes.length > 0) {\n              domRect = nodes[0].getBoundingClientRect();\n              height = domRect.height;\n              width = domRect.width;\n              leftOffset = domRect.left - viewLeft;\n              tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n              if (tileHeader.length > 0)\n                topOffset = tileHeader[0].clientHeight;\n            }\n\n            return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n          },\n\n\n          getDayNumbers: function() {\n            var viewType = null, isMultiColumn, days, total, sum;\n\n            if (this.element.attributes['sg-view'])\n              viewType = this.element.attributes['sg-view'].value;\n            isMultiColumn = (viewType == 'multicolumndayview');\n            days = this.element.getElementsByTagName('sg-calendar-day');\n\n            return _.map(days, function(el, index) {\n              if (isMultiColumn)\n                return index;\n              else\n                return parseInt(el.attributes['sg-day-number'].value);\n            });\n          },\n\n\n          getMaxColumns: function() {\n            var mdGridList, max = 0;\n\n            if (this.type == 'monthly') {\n              mdGridList = this.element.getElementsByTagName('md-grid-list')[0];\n              max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n            }\n            else {\n              max = this.element.getElementsByClassName('day').length - 1;\n            }\n\n            return max;\n          },\n\n          // View has been resized;\n          // Compute the view's origins (x, y), a day's dimensions and left margin.\n          updateCoordinates: function() {\n            var domRect, dayDimensions;\n\n            domRect = this.element.getBoundingClientRect();\n            dayDimensions = this.getDayDimensions(domRect.left);\n\n            angular.extend(this, {\n              coordinates: {\n                x: domRect.left,\n                y: domRect.top\n              },\n              dayHeight: dayDimensions.height,\n              dayWidth: dayDimensions.width,\n              daysOffset: dayDimensions.offset.left,\n              topOffset: dayDimensions.offset.top\n            });\n          },\n\n\n          // From SOGoScrollController.updateFromPointerHandler\n          updateFromPointerHandler: function() {\n            var scrollStep, pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n            pointerHandler = Component.$ghost.pointerHandler;\n            if (this.coordinates && pointerHandler) {\n              scrollStep = this.scrollStep;\n              pointerCoordinates = pointerHandler.getContainerBasedCoordinates(this);\n\n              if (pointerCoordinates) {\n                // Pointer is inside view; Adjust scrollbar if necessary\n                Calendar.$view = this;\n                now = new Date().getTime();\n                if (!this.lastScroll || now > this.lastScroll + 100) {\n                  this.lastScroll = now;\n                  scrollY = pointerCoordinates.y - scrollStep;\n                  if (scrollY < 0) {\n                    minY = -this.element.scrollTop;\n                    if (scrollY < minY)\n                      scrollY = minY;\n                    this.element.scrollTop += scrollY;\n                  }\n                  else {\n                    scrollY = pointerCoordinates.y + scrollStep;\n                    delta = scrollY - this.element.clientHeight;\n                    if (delta > 0) {\n                      this.element.scrollTop += delta;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n\n        };\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarGhost directive\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n"]}
{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgCategoryStylesheet.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js","Scheduler/sgNowLine.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","ConflictHTTPErrorCode","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","$reloadAll","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","calendarData","group","owner","login","$get","$getIndex","$subscribe","uid","path","userResource","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","export","options","type","filename","download","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","$rootScope","Component_STATUS","Card","Gravatar","STATUS","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","constant","NOT_LOADED","DELAYED_LOADING","LOADING","LOADED","DELAYED_MS","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$emit","timeInterval","$isLoading","$loaded","$filter","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","categories","block","nbr","isFirst","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","repeat","alarm","action","quantity","unit","reference","relation","delta","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","classification","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","sendAppointmentNotifications","SOGoAppointmentSendEMailNotifications","destinationCalendar","attendees","attendee","image","email","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","updateFreeBusyAttendee","resource","domain","sday","eday","isMSExchange","c_folder","addAttendee","card","$isList","expandable","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","partstat","c_uid","$avatarIcon","c_domain","ismsexchange","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$state","$stateParams","sgHotkeys","stateEventsBlocks","_registerHotkeys","createHotkey","description","callback","changeDate","args","changeView","_goToPeriod","registerHotkey","$event","direction","vm","selectedDate","_formatDate","setHours","$dateFormat","replace","toggleAllDays","expandedAllDays","updateView","asDate","newDate","element","currentTarget","attr","go","deregisterCalendarsList","hotkeys","$on","deregisterHotkey","$inject","controller","CalendarListController","$mdDialog","focus","Dialog","CalendarSettings","Alarm","searchMode","newComponent","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","finally","getDelta","originalEventCoordinates","originalCalendar","isException","getAlarms","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","User","stateCalendars","_sortableAccept","sourceItemHandleScope","destSortableScope","destItemScope","sortableScope","_sortableEnd","toggleSortableMode","sortableMode","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","catch","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","service","sortableCalendars","scrollableContainer","containment","orderChanged","accept","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Account","cardFilter","$filterAll","newMessageWithAllRecipients","recipients","_newMessage","newMessageWithRecipient","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","c","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","$cards","isValidEmail","searchText","removeAttendee","$setDirty","priorityLevel","priority","attendeeConflictError","reset","$setPristine","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","adjustStartTime","valueOf","oldEndDate","adjustEndTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","c_status","clickBlock","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","durationLeft","maxDuration","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","sgScrollView","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","$element","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","onDragStart","deregisterDragStop","onDragEnd","bindedUpdateCoordinates","updateCoordinates","bindedUpdateFromPointerHandler","updateFromPointerHandler","on","isMultiColumn","$destroy","off","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","getElementsByTagName","el","attributes","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","sgCategoryStylesheet","ngModel","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","sgNowLine","iAttr","sgCalendarScrollViewCtrl","_getDays","_getView","_unwatchView","_unwatchDays","updateLine","sgNowLineController","_updateLine","force","nowDay","hourHeight","minuteHeight","lineElement","_addLine","updater","$lineElement","dayElement","eq"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength:          24 * 4,   // hour quarters\n      EventDragHorizontalOffset:   3,        // pixels\n      ConflictHTTPErrorCode:       409\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    });\n    // Refresh list of calendars to fetch links associated to new calendar\n    Calendar.$reloadAll();\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Reload the list of known calendars.\n   */\n  Calendar.$reloadAll = function() {\n    var _this = this;\n\n    Calendar.$$resource.fetch('calendarslist').then(function(data) {\n      _.forEach(data.calendars, function(calendarData) {\n        var group, calendar;\n\n        if (calendarData.isWebCalendar)\n          group = _this.$webcalendars;\n        else if (calendarData.owner != Calendar.activeUser.login)\n          group = _this.$subscriptions;\n        else\n          group = _this.$calendars;\n\n        calendar = _.find(group, function(o) { return o.id == calendarData.id; });\n        if (calendar)\n          calendar.init(calendarData);\n      });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    var options;\n\n    options = {\n      type: 'application/octet-stream',\n      filename: this.name + '.ics'\n    };\n\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, options);\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', '$rootScope', 'sgSettings', 'sgComponent_STATUS', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, $rootScope, Settings, Component_STATUS, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      STATUS: Component_STATUS,\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $rootScope: $rootScope,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .constant('sgComponent_STATUS', {\n      NOT_LOADED:      0,\n      DELAYED_LOADING: 1,\n      LOADING:         2,\n      LOADED:          3,\n      DELAYED_MS:      300\n    })\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected list (events or tasks) and\n   * current view.\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(Component.$rootScope, Component.$rootScope.$emit, 'calendars:list');\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $isLoading\n   * @memberof Component\n   * @returns true if the components list is still being retrieved from server after a specific delay\n   * @see sgMessage_STATUS\n   */\n  Component.$isLoading = function() {\n    return Component.$loaded == Component.STATUS.LOADING;\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      if (dirty) {\n        otherType = (type == 'tasks')? '$events' : '$tasks';\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        // Filter out categories for which there's no associated color\n        component.categories = _.filter(component.categories, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        });\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n        block.isFirst = (this[block.nbr].blocks.length == 1);\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    // Components list is not loaded yet\n    Component.$loaded = Component.STATUS.DELAYED_LOADING;\n    Component.$timeout(function() {\n      if (Component.$loaded != Component.STATUS.LOADED)\n        Component.$loaded = Component.STATUS.LOADING;\n    }, Component.STATUS.DELAYED_MS);\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          // Filter out categories for which there's no associated color\n          component.categories = _.filter(component.categories, function(name) {\n            return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n          });\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        Component.$loaded = Component.STATUS.LOADED;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      if (angular.isString(this.repeat.until))\n        this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default values\n      Component.$Preferences.ready().then(function() {\n        var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n        // Set default classification\n        _this.classification = Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n\n        // Set default alarm\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n\n        // Set notitifications\n        _this.sendAppointmentNotifications = Component.$Preferences.defaults.SOGoAppointmentSendEMailNotifications;\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n      });\n\n      // Load freebusy of attendees\n      this.updateFreeBusy();\n    }\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var resource, uid, params, days;\n\n    if (attendee.uid) {\n      uid = attendee.uid;\n      if (attendee.domain)\n        uid += '@' + attendee.domain;\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n\n      if (attendee.isMSExchange) {\n        // Attendee is not a local user, but her freebusy data is available from an external MS Exchange server;\n        // we query /SOGo/so/<login_user>/freebusy.ifb/ajaxRead?uid=<uid>\n        resource = Component.$$resource.userResource();\n        params.uid = uid;\n      }\n      else {\n        // Attendee is a user;\n        // web query /SOGo/so/<uid>/freebusy.ifb/ajaxRead\n        resource = Component.$$resource.userResource(uid);\n      }\n\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      resource.fetch('freebusy.ifb', 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList({expandable: true})) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              partstat: 'needs-action',\n              uid: ref.c_uid,\n              $avatarIcon: 'person',\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          uid: card.c_uid,\n          domain: card.c_domain,\n          isMSExchange: card.ismsexchange,\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          partstat: 'needs-action',\n          $avatarIcon: card.$avatarIcon\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.hasCustomRepeat()) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (component.startDate && this.repeat.frequency && this.repeat.frequency != 'never') {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (component.startDate && this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint loopfunc: true */\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'sgHotkeys', 'Calendar', 'Component', 'Preferences', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, sgHotkeys, Calendar, Component, Preferences, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList, hotkeys = [];\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.selectedDate = $stateParams.day.asDate();\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n\n    _registerHotkeys(hotkeys);\n\n    Preferences.ready().then(function() {\n      _formatDate(vm.selectedDate);\n    });\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', function() {\n      // Destroy event listener when the controller is being deactivated\n      deregisterCalendarsList();\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_today'),\n        description: l('Today'),\n        callback: changeDate,\n        args: new Date()\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_dayview'),\n        description: l('Day'),\n        callback: changeView,\n        args: 'day'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_weekview'),\n        description: l('Week'),\n        callback: changeView,\n        args: 'week'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_monthview'),\n        description: l('Month'),\n        callback: changeView,\n        args: 'month'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_multicolumndayview'),\n        description: l('Multicolumn Day View'),\n        callback: changeView,\n        args: 'multicolumnday'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'left',\n        description: l('Move backward'),\n        callback: _goToPeriod,\n        args: -1\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: 'right',\n        description: l('Move forward'),\n        callback: _goToPeriod,\n        args: +1\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n\n    function _goToPeriod($event, direction) {\n      var date;\n\n      if ($stateParams.view == 'week') {\n        date = vm.selectedDate.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).addDays(7 * direction);\n      }\n      else if ($stateParams.view == 'month') {\n        date = vm.selectedDate;\n        date.setDate(1);\n        date.setMonth(date.getMonth() + direction);\n      }\n      else {\n        date = vm.selectedDate.addDays(direction);\n      }\n\n      changeDate($event, date);\n    }\n\n    /**\n     * Format a date according to the current view.\n     * - Day/Multicolumn: name of weekday\n     * - Week: week number\n     * - Month: name of month\n     */\n    function _formatDate(date) {\n      if ($stateParams.view == 'month') {\n        date.setDate(1);\n        date.setHours(12);\n        date.$dateFormat = '%B %Y';\n      }\n      else if ($stateParams.view == 'week') {\n        date.setTime(date.beginOfWeek(Preferences.defaults.SOGoFirstDayOfWeek).getTime());\n        date.$dateFormat = l('Week %d').replace('%d', '%U');\n      }\n      else {\n        date.$dateFormat = '%A';\n      }\n    }\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // The list of calendars has changed; update the views\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        var i, j, view;\n        for (i = 0; i < data.length; i++) {\n          view = data[i];\n          if (vm.views[i]) {\n            _.forEach(view.allDayBlocks, function(blocks, day) {\n              vm.views[i].allDayBlocks[day] = blocks;\n            });\n            _.forEach(view.blocks, function(blocks, day) {\n              vm.views[i].blocks[day] = blocks;\n            });\n          }\n          else {\n            vm.views[i] = view;\n          }\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            vm.views[i].calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        }\n        // Remove previous views\n        for (j = vm.views.length; j >= i; j--)\n          vm.views.splice(j, 1);\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event, newDate) {\n      var date = newDate? newDate.getDayString() : angular.element($event.currentTarget).attr('date');\n      if (newDate)\n        _formatDate(newDate);\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView($event, view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$scope', '$timeout', '$state', '$mdDialog', 'sgHotkeys', 'sgFocus', 'Dialog', 'Preferences', 'CalendarSettings', 'Calendar', 'Component', 'Alarm'];\n  function CalendarListController($rootScope, $scope, $timeout, $state, $mdDialog, sgHotkeys, focus, Dialog, Preferences, CalendarSettings, Calendar, Component, Alarm) {\n    var vm = this, hotkeys = [];\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.searchMode = searchMode;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n\n    _registerHotkeys(hotkeys);\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true }); // fetch events/tasks lists\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    $scope.$on('$destroy', function() {\n      // Deregister hotkeys\n      _.forEach(hotkeys, function(key) {\n        sgHotkeys.deregisterHotkey(key);\n      });\n    });\n\n\n    function _registerHotkeys(keys) {\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_search'),\n        description: l('Search'),\n        callback: searchMode\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_event'),\n        description: l('Create a new event'),\n        callback: newComponent,\n        args: 'appointment'\n      }));\n      keys.push(sgHotkeys.createHotkey({\n        key: l('hotkey_create_task'),\n        description: l('Create a new task'),\n        callback: newComponent,\n        args: 'task'\n      }));\n\n      // Register the hotkeys\n      _.forEach(keys, function(key) {\n        sgHotkeys.registerHotkey(key);\n      });\n    }\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function searchMode() {\n      vm.mode.search = true;\n      focus('search');\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            vm.mode.multiple = 0;\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, type, baseComponent) {\n      var component;\n\n      if (baseComponent) {\n        component = baseComponent;\n      }\n      else {\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, 'appointment', component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n            Alarm.getAlarms();\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == CalendarSettings.ConflictHTTPErrorCode &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    // vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.sortableMode = false;\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      scrollableContainer: '#sidenav-content',\n      containment: 'md-list',\n      orderChanged: _sortableEnd,\n      accept: _sortableAccept\n    };\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    /**\n     * Only allow to sort items within the same list.\n     */\n    function _sortableAccept(sourceItemHandleScope, destSortableScope, destItemScope) {\n      return sourceItemHandleScope.sortableScope.element[0] == destSortableScope.element[0];\n    }\n\n    function _sortableEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableMode = !vm.sortableMode;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch(function() { return vm.calendar.color; }, function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    // function today() {\n    //   var fragments = $window.location.hash.split('/'),\n    //       state = fragments[1],\n    //       view = fragments[2],\n    //       now = new Date(),\n    //       path = ['#', state, view, now.getDayString()];\n    //   $window.location = path.join('/');\n    // }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      return AddressBook.$filterAll($query);\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre ng-bind-html=\"data\"></pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController,\n          locals: { data: data }\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog', 'data'];\n        function ComponentRawSourceDialogController(scope, $mdDialog, data) {\n          scope.data = data;\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'CalendarSettings', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, CalendarSettings, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = false;\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.reset = reset;\n    vm.cancel = cancel;\n    vm.edit = edit;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.adjustStartTime = adjustStartTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee, form) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n      form.$setDirty();\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            Alarm.getAlarms();\n            $mdDialog.hide();\n          }, function(response) {\n            if (response.status == CalendarSettings.ConflictHTTPErrorCode)\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function reset(form) {\n      vm.component.$reset();\n      form.$setPristine();\n    }\n\n    function cancel(form) {\n      reset(form);\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function edit(form) {\n      vm.attendeeConflictError = false;\n      form.$setPristine();\n      form.$setDirty();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '         ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, isAllDay, currentDay,\n            start, duration, durationLeft, maxDuration;\n\n        showGhost = false;\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          isAllDay     = scope.block.component.c_isallday;\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              if (!isAllDay)\n                // Show start hour and set the vertical position\n                scope.block.startHour = getStartTime(start);\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n            scope.block.isFirst = true;\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else if (!isAllDay) {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '  <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '       ng-class=\"'+p+'(\\'bg-category\\' + category)\"',\n        '       ng-style=\"'+p+'{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '  <span class=\"secondary\" ng-if=\"'+p+'(!block.component.c_isallday && block.isFirst)\">{{ '+p+'block.component.startHour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n\n          // Add class for cancelled event\n          if (scope.block.component.c_status === 0)\n            iElement.addClass('sg-event--cancelled');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, type, isMultiColumn = false;\n\n        view = null;\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        isMultiColumn = (element.attr('sg-view') == 'multicolumndayview');\n\n        // Expose isMultiColumn in the controller\n        // See sgNowLine directive\n        controller.isMultiColumn = isMultiColumn;\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          if (view) {\n            view.$destroy();\n          }\n        });\n\n        function initView() {\n          view = new sgScrollView(element, type);\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * view.quarterHeight;\n                view.element.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n\n          // Expose quarter height to the controller\n          // See sgNowLine directive\n          controller.quarterHeight = view.quarterHeight;\n        }\n\n        /**\n         * sgScrollView\n         */\n        function sgScrollView($element, type) {\n          this.$element = $element;\n          this.element = $element[0];\n          this.type = type;\n          this.quarterHeight = this.getQuarterHeight();\n          this.scrollStep = 6 * this.quarterHeight;\n          this.dayNumbers = this.getDayNumbers();\n          this.maxX = this.getMaxColumns();\n\n          // Listen to dragstart and dragend events\n          this.deregisterDragStart = $rootScope.$on('calendar:dragstart', angular.bind(this, this.onDragStart));\n          this.deregisterDragStop = $rootScope.$on('calendar:dragend', angular.bind(this, this.onDragEnd));\n\n          this.bindedUpdateCoordinates = angular.bind(this, this.updateCoordinates);\n          this.bindedUpdateFromPointerHandler = angular.bind(this, this.updateFromPointerHandler);\n\n          // Compute coordinates of view element; recompute it on window resize\n          this.updateCoordinates();\n          angular.element($window).on('resize', this.bindedUpdateCoordinates);\n        }\n\n        sgScrollView.prototype = {\n\n          $destroy: function() {\n            this.deregisterDragStart();\n            this.deregisterDragStop();\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            angular.element($window).off('resize', this.bindedUpdateCoordinates);\n          },\n\n          onDragStart: function() {\n            this.$element.on('mousemove', this.bindedUpdateFromPointerHandler);\n            this.updateCoordinates();\n            this.updateFromPointerHandler();\n          },\n\n          onDragEnd: function() {\n            this.$element.off('mousemove', this.bindedUpdateFromPointerHandler);\n            Calendar.$view = null;\n          },\n\n          getQuarterHeight: function() {\n            var hour0, hour23, height = null;\n\n            hour0 = document.getElementById('hour0');\n            hour23 = document.getElementById('hour23');\n            if (hour0 && hour23)\n              height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n            return height;\n          },\n\n\n          getDayDimensions: function(viewLeft) {\n            var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n            height = width = leftOffset = topOffset = 0;\n            nodes = this.element.getElementsByClassName('day');\n\n            if (nodes.length > 0) {\n              domRect = nodes[0].getBoundingClientRect();\n              height = domRect.height;\n              width = domRect.width;\n              leftOffset = domRect.left - viewLeft;\n              tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n              if (tileHeader.length > 0)\n                topOffset = tileHeader[0].clientHeight;\n            }\n\n            return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n          },\n\n\n          getDayNumbers: function() {\n            var viewType = null, days, total, sum;\n\n            days = this.element.getElementsByTagName('sg-calendar-day');\n\n            return _.map(days, function(el, index) {\n              if (isMultiColumn)\n                return index;\n              else\n                return parseInt(el.attributes['sg-day-number'].value);\n            });\n          },\n\n\n          getMaxColumns: function() {\n            var mdGridList, max = 0;\n\n            if (this.type == 'monthly') {\n              mdGridList = this.element.getElementsByTagName('md-grid-list')[0];\n              max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n            }\n            else {\n              max = this.element.getElementsByClassName('day').length - 1;\n            }\n\n            return max;\n          },\n\n          // View has been resized;\n          // Compute the view's origins (x, y), a day's dimensions and left margin.\n          updateCoordinates: function() {\n            var domRect, dayDimensions;\n\n            domRect = this.element.getBoundingClientRect();\n            dayDimensions = this.getDayDimensions(domRect.left);\n\n            angular.extend(this, {\n              coordinates: {\n                x: domRect.left,\n                y: domRect.top\n              },\n              dayHeight: dayDimensions.height,\n              dayWidth: dayDimensions.width,\n              daysOffset: dayDimensions.offset.left,\n              topOffset: dayDimensions.offset.top\n            });\n          },\n\n\n          // From SOGoScrollController.updateFromPointerHandler\n          updateFromPointerHandler: function() {\n            var pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n            pointerHandler = Component.$ghost.pointerHandler;\n            if (this.coordinates && pointerHandler) {\n              pointerCoordinates = pointerHandler.getContainerBasedCoordinates(this);\n\n              if (pointerCoordinates) {\n                // Pointer is inside view; Adjust scrollbar if necessary\n                Calendar.$view = this;\n                now = new Date().getTime();\n                if (!this.lastScroll || now > this.lastScroll + 100) {\n                  this.lastScroll = now;\n                  scrollY = pointerCoordinates.y - this.scrollStep;\n                  if (scrollY < 0) {\n                    minY = -this.element.scrollTop;\n                    if (scrollY < minY)\n                      scrollY = minY;\n                    this.element.scrollTop += scrollY;\n                  }\n                  else {\n                    scrollY = pointerCoordinates.y + this.scrollStep;\n                    delta = scrollY - this.element.clientHeight;\n                    if (delta > 0) {\n                      this.element.scrollTop += delta;\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n\n        };\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarGhost directive\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCategoryStylesheet - Add CSS stylesheet for a category's color\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {object} ngModel - the object literal describing the category\n   * @example:\n\n    <sg-category-stylesheet\n         ng-repeat=\"category in categories\"\n         ng-model=\"category\" />\n  */\n  function sgCategoryStylesheet() {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      scope: {\n        ngModel: '='\n      },\n      replace: true,\n      template: [\n        '<style type=\"text/css\">',\n        /* Background color */\n        '  .bg-category{{ ngModel.id }} {',\n        '    background-color: {{ ngModel.color }} !important;',\n        '  }',\n        /* Border color */\n        '  .bdr-category{{ ngModel.id }} {',\n        '    border-color: {{ ngModel.color }} !important;',\n        '  }',\n        '</style>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCategoryStylesheet', sgCategoryStylesheet);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable && !scope.block.userState) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        // Don't show grips for blocks of less than 45 minutes\n        if (scope.block.length < 3) return;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n","/* -*- Mode: js; indent-tabs-mode: nil; js-indent-level: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgNowLine - Now line to be displayed on top of current day\n   * @restrict class\n  */\n  function sgNowLine() {\n    return {\n      restrict: 'C',\n      require: '^^sgCalendarScrollView',\n      link: link,\n      controller: sgNowLineController\n    };\n\n    function link(scope, iElement, iAttr, sgCalendarScrollViewCtrl) {\n      function _getDays() {\n        return iElement.find('sg-calendar-day');\n      }\n      function _getView() {\n        return sgCalendarScrollViewCtrl.quarterHeight;\n      }\n\n      // We need to wait for the view to be compiled\n      var _unwatchView = scope.$watch(_getView, function(quarterHeight) {\n        if (quarterHeight) {\n          _unwatchView(); // self release\n          scope.quarterHeight = quarterHeight;\n          // We need to wait for the days to be compiled\n          var _unwatchDays = scope.$watch(_getDays, function(days) {\n            if (days.length) {\n              _unwatchDays(); // self release\n              scope.days = days;\n              // Draw the line\n              scope.updateLine();\n            }\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  sgNowLineController.$inject = ['$scope', '$element', '$timeout'];\n  function sgNowLineController($scope, $element, $timeout) {\n    var _this = this, updater,\n        scrollViewCtrl = $element.controller('sgCalendarScrollView');\n\n    $scope.nowDay = null;\n    $scope.lineElement = null;\n    $scope.updateLine = _updateLine;\n\n    $scope.$on('$destroy', function() {\n      if (updater)\n        $timeout.cancel(updater);\n    });\n\n\n    function _updateLine(force) {\n      var now = new Date(), // TODO: adjust to user's timezone\n          nowDay = now.getDayString(),\n          hours = now.getHours(),\n          hourHeight = $scope.quarterHeight * 4,\n          minutes = now.getMinutes(),\n          minuteHeight = $scope.quarterHeight/15,\n          position = parseInt(hours   * hourHeight   +\n                              minutes * minuteHeight -\n                              1);\n\n      if (force || nowDay != $scope.nowDay) {\n        if ($scope.lineElement)\n          $scope.lineElement.remove();\n        $scope.lineElement = _addLine(nowDay, $scope.days);\n        $scope.nowDay = nowDay;\n      }\n\n      if ($scope.lineElement) {\n        // Current day is displayed\n        $scope.lineElement.css('top', position + \"px\");\n        // Update line every minute\n        updater = $timeout(angular.bind(_this, $scope.updateLine), 60000);\n      }\n    }\n\n    function _addLine(nowDay, days) {\n      var $lineElement = angular.element('<sg-now-line>');\n\n      if (scrollViewCtrl.isMultiColumn) {\n        // In multicolumn day view, the line must go over all columns\n        if (days && days[0].attributes['sg-day'].value == nowDay)\n          $element.append($lineElement);\n      }\n      else\n        _.forEach(days, function(dayElement) {\n          if (dayElement.attributes['sg-day'].value == nowDay) {\n            angular.element(dayElement).find('div').eq(0).append($lineElement);\n          }\n        });\n\n      return $lineElement;\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgNowLine', sgNowLine);\n})();\n"]}
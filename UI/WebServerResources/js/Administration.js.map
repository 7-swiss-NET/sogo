{"version":3,"file":"Administration.js","sources":["Administration/Administration.app.js","Administration/AdministrationController.js"],"names":["configure","$stateProvider","$urlRouterProvider","state","abstract","views","administration","templateUrl","controller","controllerAs","resolve","stateAdministration","url","module","otherwise","Administration","runBlock","$rootScope","$on","event","current","previous","rejection","console","error","angular","config","run","$inject","AdministrationController","$state","$mdDialog","$mdToast","Dialog","User","Authentication","go","vm","this"],"mappings":"CAGA,WACE,YAUA,SAASA,WAAUC,eAAgBC,oBACjCD,eACGE,MAAM,kBACLC,YAAU,EACVC,OACEC,gBACEC,YAAa,sBACbC,WAAY,2BACZC,aAAc,QAGlBC,SACEC,oBAAqBA,uBAGxBR,MAAM,yBACLS,IAAK,UACLP,OACEQ,QACEN,YAAa,kBAMrBL,mBAAmBY,UAAU,WAO/B,QAASH,qBAAoBI,gBAC3B,MAAOA,gBAOT,QAASC,UAASC,YAChBA,WAAWC,IAAI,oBAAqB,SAASC,MAAOC,QAASC,SAAUC,WACrEC,QAAQC,MAAML,MAAOC,QAASC,SAAUC,aAlD5CG,QAAQZ,OAAO,yBAA0B,aAAc,YAAa,cAAe,kBAAmB,wBACnGa,OAAO1B,WACP2B,IAAIX,UAKPhB,UAAU4B,SAAW,iBAAkB,sBAgCvCjB,oBAAoBiB,SAAW,kBAQ/BZ,SAASY,SAAW,iBClDtB,WACE,YAMA,SAASC,0BAAyBC,OAAQC,UAAWC,SAAUC,OAAQC,KAAMvB,oBAAqBwB,gBAOhG,QAASC,IAAGvB,QACViB,OAAOM,GAAG,kBAAoBvB,QAPhC,GAAIwB,IAAKC,IAETD,IAAG/B,eAAiBK,oBAEpB0B,GAAGD,GAAKA,GANVP,yBAAyBD,SAAW,SAAU,YAAa,WAAY,SAAU,OAAQ,sBAAuB,kBAchHH,QACGZ,OAAO,yBACPL,WAAW,2BAA4BqB","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoAdministration */\n\n(function() {\n  'use strict';\n\n  angular.module('SOGo.AdministrationUI', ['ngSanitize', 'ui.router', 'SOGo.Common', 'SOGo.ContactsUI', 'SOGo.Authentication'])\n    .config(configure)\n    .run(runBlock);\n\n  /**\n   * @ngInject\n   */\n  configure.$inject = ['$stateProvider', '$urlRouterProvider'];\n  function configure($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('administration', {\n        abstract: true,\n        views: {\n          administration: {\n            templateUrl: 'administration.html',\n            controller: 'AdministrationController',\n            controllerAs: 'app'\n          }\n        },\n        resolve: {\n          stateAdministration: stateAdministration\n        }\n      })\n      .state('administration.rights', {\n        url: '/rights',\n        views: {\n          module: {\n            templateUrl: 'rights.html'\n          }\n        }\n      });\n\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/rights');\n  }\n\n  /**\n   * @ngInject\n   */\n  stateAdministration.$inject = ['Administration'];\n  function stateAdministration(Administration) {\n    return Administration;\n  }\n\n  /**\n   * @ngInject\n   */\n  runBlock.$inject = ['$rootScope'];\n  function runBlock($rootScope) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n      console.error(event, current, previous, rejection);\n    });\n  }\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoAdministration */\n\n(function() {\n  'use strict';\n  \n  /**\n   * @ngInject\n   */\n  AdministrationController.$inject = ['$state', '$mdDialog', '$mdToast', 'Dialog', 'User', 'stateAdministration', 'Authentication'];\n  function AdministrationController($state, $mdDialog, $mdToast, Dialog, User, stateAdministration, Authentication) {\n    var vm = this;\n\n    vm.administration = stateAdministration;\n\n    vm.go = go;\n  \n    function go(module) {\n      $state.go('administration.' + module);\n    }\n\n  }\n\n  angular\n    .module('SOGo.AdministrationUI')\n    .controller('AdministrationController', AdministrationController);\n\n})();\n"]}
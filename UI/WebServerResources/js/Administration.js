!function(){"use strict";angular.module("SOGo.AdministrationUI",["ui.router","SOGo.Common","SOGo.Authentication","SOGo.PreferencesUI","SOGo.ContactsUI","SOGo.SchedulerUI"]).config(e).run(n),e.$inject=["$stateProvider","$urlServiceProvider"];function e(e,n){e.state("administration",{abstract:!0,views:{administration:{templateUrl:"administration.html",controller:"AdministrationController",controllerAs:"app"}}}).state("administration.rights",{url:"/rights",views:{module:{templateUrl:"rights.html"}}}).state("administration.rights.edit",{url:"/:userId/:folderId/edit",views:{acl:{templateUrl:"UIxAdministrationAclEditor",controller:"AdministrationAclController",controllerAs:"acl"}},resolve:{stateUser:t,stateFolder:r}}),n.rules.otherwise("/rights")}t.$inject=["$q","$stateParams","User"];function t(e,t,r){var n;return n=_.find(r.$users,function(e){return e.uid==t.userId}),angular.isUndefined(n)?r.$filter(t.userId).then(function(i){return n=_.find(r.$users,function(e){return e.uid==t.userId}),angular.isUndefined(n)?e.reject("User with ID "+t.userId+" not found"):n.$folders().then(function(){return n})}):n}r.$inject=["$state","$stateParams","decodeUriFilter","stateUser","AddressBook","Calendar"];function r(e,t,r,n,i,s){var o,d,l=r(t.folderId);return d="Appointment"==(o=_.find(n.$$folders,function(e){return e.name==l})).type?new s({id:o.name.split("/").pop(),owner:o.owner,name:o.displayName}):new i({id:o.name.split("/").pop(),owner:o.owner,name:o.displayName}),n.selectedFolder=d.id,d}n.$inject=["$window","$log","$transitions","$state"];function n(e,t,r,n){e.DebugEnabled||n.defaultErrorHandler(function(){}),r.onError({to:"administration.**"},function(e){"administration"==e.to().name||e.ignored()||(t.error("transition error to "+e.to().name+": "+e.error().detail),n.go({state:"administration.rights"}))})}}(),function(){"use strict";e.$inject=["$timeout","$state","$mdMedia","$mdToast","stateUser","stateFolder","User"];function e(e,t,r,n,i,s,o){var d=this;d.user=i,d.folder=s,d.folderType=angular.isDefined(s.$cards)?"AddressBook":"Calendar",d.selectedUser=null,d.selectedUid=null,d.selectUser=a,d.selectAllRights=function(e){s.$acl.$selectAllRights(e)},d.showRights=function(e){return d.selectedUid==e.uid&&e.rights},d.removeUser=function(t){e(function(){s.$acl.$removeUser(t.uid,s.owner)},500)},d.getTemplate=function(){return angular.isDefined(s.$cards)?"../"+s.owner+"/Contacts/"+s.id+"/UIxContactsUserRightsEditor":"../"+s.owner+"/Calendar/"+s.id+"/UIxCalUserRightsEditor"},d.close=u,d.save=function(){s.$acl.$saveUsersRights(s.owner).then(function(){n.show(n.simple().content(l("ACLs saved")).position("bottom right").hideDelay(3e3)),r("xs")&&u()})},d.userToAdd="",d.searchText="",d.userFilter=function(e){return o.$filter(e,s.$acl.users,{dry:!0,uid:d.user.uid})},d.addUser=function(e){e&&s.$acl.$addUser(e,s.owner).then(function(e){d.userToAdd="",d.searchText="",d.selectedUid=null,e&&a(e)})},s.$acl.$users(s.owner).then(function(e){d.users=e});function a(e,t){if(t&&t.target.parentNode.classList.contains("md-secondary"))return!1;d.selectedUid==e.uid?d.selectedUid=null:(d.selectedUid=e.uid,d.selectedUser=e,d.selectedUser.$rights())}function u(){t.go("administration.rights").then(function(){delete d.user.selectedFolder,d.user=null})}}angular.module("SOGo.AdministrationUI").controller("AdministrationAclController",e)}(),function(){"use strict";e.$inject=["$state","$mdToast","$mdMedia","$mdSidenav","sgConstant","Dialog","encodeUriFilter","User"];function e(e,t,r,n,i,s,o,d){var l=this;l.service=d,l.selectedUser=null,l.users=d.$users,l.go=function(t){e.go("administration."+t),r(i["gt-md"])||n("left").close()},l.filter=function(e){d.$filter(e)},l.selectUser=function(e){l.selectedUser==l.users[e]?l.selectedUser=null:l.users[e].$folders().then(function(){l.selectedUser=l.users[e]})},l.selectFolder=function(t){e.go("administration.rights.edit",{userId:l.selectedUser.uid,folderId:o(t.name)})}}angular.module("SOGo.AdministrationUI").controller("AdministrationController",e)}();
//# sourceMappingURL=Administration.js.map
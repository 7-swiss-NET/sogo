{"version":3,"file":"Scheduler.js","sources":["Scheduler/Scheduler.app.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js"],"names":["configure","$stateProvider","$urlRouterProvider","state","url","views","calendars","templateUrl","controller","controllerAs","resolve","stateCalendars","sticky","deepStateRedirect","calendarView","$stateParams","view","day","stateEventsBlocks","when","now","Date","getDayString","otherwise","Calendar","$calendars","$findAll","window","calendarsData","Component","$eventsBlocksForView","asDate","runBlock","$rootScope","$location","Preferences","$on","event","current","previous","rejection","console","error","length","ready","then","exec","settings","View","replace","angular","module","config","run","$inject","CalendarController","$scope","$state","$timeout","$interval","$log","focus","changeView","$event","date","element","currentTarget","attr","go","vm","this","blocks","data","CalendarListController","$mdDialog","encodeUriFilter","Dialog","selectComponentType","type","options","reload","componentType","isUndefined","$filter","openEvent","openComponent","openTask","task","component","capitalize","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","locals","stateComponent","newComponent","pid","filter","filterpopup","filteredBy","sort","field","sortedBy","cancelSearch","mode","search","value","selectedList","SelectedList","CalendarsController","$q","Settings","User","newCalendar","ev","prompt","l","name","calendar","isEditable","isRemote","owner","UserLogin","$add","addWebCalendar","inputType","$addWebCalendar","confirmDelete","folder","isSubscription","$delete","$broadcast","status","alert","confirm","showLinks","selectedFolder","LinksDialogController","scope","close","hide","id","showProperties","PropertiesDialogController","saveProperties","$save","init","$omit","share","$acl","$users","usersWithACL","users","subscribeToFolder","calendarData","debug","$subscribe","activeUser","service","$watch","_","union","map","o","pick","$subscriptions","$webcalendars","newList","oldList","ids","pluck","i","isEqual","join","each","$get","$setActivation","ComponentController","AddressBook","Alarm","cardFilter","$query","$filterAll","$cards","edit","editAllOccurrences","$getComponent","$futureComponentData","reply","c","$reply","getAlarms","replyAllOccurrences","delegatedTo","$hasAlarm","alarm","c_folder","c_name","c_recurrence_id","organizer","ComponentEditorController","Card","addAttachUrl","toggleRecurrenceEditor","showRecurrenceEditor","$hasCustomRepeat","toggleAttendeesEditor","showAttendeesEditor","addAttendee","card","isString","isValidEmail","emails","searchText","save","form","$valid","cancel","$reset","isNew","getDays","days","start","end","daysUpTo","stringWithSeparator","getHours","hours","push","toString","categories","isDefined","attendees","attendeesEditor","startDate","endDate","newStartDate","oldStartDate","substring","freebusy","updateFreeBusyCoverage","newEndDate","oldEndDate","sgCalendarDayBlock","link","iElement","attrs","pc","block","siblings","left","position","right","css","addClass","restrict","clickBlock","template","directive","sgCalendarDayTable","sgCalendarMonthDay","sgCalendarMonthEvent"],"mappings":"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","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGo.SchedulerUI module */\n\n(function() {\n  'use strict';\n\n  angular.module('SOGo.SchedulerUI', ['ngSanitize', 'ui.router', 'SOGo.Common', 'SOGo.PreferencesUI', 'SOGo.ContactsUI', 'SOGo.MailerUI'])\n    .config(configure)\n    .run(runBlock);\n\n  /**\n   * @ngInject\n   */\n  configure.$inject = ['$stateProvider', '$urlRouterProvider'];\n  function configure($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('calendars', {\n        url: '/calendar',\n        views: {\n          calendars: {\n            templateUrl: 'UIxCalMainFrame', // UI/Templates/SchedulerUI/UIxCalMainFrame.wox\n            controller: 'CalendarsController',\n            controllerAs: 'calendars'\n          }\n        },\n        resolve: {\n          stateCalendars: stateCalendars\n        }\n      })\n      .state('calendars.view', {\n        url: '/{view:(?:day|week|month)}/:day',\n        sticky: true,\n        deepStateRedirect: true,\n        views: {\n          calendarView: {\n            templateUrl: function($stateParams) {\n              // UI/Templates/SchedulerUI/UIxCalDayView.wox or\n              // UI/Templates/SchedulerUI/UIxCalWeekView.wox or\n              // UI/Templates/SchedulerUI/UIxCalMonthView.wox\n              return $stateParams.view + 'view?day=' + $stateParams.day;\n            },\n            controller: 'CalendarController',\n            controllerAs: 'calendar'\n          }\n        },\n        resolve: {\n          stateEventsBlocks: stateEventsBlocks\n        }\n      });\n\n    $urlRouterProvider.when('/calendar/day', function() {\n      // If no date is specified, show today\n      var now = new Date();\n      return '/calendar/day/' + now.getDayString();\n    });\n    $urlRouterProvider.when('/calendar/week', function() {\n      // If no date is specified, show today's week\n      var now = new Date();\n      return '/calendar/week/' + now.getDayString();\n    });\n    $urlRouterProvider.when('/calendar/month', function() {\n      // If no date is specified, show today's month\n      var now = new Date();\n      return '/calendar/month/' + now.getDayString();\n    });\n\n    // If none of the above states are matched, use this as the fallback.\n    // runBlock will also act as a fallback by looking at user's settings\n    $urlRouterProvider.otherwise('/calendar');\n  }\n\n  /**\n   * @ngInject\n   */\n  stateCalendars.$inject = ['Calendar'];\n  function stateCalendars(Calendar) {\n    return Calendar.$calendars || Calendar.$findAll(window.calendarsData);\n  }\n\n  /**\n   * @ngInject\n   */\n  stateEventsBlocks.$inject = ['$stateParams', 'Component'];\n  function stateEventsBlocks($stateParams, Component) {\n    return Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate());\n  }\n\n  /**\n   * @ngInject\n   */\n  runBlock.$inject = ['$rootScope', '$location', 'Preferences'];\n  function runBlock($rootScope, $location, Preferences) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n      console.error(event, current, previous, rejection);\n    });\n    if ($location.url().length === 0) {\n      // Restore user's last view\n      Preferences.ready().then(function() {\n        var view = /(.+)view/.exec(Preferences.settings.Calendar.View);\n        if (view) {\n          $location.replace().url('/calendar/' + view[1]);\n        }\n      });\n    }\n  }\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$state', '$stateParams', '$timeout', '$interval', '$log', 'sgFocus', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $state, $stateParams, $timeout, $interval, $log, focus, Calendar, Component, stateEventsBlocks) {\n    var vm = this;\n\n    vm.blocks = stateEventsBlocks;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    $scope.$on('calendars:list', function() {\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.blocks = data;\n      });\n    });\n\n    // Change calendar's view\n    function changeView($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { view: $stateParams.view, day: date });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$scope', '$timeout', '$state', '$mdDialog', 'encodeUriFilter', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($scope, $timeout, $state, $mdDialog, encodeUriFilter, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $scope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        // TODO: save user settings (Calendar.SelectedList)\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.componentType = type;\n      }\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    function newComponent($event) {\n      var type = 'appointment', component;\n\n      if (vm.componentType == 'tasks')\n        type = 'task';\n      component = new Component({ pid: 'personal', type: type });\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$scope', '$rootScope', '$stateParams', '$state', '$timeout', '$q', '$mdDialog', '$log', 'sgFocus', 'encodeUriFilter', 'Dialog', 'sgSettings', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($scope, $rootScope, $stateParams, $state, $timeout, $q, $mdDialog, $log, focus, encodeUriFilter, Dialog, Settings, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.share = share;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        // Identify which calendar has changed\n        var ids = _.pluck(_.filter(newList, function(o, i) { return !_.isEqual(o, oldList[i]); }), 'id');\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.each(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            calendar.$setActivation().then(function() {\n              $scope.$broadcast('calendars:list');\n            });\n          });\n        }\n      },\n      true // compare for object equality\n    );\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          Calendar.$add(calendar);\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url);\n        });\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .then(function() {\n            $scope.$broadcast('calendars:list');\n          }, function(data, status) {\n            Dialog.alert(l('An error occured while deleting the addressbook \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the addressbook <em>%{0}</em>?', folder.name))\n          .then(function() {\n            folder.$delete()\n              .then(function() {\n                $scope.$broadcast('calendars:list');\n              }, function(data, status) {\n                Dialog.alert(l('An error occured while deleting the addressbook \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function showLinks(selectedFolder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: selectedFolder.id + '/links',\n        locals: {\n        },\n        controller: LinksDialogController\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['scope', '$mdDialog'];\n      function LinksDialogController(scope, $mdDialog) {\n        scope.close = function() {\n          $mdDialog.hide();\n        };\n      }\n    }\n\n    function showProperties(calendar) {\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$mdDialog', 'calendar'];\n      function PropertiesDialogController($mdDialog, calendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(calendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          calendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).catch(function(data) {\n        Dialog.alert(l('Warning'), l('An error occured please try again.'));\n      });\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'AddressBook', 'Alarm', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, AddressBook, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.c_folder).$getComponent(vm.component.c_name, vm.component.c_recurrence_id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$broadcast('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.calendars = Calendar.$calendars;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = angular.isDefined(vm.component.attendees);\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeesEditor = {\n      startDate: vm.component.startDate,\n      endDate: vm.component.endDate,\n      days: getDays(),\n      hours: getHours()\n    };\n\n    $scope.$watch('editor.component.startDate', function(newStartDate, oldStartDate) {\n      if (newStartDate) {\n        $timeout(function() {\n          vm.component.start = new Date(newStartDate.substring(0,10) + ' ' + newStartDate.substring(11,16));\n          vm.component.freebusy = vm.component.updateFreeBusyCoverage();\n          vm.attendeesEditor.days = getDays();\n        });\n      }\n    });\n\n    $scope.$watch('editor.component.endDate', function(newEndDate, oldEndDate) {\n      if (newEndDate) {\n        $timeout(function() {\n          vm.component.end = new Date(newEndDate.substring(0,10) + ' ' + newEndDate.substring(11,16));\n          vm.component.freebusy = vm.component.updateFreeBusyCoverage();\n          vm.attendeesEditor.days = getDays();\n        });\n      }\n    });\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function save(form) {\n      if (form.$valid) {\n        vm.component.$save()\n          .then(function(data) {\n            $rootScope.$broadcast('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(data, status) {\n            $log.debug('failed');\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.hide();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        //hours.push(Component.timeFormat.formatTime(i, 0));\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  function sgCalendarDayBlock() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: [\n        '<div class=\"event draggable\">',\n        '  <div class=\"eventInside\" ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '      <div class=\"gradient\">',\n        '      </div>',\n        '      <div class=\"text\">{{ block.component.c_title }}',\n        '        <span class=\"icons\">',\n        // Component has an alarm\n        '          <md-icon ng-if=\"block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        // Component is confidential\n        '          <md-icon ng-if=\"block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        // Component is private\n        '          <md-icon ng-if=\"block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '       </span></div>',\n        '    </div>',\n        '    <div class=\"topDragGrip\"></div>',\n        '    <div class=\"bottomDragGrip\"></div>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      // Compute overlapping (5%)\n      var pc = 100 / scope.block.siblings,\n          left = scope.block.position * pc,\n          right = 100 - (scope.block.position + 1) * pc;\n\n      if (pc < 100) {\n        if (left > 0)\n          left -= 5;\n        if (right > 0)\n          right -= 5;\n      }\n\n      // Set position\n      iElement.css('left', left + '%');\n      iElement.css('right', right + '%');\n      iElement.addClass('starts' + scope.block.start);\n      iElement.addClass('lasts' + scope.block.length);\n      iElement.addClass('bg-folder' + scope.block.component.c_folder);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block class=\"event draggable\"',\n        '                   ng-repeat=\"block in blocks[day]\"',\n        '                   sg-block=\"block\"',\n        '                   sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @ngInject\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\" />\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay'\n      },\n      replace: true,\n      template: [\n        '<sg-calendar-month-event',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock'\n      },\n      replace: true,\n      template: [\n        '<div class=\"sg-event\">',\n        '        <span ng-if=\"!block.component.c_isallday\">{{ block.starthour }} - </span>',\n        '        {{ block.component.c_title }}',\n        '        <span class=\"icons\">',\n        '          <i ng-if=\"block.component.c_nextalarm\" class=\"md-icon-alarm\"></i>',\n        '          <i ng-if=\"block.component.c_classification == 1\" class=\"md-icon-visibility-off\"></i>',\n        '          <i ng-if=\"block.component.c_classification == 2\" class=\"md-icon-vpn-key\"></i>',\n        '        </span>',\n        '  <div class=\"leftDragGrip\"></div>',\n        '  <div class=\"rightDragGrip\"></div>',\n        '  </div>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      iElement.addClass('bg-folder' + scope.block.component.c_folder);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n"]}
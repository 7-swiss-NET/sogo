{"version":3,"file":"Scheduler.js","sources":["Scheduler/Scheduler.app.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js"],"names":["configure","$stateProvider","$urlRouterProvider","state","url","views","calendars","templateUrl","controller","controllerAs","resolve","stateCalendars","sticky","deepStateRedirect","calendarView","$stateParams","view","day","stateEventsBlocks","when","now","Date","getDayString","otherwise","Calendar","$calendars","$findAll","window","calendarsData","Component","$eventsBlocksForView","asDate","runBlock","$rootScope","$location","Preferences","$on","event","current","previous","rejection","console","error","length","ready","then","exec","settings","View","replace","angular","module","config","run","$inject","CalendarController","$scope","$state","$timeout","$interval","$log","focus","changeView","$event","date","element","currentTarget","attr","go","vm","this","blocks","allDayBlocks","data","CalendarListController","$mdDialog","Dialog","selectComponentType","type","options","reload","componentType","isUndefined","$filter","unselectComponents","saveSelectedList","_","each","component","selected","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","l","components","filter","$deleteComponents","status","openEvent","viewable","openComponent","openTask","task","capitalize","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","locals","stateComponent","newComponent","pid","filterpopup","filteredBy","sort","field","sortedBy","cancelSearch","mode","search","value","selectedList","SelectedList","CalendarsController","$window","Settings","User","newCalendar","ev","prompt","name","calendar","isEditable","isRemote","owner","UserLogin","$add","addWebCalendar","inputType","$addWebCalendar","confirmDelete","folder","isSubscription","$delete","$broadcast","alert","showLinks","LinksDialogController","close","hide","id","showProperties","PropertiesDialogController","saveProperties","$save","init","$omit","editFolder","calendarName","editMode","revertEditing","$reset","renameFolder","$rename","share","$acl","$users","usersWithACL","users","subscribeToFolder","calendarData","debug","$subscribe","today","fragments","location","hash","split","path","join","activeUser","service","$watch","union","map","o","pick","$subscriptions","$webcalendars","newList","oldList","ids","pluck","i","isEqual","$get","$setActivation","ComponentController","AddressBook","Alarm","cardFilter","$query","$filterAll","$cards","edit","editAllOccurrences","$getComponent","$futureComponentData","reply","c","$reply","getAlarms","replyAllOccurrences","delegatedTo","$hasAlarm","alarm","c_folder","c_name","c_recurrence_id","organizer","ComponentEditorController","Card","addAttachUrl","toggleRecurrenceEditor","showRecurrenceEditor","$hasCustomRepeat","toggleAttendeesEditor","showAttendeesEditor","addAttendee","card","isString","isValidEmail","emails","searchText","save","form","$valid","cancel","isNew","getDays","days","start","end","daysUpTo","stringWithSeparator","getHours","hours","push","toString","categories","isDefined","attendees","attendeesEditor","startDate","endDate","newStartDate","oldStartDate","substring","freebusy","updateFreeBusyCoverage","newEndDate","oldEndDate","sgCalendarDayBlock","link","scope","iElement","attrs","pc","block","siblings","left","position","right","css","addClass","restrict","clickBlock","template","directive","sgCalendarDayTable","sgCalendarMonthDay","sgCalendarMonthEvent"],"mappings":"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","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGo.SchedulerUI module */\n\n(function() {\n  'use strict';\n\n  angular.module('SOGo.SchedulerUI', ['ngSanitize', 'ui.router', 'SOGo.Common', 'SOGo.PreferencesUI', 'SOGo.ContactsUI', 'SOGo.MailerUI'])\n    .config(configure)\n    .run(runBlock);\n\n  /**\n   * @ngInject\n   */\n  configure.$inject = ['$stateProvider', '$urlRouterProvider'];\n  function configure($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('calendars', {\n        url: '/calendar',\n        views: {\n          calendars: {\n            templateUrl: 'UIxCalMainFrame', // UI/Templates/SchedulerUI/UIxCalMainFrame.wox\n            controller: 'CalendarsController',\n            controllerAs: 'app'\n          }\n        },\n        resolve: {\n          stateCalendars: stateCalendars\n        }\n      })\n      .state('calendars.view', {\n        url: '/{view:(?:day|week|month)}/:day',\n        sticky: true,\n        deepStateRedirect: true,\n        views: {\n          calendarView: {\n            templateUrl: function($stateParams) {\n              // UI/Templates/SchedulerUI/UIxCalDayView.wox or\n              // UI/Templates/SchedulerUI/UIxCalWeekView.wox or\n              // UI/Templates/SchedulerUI/UIxCalMonthView.wox\n              return $stateParams.view + 'view?day=' + $stateParams.day;\n            },\n            controller: 'CalendarController',\n            controllerAs: 'calendar'\n          }\n        },\n        resolve: {\n          stateEventsBlocks: stateEventsBlocks\n        }\n      });\n\n    $urlRouterProvider.when('/calendar/day', function() {\n      // If no date is specified, show today\n      var now = new Date();\n      return '/calendar/day/' + now.getDayString();\n    });\n    $urlRouterProvider.when('/calendar/week', function() {\n      // If no date is specified, show today's week\n      var now = new Date();\n      return '/calendar/week/' + now.getDayString();\n    });\n    $urlRouterProvider.when('/calendar/month', function() {\n      // If no date is specified, show today's month\n      var now = new Date();\n      return '/calendar/month/' + now.getDayString();\n    });\n\n    // If none of the above states are matched, use this as the fallback.\n    // runBlock will also act as a fallback by looking at user's settings\n    $urlRouterProvider.otherwise('/calendar');\n  }\n\n  /**\n   * @ngInject\n   */\n  stateCalendars.$inject = ['Calendar'];\n  function stateCalendars(Calendar) {\n    return Calendar.$calendars || Calendar.$findAll(window.calendarsData);\n  }\n\n  /**\n   * @ngInject\n   */\n  stateEventsBlocks.$inject = ['$stateParams', 'Component'];\n  function stateEventsBlocks($stateParams, Component) {\n    return Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate());\n  }\n\n  /**\n   * @ngInject\n   */\n  runBlock.$inject = ['$rootScope', '$location', 'Preferences'];\n  function runBlock($rootScope, $location, Preferences) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n      console.error(event, current, previous, rejection);\n    });\n    if ($location.url().length === 0) {\n      // Restore user's last view\n      Preferences.ready().then(function() {\n        var view = /(.+)view/.exec(Preferences.settings.Calendar.View);\n        if (view) {\n          $location.replace().url('/calendar/' + view[1]);\n        }\n      });\n    }\n  }\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$state', '$stateParams', '$timeout', '$interval', '$log', 'sgFocus', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $state, $stateParams, $timeout, $interval, $log, focus, Calendar, Component, stateEventsBlocks) {\n    var vm = this;\n\n    vm.blocks = stateEventsBlocks.blocks;\n    vm.allDayBlocks = stateEventsBlocks.allDayBlocks;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    $scope.$on('calendars:list', function() {\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.blocks = data.blocks;\n        vm.allDayBlocks = data.allDayBlocks;\n      });\n    });\n\n    // Change calendar's view\n    function changeView($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { view: $stateParams.view, day: date });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$scope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($scope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $scope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        // TODO: save user settings (Calendar.SelectedList)\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.each(Component['$' + vm.componentType], function(component) { component.selected = false; });\n    }\n\n    function selectAll() {\n      _.each(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'))\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) { return component.selected; });\n          Calendar.$deleteComponents(components);\n        },  function(data, status) {\n          // Delete failed\n        });\n    }\n\n    function openEvent($event, event) {\n      if (event.viewable)\n        openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      if (task.viewable)\n        openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    function newComponent($event) {\n      var type = 'appointment', component;\n\n      if (vm.componentType == 'tasks')\n        type = 'task';\n      component = new Component({ pid: 'personal', type: type });\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$scope', '$window', '$mdDialog', '$log', 'sgFocus', 'Dialog', 'sgSettings', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($scope, $window, $mdDialog, $log, focus, Dialog, Settings, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    vm.today = today;\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        // Identify which calendar has changed\n        var ids = _.pluck(_.filter(newList, function(o, i) { return !_.isEqual(o, oldList[i]); }), 'id');\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.each(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            calendar.$setActivation().then(function() {\n              $scope.$broadcast('calendars:list');\n            });\n          });\n        }\n      },\n      true // compare for object equality\n    );\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          Calendar.$add(calendar);\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url);\n        });\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .then(function() {\n            $scope.$broadcast('calendars:list');\n          }, function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar <em>%{0}</em>?', folder.name))\n          .then(function() {\n            folder.$delete()\n              .then(function() {\n                $scope.$broadcast('calendars:list');\n              }, function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$mdDialog', 'calendar'];\n      function PropertiesDialogController($mdDialog, calendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(calendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          calendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        }, function(data, status) {\n          Dialog.alert(l('Warning'), data);\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).catch(function(data) {\n        Dialog.alert(l('Warning'), l('An error occured please try again.'));\n      });\n    }\n\n    function today() {\n      var fragments = $window.location.hash.split('/'),\n          state = fragments[1],\n          view = fragments[2],\n          now = new Date(),\n          path = ['#', state, view, now.getDayString()];\n      $window.location = path.join('/');\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'AddressBook', 'Alarm', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, AddressBook, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.c_folder).$getComponent(vm.component.c_name, vm.component.c_recurrence_id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$broadcast('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.calendars = Calendar.$calendars;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = angular.isDefined(vm.component.attendees);\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeesEditor = {\n      startDate: vm.component.startDate,\n      endDate: vm.component.endDate,\n      days: getDays(),\n      hours: getHours()\n    };\n\n    $scope.$watch('editor.component.startDate', function(newStartDate, oldStartDate) {\n      if (newStartDate) {\n        $timeout(function() {\n          vm.component.start = new Date(newStartDate.substring(0,10) + ' ' + newStartDate.substring(11,16));\n          vm.component.freebusy = vm.component.updateFreeBusyCoverage();\n          vm.attendeesEditor.days = getDays();\n        });\n      }\n    });\n\n    $scope.$watch('editor.component.endDate', function(newEndDate, oldEndDate) {\n      if (newEndDate) {\n        $timeout(function() {\n          vm.component.end = new Date(newEndDate.substring(0,10) + ' ' + newEndDate.substring(11,16));\n          vm.component.freebusy = vm.component.updateFreeBusyCoverage();\n          vm.attendeesEditor.days = getDays();\n        });\n      }\n    });\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function save(form) {\n      if (form.$valid) {\n        vm.component.$save()\n          .then(function(data) {\n            $rootScope.$broadcast('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(data, status) {\n            $log.debug('failed');\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.hide();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        //hours.push(Component.timeFormat.formatTime(i, 0));\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  function sgCalendarDayBlock() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: [\n        '<div class=\"sg-event sg-draggable\">',\n        '  <div class=\"eventInside\" ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '      <div class=\"gradient\">',\n        '      </div>',\n        '      <div class=\"text\">{{ block.component.c_title }}',\n        '        <span class=\"icons\">',\n        //         Component has an alarm\n        '          <md-icon ng-if=\"block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //         Component is confidential\n        '          <md-icon ng-if=\"block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //         Component is private\n        '          <md-icon ng-if=\"block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '       </span></div>',\n        '    </div>',\n        '    <div class=\"topDragGrip\"></div>',\n        '    <div class=\"bottomDragGrip\"></div>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      // Compute overlapping (2%)\n      var pc = 100 / scope.block.siblings,\n          left = scope.block.position * pc,\n          right = 100 - (scope.block.position + 1) * pc;\n\n      if (pc < 100) {\n        if (left > 0)\n          left -= 2;\n        if (right > 0)\n          right -= 2;\n      }\n\n      // Add some padding (2%)\n      if (left === 0)\n        left = 2;\n      if (right === 0)\n        right = 2;\n\n      // Set position\n      iElement.css('left', left + '%');\n      iElement.css('right', right + '%');\n      iElement.addClass('starts' + scope.block.start);\n      iElement.addClass('lasts' + scope.block.length);\n      iElement.addClass('bg-folder' + scope.block.component.c_folder);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block class=\"sg-event draggable\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @ngInject\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: [\n        '<div class=\"sg-event sg-draggable\" ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span ng-if=\"!block.component.c_isallday\">{{ block.starthour }} - </span>',\n        '  {{ block.component.c_title }}',\n        '  <span class=\"icons\">',\n        '    <md-icon ng-if=\"block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        '    <md-icon ng-if=\"block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        '    <md-icon ng-if=\"block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '  <div class=\"leftDragGrip\"></div>',\n        '  <div class=\"rightDragGrip\"></div>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      iElement.addClass('bg-folder' + scope.block.component.c_folder);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n"]}
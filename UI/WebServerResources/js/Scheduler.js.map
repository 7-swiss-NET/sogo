{"version":3,"file":"Scheduler.js","sources":["Scheduler/Scheduler.app.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js"],"names":["configure","$stateProvider","$urlRouterProvider","state","url","views","calendars","templateUrl","controller","controllerAs","resolve","stateCalendars","sticky","deepStateRedirect","calendarView","$stateParams","view","day","stateEventsBlocks","when","now","Date","getDayString","otherwise","Calendar","$calendars","$findAll","window","calendarsData","Component","$eventsBlocksForView","asDate","runBlock","$rootScope","$location","Preferences","$on","event","current","previous","rejection","console","error","length","ready","then","exec","settings","View","replace","angular","module","config","run","$inject","CalendarController","$scope","$state","$timeout","$interval","$log","focus","changeView","$event","date","element","currentTarget","attr","go","vm","this","blocks","data","CalendarListController","$mdDialog","encodeUriFilter","Dialog","selectComponentType","type","options","reload","componentType","isUndefined","$filter","unselectComponents","saveSelectedList","_","each","component","selected","selectAll","confirmDeleteSelectedComponents","confirm","l","components","filter","$deleteComponents","status","openEvent","openComponent","openTask","task","capitalize","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","locals","stateComponent","newComponent","pid","filterpopup","filteredBy","sort","field","sortedBy","cancelSearch","mode","search","value","selectedList","SelectedList","CalendarsController","$q","Settings","User","newCalendar","ev","prompt","name","calendar","isEditable","isRemote","owner","UserLogin","$add","addWebCalendar","inputType","$addWebCalendar","confirmDelete","folder","isSubscription","$delete","$broadcast","alert","showLinks","LinksDialogController","close","hide","id","showProperties","PropertiesDialogController","saveProperties","$save","init","$omit","share","$acl","$users","usersWithACL","users","subscribeToFolder","calendarData","debug","$subscribe","activeUser","service","$watch","union","map","o","pick","$subscriptions","$webcalendars","newList","oldList","ids","pluck","i","isEqual","join","$get","$setActivation","ComponentController","AddressBook","Alarm","cardFilter","$query","$filterAll","$cards","edit","editAllOccurrences","$getComponent","$futureComponentData","reply","c","$reply","getAlarms","replyAllOccurrences","delegatedTo","$hasAlarm","alarm","c_folder","c_name","c_recurrence_id","organizer","ComponentEditorController","Card","addAttachUrl","toggleRecurrenceEditor","showRecurrenceEditor","$hasCustomRepeat","toggleAttendeesEditor","showAttendeesEditor","addAttendee","card","isString","isValidEmail","emails","searchText","save","form","$valid","cancel","$reset","isNew","getDays","days","start","end","daysUpTo","stringWithSeparator","getHours","hours","push","toString","categories","isDefined","attendees","attendeesEditor","startDate","endDate","newStartDate","oldStartDate","substring","freebusy","updateFreeBusyCoverage","newEndDate","oldEndDate","sgCalendarDayBlock","link","scope","iElement","attrs","pc","block","siblings","left","position","right","css","addClass","restrict","clickBlock","template","directive","sgCalendarDayTable","sgCalendarMonthDay","sgCalendarMonthEvent"],"mappings":"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","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGo.SchedulerUI module */\n\n(function() {\n  'use strict';\n\n  angular.module('SOGo.SchedulerUI', ['ngSanitize', 'ui.router', 'SOGo.Common', 'SOGo.PreferencesUI', 'SOGo.ContactsUI', 'SOGo.MailerUI'])\n    .config(configure)\n    .run(runBlock);\n\n  /**\n   * @ngInject\n   */\n  configure.$inject = ['$stateProvider', '$urlRouterProvider'];\n  function configure($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('calendars', {\n        url: '/calendar',\n        views: {\n          calendars: {\n            templateUrl: 'UIxCalMainFrame', // UI/Templates/SchedulerUI/UIxCalMainFrame.wox\n            controller: 'CalendarsController',\n            controllerAs: 'calendars'\n          }\n        },\n        resolve: {\n          stateCalendars: stateCalendars\n        }\n      })\n      .state('calendars.view', {\n        url: '/{view:(?:day|week|month)}/:day',\n        sticky: true,\n        deepStateRedirect: true,\n        views: {\n          calendarView: {\n            templateUrl: function($stateParams) {\n              // UI/Templates/SchedulerUI/UIxCalDayView.wox or\n              // UI/Templates/SchedulerUI/UIxCalWeekView.wox or\n              // UI/Templates/SchedulerUI/UIxCalMonthView.wox\n              return $stateParams.view + 'view?day=' + $stateParams.day;\n            },\n            controller: 'CalendarController',\n            controllerAs: 'calendar'\n          }\n        },\n        resolve: {\n          stateEventsBlocks: stateEventsBlocks\n        }\n      });\n\n    $urlRouterProvider.when('/calendar/day', function() {\n      // If no date is specified, show today\n      var now = new Date();\n      return '/calendar/day/' + now.getDayString();\n    });\n    $urlRouterProvider.when('/calendar/week', function() {\n      // If no date is specified, show today's week\n      var now = new Date();\n      return '/calendar/week/' + now.getDayString();\n    });\n    $urlRouterProvider.when('/calendar/month', function() {\n      // If no date is specified, show today's month\n      var now = new Date();\n      return '/calendar/month/' + now.getDayString();\n    });\n\n    // If none of the above states are matched, use this as the fallback.\n    // runBlock will also act as a fallback by looking at user's settings\n    $urlRouterProvider.otherwise('/calendar');\n  }\n\n  /**\n   * @ngInject\n   */\n  stateCalendars.$inject = ['Calendar'];\n  function stateCalendars(Calendar) {\n    return Calendar.$calendars || Calendar.$findAll(window.calendarsData);\n  }\n\n  /**\n   * @ngInject\n   */\n  stateEventsBlocks.$inject = ['$stateParams', 'Component'];\n  function stateEventsBlocks($stateParams, Component) {\n    return Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate());\n  }\n\n  /**\n   * @ngInject\n   */\n  runBlock.$inject = ['$rootScope', '$location', 'Preferences'];\n  function runBlock($rootScope, $location, Preferences) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n      console.error(event, current, previous, rejection);\n    });\n    if ($location.url().length === 0) {\n      // Restore user's last view\n      Preferences.ready().then(function() {\n        var view = /(.+)view/.exec(Preferences.settings.Calendar.View);\n        if (view) {\n          $location.replace().url('/calendar/' + view[1]);\n        }\n      });\n    }\n  }\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$state', '$stateParams', '$timeout', '$interval', '$log', 'sgFocus', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $state, $stateParams, $timeout, $interval, $log, focus, Calendar, Component, stateEventsBlocks) {\n    var vm = this;\n\n    vm.blocks = stateEventsBlocks;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    $scope.$on('calendars:list', function() {\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.blocks = data;\n      });\n    });\n\n    // Change calendar's view\n    function changeView($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { view: $stateParams.view, day: date });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$scope', '$timeout', '$state', '$mdDialog', 'encodeUriFilter', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($scope, $timeout, $state, $mdDialog, encodeUriFilter, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $scope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        // TODO: save user settings (Calendar.SelectedList)\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.each(Component['$' + vm.componentType], function(component) { component.selected = false; });\n    }\n\n    function selectAll() {\n      _.each(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'))\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) { return component.selected; });\n          Calendar.$deleteComponents(components);\n        },  function(data, status) {\n          // Delete failed\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    function newComponent($event) {\n      var type = 'appointment', component;\n\n      if (vm.componentType == 'tasks')\n        type = 'task';\n      component = new Component({ pid: 'personal', type: type });\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$scope', '$rootScope', '$stateParams', '$state', '$timeout', '$q', '$mdDialog', '$log', 'sgFocus', 'encodeUriFilter', 'Dialog', 'sgSettings', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($scope, $rootScope, $stateParams, $state, $timeout, $q, $mdDialog, $log, focus, encodeUriFilter, Dialog, Settings, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.share = share;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        // Identify which calendar has changed\n        var ids = _.pluck(_.filter(newList, function(o, i) { return !_.isEqual(o, oldList[i]); }), 'id');\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.each(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            calendar.$setActivation().then(function() {\n              $scope.$broadcast('calendars:list');\n            });\n          });\n        }\n      },\n      true // compare for object equality\n    );\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          Calendar.$add(calendar);\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url);\n        });\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .then(function() {\n            $scope.$broadcast('calendars:list');\n          }, function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar <em>%{0}</em>?', folder.name))\n          .then(function() {\n            folder.$delete()\n              .then(function() {\n                $scope.$broadcast('calendars:list');\n              }, function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$mdDialog', 'calendar'];\n      function PropertiesDialogController($mdDialog, calendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(calendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          calendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).catch(function(data) {\n        Dialog.alert(l('Warning'), l('An error occured please try again.'));\n      });\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'AddressBook', 'Alarm', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, AddressBook, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.c_folder).$getComponent(vm.component.c_name, vm.component.c_recurrence_id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$broadcast('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component;\n\n    vm.calendars = Calendar.$calendars;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = angular.isDefined(vm.component.attendees);\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeesEditor = {\n      startDate: vm.component.startDate,\n      endDate: vm.component.endDate,\n      days: getDays(),\n      hours: getHours()\n    };\n\n    $scope.$watch('editor.component.startDate', function(newStartDate, oldStartDate) {\n      if (newStartDate) {\n        $timeout(function() {\n          vm.component.start = new Date(newStartDate.substring(0,10) + ' ' + newStartDate.substring(11,16));\n          vm.component.freebusy = vm.component.updateFreeBusyCoverage();\n          vm.attendeesEditor.days = getDays();\n        });\n      }\n    });\n\n    $scope.$watch('editor.component.endDate', function(newEndDate, oldEndDate) {\n      if (newEndDate) {\n        $timeout(function() {\n          vm.component.end = new Date(newEndDate.substring(0,10) + ' ' + newEndDate.substring(11,16));\n          vm.component.freebusy = vm.component.updateFreeBusyCoverage();\n          vm.attendeesEditor.days = getDays();\n        });\n      }\n    });\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function save(form) {\n      if (form.$valid) {\n        vm.component.$save()\n          .then(function(data) {\n            $rootScope.$broadcast('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(data, status) {\n            $log.debug('failed');\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.hide();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        //hours.push(Component.timeFormat.formatTime(i, 0));\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  function sgCalendarDayBlock() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: [\n        '<div class=\"sg-event sg-draggable\">',\n        '  <div class=\"eventInside\" ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '      <div class=\"gradient\">',\n        '      </div>',\n        '      <div class=\"text\">{{ block.component.c_title }}',\n        '        <span class=\"icons\">',\n        // Component has an alarm\n        '          <md-icon ng-if=\"block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        // Component is confidential\n        '          <md-icon ng-if=\"block.component.c_classification == 1\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        // Component is private\n        '          <md-icon ng-if=\"block.component.c_classification == 2\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '       </span></div>',\n        '    </div>',\n        '    <div class=\"topDragGrip\"></div>',\n        '    <div class=\"bottomDragGrip\"></div>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      // Compute overlapping (5%)\n      var pc = 100 / scope.block.siblings,\n          left = scope.block.position * pc,\n          right = 100 - (scope.block.position + 1) * pc;\n\n      if (pc < 100) {\n        if (left > 0)\n          left -= 5;\n        if (right > 0)\n          right -= 5;\n      }\n\n      // Set position\n      iElement.css('left', left + '%');\n      iElement.css('right', right + '%');\n      iElement.addClass('starts' + scope.block.start);\n      iElement.addClass('lasts' + scope.block.length);\n      iElement.addClass('bg-folder' + scope.block.component.c_folder);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block class=\"sg-event draggable\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @ngInject\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: [\n        '<div class=\"sg-event sg-draggable\" ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span ng-if=\"!block.component.c_isallday\">{{ block.starthour }} - </span>',\n        '  {{ block.component.c_title }}',\n        '  <span class=\"icons\">',\n        '    <i ng-if=\"block.component.c_nextalarm\" class=\"md-icon-alarm\"></i>',\n        '    <i ng-if=\"block.component.c_classification == 1\" class=\"md-icon-visibility-off\"></i>',\n        '    <i ng-if=\"block.component.c_classification == 2\" class=\"md-icon-vpn-key\"></i>',\n        '  </span>',\n        '  <div class=\"leftDragGrip\"></div>',\n        '  <div class=\"rightDragGrip\"></div>',\n        '</div>'\n      ].join(''),\n      link: link\n    };\n\n    function link(scope, iElement, attrs) {\n      iElement.addClass('bg-folder' + scope.block.component.c_folder);\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n"]}
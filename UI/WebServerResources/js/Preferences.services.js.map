{"version":3,"sources":["Preferences/Preferences.service.js"],"names":["Preferences","_this","this","defaults","settings","defaultsPromise","$$resource","fetch","then","data","labels","_","object","map","SOGoMailLabelsColors","value","key","charAt","Vacation","endDate","Date","parseInt","endDateEnabled","autoReplyEmailAddresses","length","join","angular","isUndefined","isDefined","window","defaultEmailAddresses","daysBetweenResponse","Forward","forwardAddress","SOGoCalendarCategoriesColors","SOGoCalendarCategories","SOGoContactsCategories","extend","settingsPromise","Calendar","PreventInvitationsWhitelist","match","exec","$User","uid","cn","c_email","$factory","$q","$timeout","$log","Settings","Resource","User","activeUser","module","e","factory","prototype","ready","all","$save","save","$omit","deep","preferences","whitelist","forEach","copy","toLowerCase","replace","substring","getTime","filter","split","v","each","user","$shortFormat"],"mappings":"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","file":"Preferences.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Preferences\n   * @constructor\n   */\n  function Preferences() {\n    var _this = this;\n\n    this.defaults = {};\n    this.settings = {};\n\n    this.defaultsPromise = Preferences.$$resource.fetch(\"jsonDefaults\").then(function(data) {\n      // We swap $key -> _$key to avoid an Angular bug (https://github.com/angular/angular.js/issues/6266)\n      var labels = _.object(_.map(data.SOGoMailLabelsColors, function(value, key) {\n        if (key.charAt(0) == '$')\n          return ['_' + key, value];\n        return [key, value];\n      }));\n\n      data.SOGoMailLabelsColors = labels;\n\n      // We convert our list of autoReplyEmailAddresses/forwardAddress into a string.\n      // We also convert our date objects into real date, otherwise we'll have strings\n      // or undefined values and the md-datepicker does NOT like this.\n      if (data.Vacation) {\n        if (data.Vacation.endDate)\n          data.Vacation.endDate = new Date(parseInt(data.Vacation.endDate) * 1000);\n        else {\n          data.Vacation.endDateEnabled = 0;\n          data.Vacation.endDate = new Date();\n        }\n        if (data.Vacation.autoReplyEmailAddresses && data.Vacation.autoReplyEmailAddresses.length)\n          data.Vacation.autoReplyEmailAddresses = data.Vacation.autoReplyEmailAddresses.join(\",\");\n        else\n          delete data.Vacation.autoReplyEmailAddresses;\n      } else\n        data.Vacation = {};\n\n      if (angular.isUndefined(data.Vacation.autoReplyEmailAddresses) &&\n          angular.isDefined(window.defaultEmailAddresses))\n        data.Vacation.autoReplyEmailAddresses = window.defaultEmailAddresses;\n\n      if (angular.isUndefined(data.Vacation.daysBetweenResponse))\n        data.Vacation.daysBetweenResponse = 7;\n\n      if (angular.isUndefined(data.Vacation.endDate)) {\n        data.Vacation.endDateEnabled = 0;\n        data.Vacation.endDate = new Date();\n      }\n\n      if (data.Forward && data.Forward.forwardAddress)\n        data.Forward.forwardAddress = data.Forward.forwardAddress.join(\",\");\n\n      if (angular.isUndefined(data.SOGoCalendarCategoriesColors)) {\n        data.SOGoCalendarCategoriesColors = {};\n        data.SOGoCalendarCategories = [];\n      }\n\n      if (angular.isUndefined(data.SOGoContactsCategories))\n        data.SOGoContactsCategories = [];\n\n      angular.extend(_this.defaults, data);\n\n      return _this.defaults;\n    });\n\n    this.settingsPromise = Preferences.$$resource.fetch(\"jsonSettings\").then(function(data) {\n        // We convert our PreventInvitationsWhitelist hash into a array of user\n      if (data.Calendar) {\n        if (data.Calendar.PreventInvitationsWhitelist)\n          data.Calendar.PreventInvitationsWhitelist = _.map(data.Calendar.PreventInvitationsWhitelist, function(value, key) {\n            var match = /^(.+)\\s<(\\S+)>$/.exec(value);\n            return new Preferences.$User({uid: key, cn: match[1], c_email: match[2]});\n          });\n        else\n          data.Calendar.PreventInvitationsWhitelist = [];\n      }\n\n      angular.extend(_this.settings, data);\n\n      return _this.settings;\n    });\n  }\n\n  /**\n   * @memberof Preferences\n   * @desc The factory we'll use to register with Angular\n   * @returns the Preferences constructor\n   */\n  Preferences.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'User', function($q, $timeout, $log, Settings, Resource, User) {\n    angular.extend(Preferences, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL'), Settings.activeUser()),\n      activeUser: Settings.activeUser(),\n      $User: User\n    });\n\n    return new Preferences(); // return unique instance\n  }];\n\n  /* Initialize module if necessary */\n  try {\n    angular.module('SOGo.PreferencesUI');\n  }\n  catch(e) {\n    angular.module('SOGo.PreferencesUI', ['SOGo.Common']);\n  }\n\n  /* Factory registration in Angular module */\n  angular.module('SOGo.PreferencesUI')\n    .factory('Preferences', Preferences.$factory);\n\n  /**\n   * @function ready\n   * @memberof Preferences.prototype\n   * @desc Combine promises used to load user's defaults and settings.\n   * @return a combined promise\n   */\n  Preferences.prototype.ready = function() {\n    return Preferences.$q.all([this.defaultsPromise, this.settingsPromise]);\n  };\n\n  /**\n   * @function $save\n   * @memberof Preferences.prototype\n   * @desc Save the preferences to the server.\n   */\n  Preferences.prototype.$save = function() {\n    var _this = this;\n\n    return Preferences.$$resource.save(\"Preferences\", this.$omit(true))\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        //_this.$shadowData = _this.$omit(true);\n        return data;\n      });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Preferences.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @param {Boolean} [deep] - make a deep copy if true\n   * @return an object literal copy of the Preferences instance\n   */\n  Preferences.prototype.$omit = function(deep) {\n    var preferences, labels, whitelist;\n\n    preferences = {};\n    whitelist = {};\n\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        if (deep)\n          preferences[key] = angular.copy(value);\n        else\n          preferences[key] = value;\n      }\n    });\n\n    // We swap _$key -> $key to avoid an Angular bug (https://github.com/angular/angular.js/issues/6266)\n    labels = _.object(_.map(preferences.defaults.SOGoMailLabelsColors, function(value, key) {\n      if (key.charAt(0) == '_' && key.charAt(1) == '$') {\n        // New key, let's take the value and flatten it\n        if (key.length > 2 && key.charAt(2) == '$') {\n          return [value[0].toLowerCase().replace(/[ \\(\\)\\/\\{%\\*<>\\\\\\\"]/g, \"_\"), value];\n        }\n        return [key.substring(1), value];\n      }\n      return [key, value];\n    }));\n\n    preferences.defaults.SOGoMailLabelsColors = labels;\n\n    if (preferences.defaults.Vacation) {\n      if (preferences.defaults.Vacation.endDateEnabled)\n        preferences.defaults.Vacation.endDate = preferences.defaults.Vacation.endDate.getTime()/1000;\n      else\n        preferences.defaults.Vacation.endDate = 0;\n\n      if (preferences.defaults.Vacation.autoReplyEmailAddresses)\n        preferences.defaults.Vacation.autoReplyEmailAddresses = _.filter(preferences.defaults.Vacation.autoReplyEmailAddresses.split(\",\"), function(v) { return v.length; });\n      else\n        preferences.defaults.Vacation.autoReplyEmailAddresses = [];\n    }\n\n    if (preferences.defaults.Forward && preferences.defaults.Forward.forwardAddress)\n      preferences.defaults.Forward.forwardAddress = preferences.defaults.Forward.forwardAddress.split(\",\");\n\n    if (preferences.settings.Calendar && preferences.settings.Calendar.PreventInvitationsWhitelist) {\n      _.each(preferences.settings.Calendar.PreventInvitationsWhitelist, function(user) {\n        whitelist[user.uid] = user.$shortFormat();\n      });\n      preferences.settings.Calendar.PreventInvitationsWhitelist = whitelist;\n    }\n\n    return preferences;\n  };\n\n})();\n"]}